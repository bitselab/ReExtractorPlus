{
  "results": [
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "33650724629c453992dd32ccff2203fb6ef8ed99",
      "url": "https://github.com/junit-team/junit5/commit/33650724629c453992dd32ccff2203fb6ef8ed99",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate compositeTestExecutionListener() : EngineExecutionListener renamed to private compositeEngineExecutionListener() : EngineExecutionListener in class org.junit.platform.launcher.core.CompositeEngineExecutionListenerTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getSampleMethodTestDescriptor() : TestDescriptor renamed to private anyTestDescriptor() : TestDescriptor in class org.junit.platform.launcher.core.CompositeEngineExecutionListenerTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate anyTestExecutionResult() : TestExecutionResult extracted from package shouldNotThrowExceptionButLogIfExecutionFinishedListenerMethodFails(logRecordListener LogRecordListener) : void in class org.junit.platform.launcher.core.CompositeEngineExecutionListenerTests",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate getDemoMethodTestDescriptor() : DemoMethodTestDescriptor inlined to private anyTestDescriptor() : TestDescriptor in class org.junit.platform.launcher.core.CompositeEngineExecutionListenerTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate compositeTestExecutionListener() : EngineExecutionListener renamed to private compositeEngineExecutionListener() : EngineExecutionListener in class org.junit.platform.launcher.core.CompositeEngineExecutionListenerTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getDemoMethodTestDescriptor() : DemoMethodTestDescriptor renamed to private anyTestDescriptor() : TestDescriptor in class org.junit.platform.launcher.core.CompositeEngineExecutionListenerTests",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tDemoMethodTestDescriptor to TestDescriptor in method private anyTestDescriptor() : TestDescriptor from class org.junit.platform.launcher.core.CompositeEngineExecutionListenerTests",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "90a0ccf2087e3573f3629c216aaaceff5691780a",
      "url": "https://github.com/junit-team/junit5/commit/90a0ccf2087e3573f3629c216aaaceff5691780a",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getDemoMethodTestDescriptor() : DemoMethodTestDescriptor renamed to private anyTestDescriptor() : DemoMethodTestDescriptor in class org.junit.platform.launcher.core.CompositeTestExecutionListenerTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getSampleMethodTestIdentifier() : TestIdentifier renamed to private anyTestIdentifier() : TestIdentifier in class org.junit.platform.launcher.core.CompositeTestExecutionListenerTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate anyTestPlan() : TestPlan extracted from package shouldNotThrowExceptionButLogIfTesPlanExecutionStartedListenerMethodFails(logRecordListener LogRecordListener) : void in class org.junit.platform.launcher.core.CompositeTestExecutionListenerTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate anyTestPlan() : TestPlan extracted from package shouldNotThrowExceptionButLogIfTesPlanExecutionFinishedListenerMethodFails(logRecordListener LogRecordListener) : void in class org.junit.platform.launcher.core.CompositeTestExecutionListenerTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getDemoMethodTestDescriptor() : DemoMethodTestDescriptor renamed to private anyTestDescriptor() : DemoMethodTestDescriptor in class org.junit.platform.launcher.core.CompositeTestExecutionListenerTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate anyTestPlan() : TestPlan extracted from package shouldNotThrowExceptionButLogIfTesPlanExecutionStartedListenerMethodFails(logRecordListener LogRecordListener) : void in class org.junit.platform.launcher.core.CompositeTestExecutionListenerTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate anyTestPlan() : TestPlan extracted from package shouldNotThrowExceptionButLogIfTesPlanExecutionFinishedListenerMethodFails(logRecordListener LogRecordListener) : void in class org.junit.platform.launcher.core.CompositeTestExecutionListenerTests",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "16de26ffe8d2c01661c5dd7d1673e2510c0be8ba",
      "url": "https://github.com/junit-team/junit5/commit/16de26ffe8d2c01661c5dd7d1673e2510c0be8ba",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic streamFields(clazz Class<?>, predicate Predicate<Field>, traversalMode HierarchyTraversalMode) : Stream<Field> extracted from public findFields(clazz Class<?>, predicate Predicate<Field>, traversalMode HierarchyTraversalMode) : List<Field> in class org.junit.platform.commons.util.ReflectionUtils",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic streamMethods(clazz Class<?>, predicate Predicate<Method>, traversalMode HierarchyTraversalMode) : Stream<Method> extracted from public findMethods(clazz Class<?>, predicate Predicate<Method>, traversalMode HierarchyTraversalMode) : List<Method> in class org.junit.platform.commons.util.ReflectionUtils",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic streamFields(clazz Class<?>, predicate Predicate<Field>, traversalMode HierarchyTraversalMode) : Stream<Field> extracted from package registerExtensionsFromFields(registrar ExtensionRegistrar, clazz Class<?>, instance Object) : void in class org.junit.jupiter.engine.descriptor.ExtensionUtils & moved to class org.junit.platform.commons.util.ReflectionUtils",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic streamFields(clazz Class<?>, predicate Predicate<Field>, traversalMode HierarchyTraversalMode) : Stream<Field> extracted from public findFields(clazz Class<?>, predicate Predicate<Field>, traversalMode HierarchyTraversalMode) : List<Field> in class org.junit.platform.commons.util.ReflectionUtils",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic streamMethods(clazz Class<?>, predicate Predicate<Method>, traversalMode HierarchyTraversalMode) : Stream<Method> extracted from public findMethods(clazz Class<?>, predicate Predicate<Method>, traversalMode HierarchyTraversalMode) : List<Method> in class org.junit.platform.commons.util.ReflectionUtils",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "11f8f765da25ce848be14c0d7313ae33db8b72f8",
      "url": "https://github.com/junit-team/junit5/commit/11f8f765da25ce848be14c0d7313ae33db8b72f8",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.junit.jupiter.api.AssertTimeout.ExecutionTimeoutException moved to org.junit.jupiter.api.AssertTimeoutPreemptively.ExecutionTimeoutException",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.junit.jupiter.api.AssertTimeout.TimeoutThreadFactory moved to org.junit.jupiter.api.AssertTimeoutPreemptively.TimeoutThreadFactory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.jupiter.api.AssertTimeoutPreemptively from Class org.junit.jupiter.api.AssertTimeout",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests from Class org.junit.jupiter.api.AssertTimeoutAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, executable Executable) : void from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, executable Executable) : void from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, executable Executable, message String) : void from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, executable Executable, message String) : void from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, executable Executable, messageSupplier Supplier<String>) : void from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, executable Executable, messageSupplier Supplier<String>) : void from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>) : T from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, message String) : T from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, message String) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>) : T from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>, failureFactory TimeoutFailureFactory<E>) : T from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>, failureFactory Assertions.TimeoutFailureFactory<E>) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate submitTask(supplier ThrowingSupplier<T>, threadReference AtomicReference<Thread>, executorService ExecutorService) : Future<T> from class org.junit.jupiter.api.AssertTimeout to private submitTask(supplier ThrowingSupplier<T>, threadReference AtomicReference<Thread>, executorService ExecutorService) : Future<T> from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate resolveFutureAndHandleException(future Future<T>, timeout Duration, messageSupplier Supplier<String>, threadSupplier Supplier<Thread>, failureFactory TimeoutFailureFactory<E>) : T from class org.junit.jupiter.api.AssertTimeout to private resolveFutureAndHandleException(future Future<T>, timeout Duration, messageSupplier Supplier<String>, threadSupplier Supplier<Thread>, failureFactory Assertions.TimeoutFailureFactory<E>) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createAssertionFailure(timeout Duration, messageSupplier Supplier<String>, cause Throwable) : AssertionFailedError from class org.junit.jupiter.api.AssertTimeout to private createAssertionFailure(timeout Duration, messageSupplier Supplier<String>, cause Throwable) : AssertionFailedError from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForExecutableThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForExecutableThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForExecutableThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForExecutableThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForExecutableThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForExecutableThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageSupplierForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageSupplierForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageSupplierForExecutableThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageSupplierForExecutableThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForSupplierThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForSupplierThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForSupplierThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForSupplierThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForSupplierThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForSupplierThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageSupplierForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageSupplierForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyUsesThreadsWithSpecificNamePrefix() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyUsesThreadsWithSpecificNamePrefix() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatCompletesBeforeTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatCompletesBeforeTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate waitForInterrupt() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to private waitForInterrupt() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate assertStackTraceContains(stackTrace StackTraceElement[], className String, methodName String) : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to private assertStackTraceContains(stackTrace StackTraceElement[], className String, methodName String) : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate PREEMPTIVE_TIMEOUT : Duration from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to private PREEMPTIVE_TIMEOUT : Duration from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate TIMEOUT_EXCEPTION_FACTORY : Assertions.TimeoutFailureFactory<TimeoutException> from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to private TIMEOUT_EXCEPTION_FACTORY : Assertions.TimeoutFailureFactory<TimeoutException> from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.junit.jupiter.api.AssertTimeout.ExecutionTimeoutException moved to org.junit.jupiter.api.AssertTimeoutPreemptively.ExecutionTimeoutException",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.junit.jupiter.api.AssertTimeout.TimeoutThreadFactory moved to org.junit.jupiter.api.AssertTimeoutPreemptively.TimeoutThreadFactory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.jupiter.api.AssertTimeoutPreemptively from class org.junit.jupiter.api.AssertTimeout",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests from class org.junit.jupiter.api.AssertTimeoutAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, executable Executable) : void from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, executable Executable) : void from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, executable Executable, message String) : void from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, executable Executable, message String) : void from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, executable Executable, messageSupplier Supplier<String>) : void from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, executable Executable, messageSupplier Supplier<String>) : void from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>) : T from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, message String) : T from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, message String) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>) : T from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>, failureFactory TimeoutFailureFactory<E>) : T from class org.junit.jupiter.api.AssertTimeout to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>, failureFactory Assertions.TimeoutFailureFactory<E>) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate submitTask(supplier ThrowingSupplier<T>, threadReference AtomicReference<Thread>, executorService ExecutorService) : Future<T> from class org.junit.jupiter.api.AssertTimeout to private submitTask(supplier ThrowingSupplier<T>, threadReference AtomicReference<Thread>, executorService ExecutorService) : Future<T> from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate resolveFutureAndHandleException(future Future<T>, timeout Duration, messageSupplier Supplier<String>, threadSupplier Supplier<Thread>, failureFactory TimeoutFailureFactory<E>) : T from class org.junit.jupiter.api.AssertTimeout to private resolveFutureAndHandleException(future Future<T>, timeout Duration, messageSupplier Supplier<String>, threadSupplier Supplier<Thread>, failureFactory Assertions.TimeoutFailureFactory<E>) : T from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createAssertionFailure(timeout Duration, messageSupplier Supplier<String>, cause Throwable) : AssertionFailedError from class org.junit.jupiter.api.AssertTimeout to private createAssertionFailure(timeout Duration, messageSupplier Supplier<String>, cause Throwable) : AssertionFailedError from class org.junit.jupiter.api.AssertTimeoutPreemptively",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForExecutableThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForExecutableThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForExecutableThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForExecutableThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForExecutableThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForExecutableThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageSupplierForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageSupplierForExecutableThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageSupplierForExecutableThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageSupplierForExecutableThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForSupplierThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForSupplierThatCompletesBeforeTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForSupplierThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForSupplierThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForSupplierThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForSupplierThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyWithMessageSupplierForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyWithMessageSupplierForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyUsesThreadsWithSpecificNamePrefix() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyUsesThreadsWithSpecificNamePrefix() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatCompletesAfterTheTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatThrowsAnAssertionFailedError() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatThrowsAnException() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatCompletesBeforeTimeout() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to package assertTimeoutPreemptivelyThrowingTimeoutExceptionWithMessageForSupplierThatCompletesBeforeTimeout() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate waitForInterrupt() : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to private waitForInterrupt() : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate assertStackTraceContains(stackTrace StackTraceElement[], className String, methodName String) : void from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to private assertStackTraceContains(stackTrace StackTraceElement[], className String, methodName String) : void from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate PREEMPTIVE_TIMEOUT : Duration from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to private PREEMPTIVE_TIMEOUT : Duration from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate TIMEOUT_EXCEPTION_FACTORY : Assertions.TimeoutFailureFactory<TimeoutException> from class org.junit.jupiter.api.AssertTimeoutAssertionsTests to private TIMEOUT_EXCEPTION_FACTORY : Assertions.TimeoutFailureFactory<TimeoutException> from class org.junit.jupiter.api.AssertTimeoutPreemptivelyAssertionsTests",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "ea17fa254363e69a12cc00bbc2cbaaea8c9714a9",
      "url": "https://github.com/junit-team/junit5/commit/ea17fa254363e69a12cc00bbc2cbaaea8c9714a9",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutException(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>) : T renamed to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>, failureFactory TimeoutFailureFactory<E>) : T in class org.junit.jupiter.api.AssertTimeout",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic assertTimeoutPreemptivelyThrowingTimeoutException(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>) : T renamed to public assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>, failureFactory TimeoutFailureFactory<E>) : T in class org.junit.jupiter.api.Assertions",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.junit.jupiter.api.AssertTimeout.TimeoutFailureFactory moved to org.junit.jupiter.api.Assertions.TimeoutFailureFactory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tfailure : Throwable in method package timeoutExceededInSeparateThread() : void from class org.junit.jupiter.engine.extension.TimeoutExtensionTests.SeparateThread",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.junit.jupiter.api.AssertTimeout.TimeoutFailureFactory moved to org.junit.jupiter.api.Assertions.TimeoutFailureFactory",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage assertTimeoutPreemptivelyThrowingTimeoutException(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>) : T renamed to package assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>, failureFactory TimeoutFailureFactory<E>) : T in class org.junit.jupiter.api.AssertTimeout",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic assertTimeoutPreemptivelyThrowingTimeoutException(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>) : T renamed to public assertTimeoutPreemptively(timeout Duration, supplier ThrowingSupplier<T>, messageSupplier Supplier<String>, failureFactory TimeoutFailureFactory<E>) : T in class org.junit.jupiter.api.Assertions",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tfailure : Throwable in method package timeoutExceededInSeparateThread() : void from class org.junit.jupiter.engine.extension.TimeoutExtensionTests.SeparateThread",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "254bb5e20c4f4fed129dd1fd972d5a6c5a180353",
      "url": "https://github.com/junit-team/junit5/commit/254bb5e20c4f4fed129dd1fd972d5a6c5a180353",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tMASKED_TIMEOUT_EXCEPTION : Throwing to TIMEOUT_EXCEPTION : Throwing in class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor.Throwing",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate createFutureResolver(messageOrSupplier Object, thread Supplier<Thread>, throwing Throwing) : FutureResolverWithExceptionHandling renamed to private createTimeoutFailureFactory(messageOrSupplier Object, thread Supplier<Thread>, throwing Throwing) : TimeoutFailureFactory<?> in class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tFutureResolverWithExceptionHandling to TimeoutFailureFactory<?> in method private createTimeoutFailureFactory(messageOrSupplier Object, thread Supplier<Thread>, throwing Throwing) : TimeoutFailureFactory<?> from class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.api.AssertTimeout.FutureResolverWithExceptionHandling renamed to org.junit.jupiter.api.AssertTimeout.TimeoutFailureFactory",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic handleTimeoutAndThrow(ex TimeoutException, timeoutInMillis long) : void renamed to public handleTimeout(ex TimeoutException, timeoutInMillis long) : T in class org.junit.jupiter.api.AssertTimeout.TimeoutFailureFactory",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tvoid to T in method public handleTimeout(ex TimeoutException, timeoutInMillis long) : T from class org.junit.jupiter.api.AssertTimeout.TimeoutFailureFactory",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic handleTimeoutAndThrow(ex TimeoutException, timeoutInMillis long) : void renamed to public handleTimeout(ex TimeoutException, timeoutInMillis long) : AssertionFailedError in class org.junit.jupiter.api.AssertTimeout.AssertiveFutureResolver",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tvoid to AssertionFailedError in method public handleTimeout(ex TimeoutException, timeoutInMillis long) : AssertionFailedError from class org.junit.jupiter.api.AssertTimeout.AssertiveFutureResolver",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresolver : FutureResolverWithExceptionHandling to factory : TimeoutFailureFactory<?> in method package executeThrowing(timeout Duration, supplier ThrowingSupplier<T>, messageOrSupplier Object) : T from class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresolver : FutureResolverWithExceptionHandling to factory : TimeoutFailureFactory<?> in method package executeThrowing(timeout Duration, supplier ThrowingSupplier<T>, messageOrSupplier Object) : T from class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate createFutureResolver(messageOrSupplier Object, thread Supplier<Thread>, throwing Throwing) : FutureResolverWithExceptionHandling renamed to private createTimeoutFailureFactory(messageOrSupplier Object, thread Supplier<Thread>, throwing Throwing) : TimeoutFailureFactory<?> in class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tFutureResolverWithExceptionHandling to TimeoutFailureFactory<?> in method private createTimeoutFailureFactory(messageOrSupplier Object, thread Supplier<Thread>, throwing Throwing) : TimeoutFailureFactory<?> from class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic handleTimeoutAndThrow(ex TimeoutException, timeoutInMillis long) : void renamed to public handleTimeout(ex TimeoutException, timeoutInMillis long) : AssertionFailedError in class org.junit.jupiter.api.AssertTimeout.AssertiveFutureResolver",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tvoid to AssertionFailedError in method public handleTimeout(ex TimeoutException, timeoutInMillis long) : AssertionFailedError from class org.junit.jupiter.api.AssertTimeout.AssertiveFutureResolver",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tvoid to T in method public handleTimeout(ex TimeoutException, timeoutInMillis long) : T from class org.junit.jupiter.api.AssertTimeout.TimeoutFailureFactory",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.api.AssertTimeout.FutureResolverWithExceptionHandling renamed to org.junit.jupiter.api.AssertTimeout.TimeoutFailureFactory",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tMASKED_TIMEOUT_EXCEPTION : Throwing to TIMEOUT_EXCEPTION : Throwing in class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor.Throwing",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresolver : FutureResolverWithExceptionHandling to factory : TimeoutFailureFactory<?> in method package executeThrowing(timeout Duration, supplier ThrowingSupplier<T>, messageOrSupplier Object) : T from class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresolver : FutureResolverWithExceptionHandling to factory : TimeoutFailureFactory<?> in method package executeThrowing(timeout Duration, supplier ThrowingSupplier<T>, messageOrSupplier Object) : T from class org.junit.jupiter.api.AssertTimeout.PreemptiveTimeoutAssertionExecutor",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "36550401836858a1e6987b06d4c15f3ed95c19d0",
      "url": "https://github.com/junit-team/junit5/commit/36550401836858a1e6987b06d4c15f3ed95c19d0",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tthreadReference : AtomicReference<Thread> to threadSupplier : Supplier<Thread> in class org.junit.jupiter.api.AssertTimeout.AssertiveFutureResolver",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tthreadReference : AtomicReference<Thread> to threadSupplier : Supplier<Thread> in class org.junit.jupiter.api.AssertTimeout.AssertiveFutureResolver",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tthreadReference : AtomicReference<Thread> to threadSupplier : Supplier<Thread> in class org.junit.jupiter.api.AssertTimeout.AssertiveFutureResolver",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tthreadReference : AtomicReference<Thread> to threadSupplier : Supplier<Thread> in class org.junit.jupiter.api.AssertTimeout.AssertiveFutureResolver",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "e83cdf02b2301b90145ccbb4789924a2c737c8db",
      "url": "https://github.com/junit-team/junit5/commit/e83cdf02b2301b90145ccbb4789924a2c737c8db",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate supportsCsvHeaders(csvSource CsvSource) : void extracted from package supportsCsvHeadersWhenUsingTextBlockAttribute() : void in class org.junit.jupiter.params.provider.CsvArgumentsProviderTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate supportsCsvHeaders(csvSource CsvSource) : void extracted from package supportsCsvHeadersWhenUsingValueAttribute() : void in class org.junit.jupiter.params.provider.CsvArgumentsProviderTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate supportsCsvHeaders(csvSource CsvSource) : void extracted from package supportsCsvHeadersWhenUsingTextBlockAttribute() : void in class org.junit.jupiter.params.provider.CsvArgumentsProviderTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate supportsCsvHeaders(csvSource CsvSource) : void extracted from package supportsCsvHeadersWhenUsingValueAttribute() : void in class org.junit.jupiter.params.provider.CsvArgumentsProviderTests",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "d1327f36b337c622f9efe32f6873730d92dcbe31",
      "url": "https://github.com/junit-team/junit5/commit/d1327f36b337c622f9efe32f6873730d92dcbe31",
      "ourApproach": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.LifecycleMethodShadowingTests renamed to org.junit.jupiter.engine.LifecycleMethodSupersedingTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.LifecycleMethodShadowingTests renamed to org.junit.jupiter.engine.LifecycleMethodSupersedingTests",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "856868d9f692aa96203e91691d9391758a00a7dc",
      "url": "https://github.com/junit-team/junit5/commit/856868d9f692aa96203e91691d9391758a00a7dc",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate throwTestAbortedException(message String) : void renamed to private throwAssumptionFailed(message String) : void in class org.junit.jupiter.api.Assumptions",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertTestAbortedException(expectedMessage String, executable Executable) : void extracted from private assertAssumptionFailure(msg String, executable Executable) : void in class org.junit.jupiter.api.AssumptionsTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate throwTestAbortedException(message String) : void renamed to private throwAssumptionFailed(message String) : void in class org.junit.jupiter.api.Assumptions",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertTestAbortedException(expectedMessage String, executable Executable) : void extracted from private assertAssumptionFailure(msg String, executable Executable) : void in class org.junit.jupiter.api.AssumptionsTests",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "feeb5bcb6962c7ef997c04ecba474bb17f01480d",
      "url": "https://github.com/junit-team/junit5/commit/feeb5bcb6962c7ef997c04ecba474bb17f01480d",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getMethodByFullyQualifiedName(fullyQualifiedMethodName String) : Method renamed to private getFactoryMethodByFullyQualifiedName(fullyQualifiedMethodName String) : Method in class org.junit.jupiter.params.provider.MethodArgumentsProvider",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getMethod(context ExtensionContext, factoryMethodName String) : Method renamed to private getFactoryMethod(context ExtensionContext, factoryMethodName String) : Method in class org.junit.jupiter.params.provider.MethodArgumentsProvider",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getMethodByShortName(testClass Class<?>, methodName String) : Method renamed to private getFactoryMethodBySimpleName(testClass Class<?>, factoryMethodName String) : Method in class org.junit.jupiter.params.provider.MethodArgumentsProvider",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmethod : null to factoryMethod : null in method private getFactoryMethodBySimpleName(testClass Class<?>, factoryMethodName String) : Method from class org.junit.jupiter.params.provider.MethodArgumentsProvider",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getMethod(context ExtensionContext, factoryMethodName String) : Method renamed to private getFactoryMethod(context ExtensionContext, factoryMethodName String) : Method in class org.junit.jupiter.params.provider.MethodArgumentsProvider",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getMethodByFullyQualifiedName(fullyQualifiedMethodName String) : Method renamed to private getFactoryMethodByFullyQualifiedName(fullyQualifiedMethodName String) : Method in class org.junit.jupiter.params.provider.MethodArgumentsProvider",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getMethodByShortName(testClass Class<?>, methodName String) : Method renamed to private getFactoryMethodBySimpleName(testClass Class<?>, factoryMethodName String) : Method in class org.junit.jupiter.params.provider.MethodArgumentsProvider",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmethod : null to factoryMethod : null in method public provideArguments(context ExtensionContext) : Stream<Arguments> from class org.junit.jupiter.params.provider.MethodArgumentsProvider",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "af29093dd679efbafc2394b59f0fb4a5dcbd1804",
      "url": "https://github.com/junit-team/junit5/commit/af29093dd679efbafc2394b59f0fb4a5dcbd1804",
      "ourApproach": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate reportFinished(id String) : void inlined to public executionSkipped(testIdentifier TestIdentifier, reason String) : void in class org.junit.platform.reporting.open.xml.OpenTestReportGeneratingListener",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate reportFinished(id String) : void inlined to public executionFinished(testIdentifier TestIdentifier, testExecutionResult TestExecutionResult) : void in class org.junit.platform.reporting.open.xml.OpenTestReportGeneratingListener",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate reportFinished(id String) : void inlined to public executionSkipped(testIdentifier TestIdentifier, reason String) : void in class org.junit.platform.reporting.open.xml.OpenTestReportGeneratingListener",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate reportFinished(id String) : void inlined to public executionFinished(testIdentifier TestIdentifier, testExecutionResult TestExecutionResult) : void in class org.junit.platform.reporting.open.xml.OpenTestReportGeneratingListener",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "611ecefbfc5f637a65625e92cd79896e85eb4bac",
      "url": "https://github.com/junit-team/junit5/commit/611ecefbfc5f637a65625e92cd79896e85eb4bac",
      "ourApproach": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.platform.launcher.core.TestEngineFormatter from Class org.junit.platform.testkit.engine.EngineTestKit",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.platform.launcher.core.DefaultLauncherEngineFilterTests from Class org.junit.platform.launcher.core.DefaultLauncherTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillNotExecuteEnginesIfNotIncludedByAnEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillNotExecuteEnginesIfNotIncludedByAnEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillExecuteAllEnginesExplicitlyIncludedViaSingleEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillExecuteAllEnginesExplicitlyIncludedViaSingleEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillNotExecuteEnginesExplicitlyIncludedViaMultipleCompetingEngineFilters() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillNotExecuteEnginesExplicitlyIncludedViaMultipleCompetingEngineFilters() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillNotExecuteEnginesExplicitlyExcludedByAnEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillNotExecuteEnginesExplicitlyExcludedByAnEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillExecuteEnginesHonoringBothIncludeAndExcludeEngineFilters() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillExecuteEnginesHonoringBothIncludeAndExcludeEngineFilters() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate computeAttributes(engine TestEngine) : List<String> from class org.junit.platform.testkit.engine.EngineTestKit to private computeAttributes(engine TestEngine) : List<String> from class org.junit.platform.launcher.core.TestEngineFormatter",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tdetails : List<String> to details : String in method private format(title String, testEngines Stream<TestEngine>) : String from class org.junit.platform.launcher.core.TestEngineFormatter",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.platform.launcher.core.DefaultLauncherEngineFilterTests from class org.junit.platform.launcher.core.DefaultLauncherTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillNotExecuteEnginesIfNotIncludedByAnEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillNotExecuteEnginesIfNotIncludedByAnEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillExecuteAllEnginesExplicitlyIncludedViaSingleEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillExecuteAllEnginesExplicitlyIncludedViaSingleEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillNotExecuteEnginesExplicitlyIncludedViaMultipleCompetingEngineFilters() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillNotExecuteEnginesExplicitlyIncludedViaMultipleCompetingEngineFilters() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillNotExecuteEnginesExplicitlyExcludedByAnEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillNotExecuteEnginesExplicitlyExcludedByAnEngineFilter() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage launcherWillExecuteEnginesHonoringBothIncludeAndExcludeEngineFilters() : void from class org.junit.platform.launcher.core.DefaultLauncherTests to package launcherWillExecuteEnginesHonoringBothIncludeAndExcludeEngineFilters() : void from class org.junit.platform.launcher.core.DefaultLauncherEngineFilterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate computeAttributes(engine TestEngine) : List<String> from class org.junit.platform.testkit.engine.EngineTestKit to private computeAttributes(engine TestEngine) : List<String> from class org.junit.platform.launcher.core.TestEngineFormatter",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate computeAttributes(engine TestEngine) : List<String> from class org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry to private computeAttributes(engine TestEngine) : List<String> from class org.junit.platform.launcher.core.TestEngineFormatter",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "01353cddca2768d51f811ed464737a2087876e3e",
      "url": "https://github.com/junit-team/junit5/commit/01353cddca2768d51f811ed464737a2087876e3e",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage onSuccessWithNoTestAbortedException() : void renamed to package onSuccessWithNoException() : void in class org.junit.jupiter.engine.extension.CloseablePathCleanupTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage onSuccessWithTestAbortedException() : void renamed to package onSuccessWithException() : void in class org.junit.jupiter.engine.extension.CloseablePathCleanupTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeNeverParameter() : void renamed to package cleanupModeNeverParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeOnSuccessFailingParameter() : void renamed to package cleanupModeOnSuccessFailingParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeNeverField() : void renamed to package cleanupModeNeverField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeOnSuccessFailingField() : void renamed to package cleanupModeOnSuccessFailingField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeDefaultParameter() : void renamed to package cleanupModeDefaultParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeAlwaysParameter() : void renamed to package cleanupModeAlwaysParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeOnSuccessPassingParameter() : void renamed to package cleanupModeOnSuccessPassingParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeDefaultField() : void renamed to package cleanupModeDefaultField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeAlwaysField() : void renamed to package cleanupModeAlwaysField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeOnSuccessPassingField() : void renamed to package cleanupModeOnSuccessPassingField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage onSuccessWithTestAbortedException() : void renamed to package onSuccessWithException() : void in class org.junit.jupiter.engine.extension.CloseablePathCleanupTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage onSuccessWithNoTestAbortedException() : void renamed to package onSuccessWithNoException() : void in class org.junit.jupiter.engine.extension.CloseablePathCleanupTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeDefaultField() : void renamed to package cleanupModeDefaultField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeNeverField() : void renamed to package cleanupModeNeverField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeAlwaysField() : void renamed to package cleanupModeAlwaysField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeOnSuccessPassingField() : void renamed to package cleanupModeOnSuccessPassingField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeOnSuccessFailingField() : void renamed to package cleanupModeOnSuccessFailingField() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirFieldTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeDefaultParameter() : void renamed to package cleanupModeDefaultParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeNeverParameter() : void renamed to package cleanupModeNeverParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeAlwaysParameter() : void renamed to package cleanupModeAlwaysParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeOnSuccessPassingParameter() : void renamed to package cleanupModeOnSuccessPassingParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage testCleanupModeOnSuccessFailingParameter() : void renamed to package cleanupModeOnSuccessFailingParameter() : void in class org.junit.jupiter.engine.extension.TempDirectoryCleanupTests.TempDirParameterTests",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "1785e250f73fa88ddb53be4ed3e2df1fd36594f5",
      "url": "https://github.com/junit-team/junit5/commit/1785e250f73fa88ddb53be4ed3e2df1fd36594f5",
      "ourApproach": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.InstancePreConstruct renamed to org.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.InstancePreConstructTestCase",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.FactoryPreConstruct renamed to org.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.FactoryPreConstructTestCase",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.PreConstructInNested renamed to org.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.PreConstructInNestedTestCase",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.CallSequenceRecordingTest renamed to org.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.CallSequenceRecordingTestCase",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.CallSequenceRecordingTest renamed to org.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.CallSequenceRecordingTestCase",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.InstancePreConstruct renamed to org.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.InstancePreConstructTestCase",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.FactoryPreConstruct renamed to org.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.FactoryPreConstructTestCase",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.PreConstructInNested renamed to org.junit.jupiter.engine.extension.TestInstancePreConstructCallbackTests.PreConstructInNestedTestCase",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "0a3851dee56430b17ebb2cf5a13725b7bd068183",
      "url": "https://github.com/junit-team/junit5/commit/0a3851dee56430b17ebb2cf5a13725b7bd068183",
      "ourApproach": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate assertValidFieldCandidate(field Field) : void inlined to private injectFields(context ExtensionContext, testInstance Object, testClass Class<?>, predicate Predicate<Field>) : void in class org.junit.jupiter.engine.extension.TempDirectory",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate assertValidFieldCandidate(field Field) : void inlined to private injectFields(context ExtensionContext, testInstance Object, testClass Class<?>, predicate Predicate<Field>) : void in class org.junit.jupiter.engine.extension.TempDirectory",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "a02182439933a2a639c5e828d73eb6533a9783f0",
      "url": "https://github.com/junit-team/junit5/commit/a02182439933a2a639c5e828d73eb6533a9783f0",
      "ourApproach": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.jupiter.params.converter.TypedArgumentConverterTests.UnitTests from Class org.junit.jupiter.params.converter.TypedArgumentConverterTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.jupiter.params.converter.TypedArgumentConverterTests.IntegrationTests from Class org.junit.jupiter.params.converter.TypedArgumentConverterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage preconditions() : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests to package preconditions() : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests.UnitTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage convertsSourceToTarget() : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests to package convertsSourceToTarget() : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests.UnitTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate assertConverts(input String, expected int) : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests to private assertConverts(input String, expected int) : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests.UnitTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.jupiter.params.converter.TypedArgumentConverterTests.UnitTests from class org.junit.jupiter.params.converter.TypedArgumentConverterTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage preconditions() : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests to package preconditions() : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests.UnitTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage convertsSourceToTarget() : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests to package convertsSourceToTarget() : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests.UnitTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate assertConverts(input String, expected int) : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests to private assertConverts(input String, expected int) : void from class org.junit.jupiter.params.converter.TypedArgumentConverterTests.UnitTests",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "a0dd37160c81167ac05376888debb64b00315dc9",
      "url": "https://github.com/junit-team/junit5/commit/a0dd37160c81167ac05376888debb64b00315dc9",
      "ourApproach": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.platform.commons.util.ReflectionUtilsTests.IsObjectAssignableToClassTests from Class org.junit.platform.commons.util.ReflectionUtilsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isAssignableToForNullClass() : void from class org.junit.platform.commons.util.ReflectionUtilsTests to package isAssignableToForNullClass() : void from class org.junit.platform.commons.util.ReflectionUtilsTests.IsObjectAssignableToClassTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isAssignableToForNullObject() : void from class org.junit.platform.commons.util.ReflectionUtilsTests to package isAssignableToForNullObject() : void from class org.junit.platform.commons.util.ReflectionUtilsTests.IsObjectAssignableToClassTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isAssignableToForNullObjectAndPrimitive() : void from class org.junit.platform.commons.util.ReflectionUtilsTests to package isAssignableToForNullObjectAndPrimitive() : void from class org.junit.platform.commons.util.ReflectionUtilsTests.IsObjectAssignableToClassTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isAssignableTo() : void from class org.junit.platform.commons.util.ReflectionUtilsTests to package isAssignableTo() : void from class org.junit.platform.commons.util.ReflectionUtilsTests.IsObjectAssignableToClassTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.platform.commons.util.ReflectionUtilsTests.IsClassAssignableToClassTests from class org.junit.platform.commons.util.ReflectionUtilsTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.junit.platform.commons.util.ReflectionUtilsTests.IsObjectAssignableToClassTests from class org.junit.platform.commons.util.ReflectionUtilsTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isAssignableToForNullClass() : void from class org.junit.platform.commons.util.ReflectionUtilsTests to package isAssignableToForNullClass() : void from class org.junit.platform.commons.util.ReflectionUtilsTests.IsObjectAssignableToClassTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isAssignableToForNullObject() : void from class org.junit.platform.commons.util.ReflectionUtilsTests to package isAssignableToForNullObject() : void from class org.junit.platform.commons.util.ReflectionUtilsTests.IsObjectAssignableToClassTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isAssignableToForNullObjectAndPrimitive() : void from class org.junit.platform.commons.util.ReflectionUtilsTests to package isAssignableToForNullObjectAndPrimitive() : void from class org.junit.platform.commons.util.ReflectionUtilsTests.IsObjectAssignableToClassTests",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isAssignableTo() : void from class org.junit.platform.commons.util.ReflectionUtilsTests to package isAssignableTo() : void from class org.junit.platform.commons.util.ReflectionUtilsTests.IsClassAssignableToClassTests",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "d0017f6618d6bb6f07b38e8d9a315e80e5f917aa",
      "url": "https://github.com/junit-team/junit5/commit/d0017f6618d6bb6f07b38e8d9a315e80e5f917aa",
      "ourApproach": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\tplatform.tooling.support.ThirdPartyJars from Class platform.tooling.support.Helper",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic version(moduleOrSystemProperty String, defaultVersion String) : String inlined to public version(module String) : String in class platform.tooling.support.Helper",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic version(moduleOrSystemProperty String, defaultVersion String) : String inlined to public version(module String) : String in class platform.tooling.support.Helper",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/junit-team/junit5.git",
      "sha1": "fe29e1d6caa623361f75e327cf472215533c4391",
      "url": "https://github.com/junit-team/junit5/commit/fe29e1d6caa623361f75e327cf472215533c4391",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage mock(type Class<? super T>) : T renamed to package mockMethodDescriptor() : T in class org.junit.jupiter.engine.extension.OrderedMethodTests.MisbehavingByAdding",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate executeTestsInParallelWithRandomSeed(testClass Class<?>, seed String) : Events renamed to private executeRandomTestCaseInParallelWithRandomSeed(seed String) : Events in class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tseed : String to seed : var in method package randomWithBogusSeedRepeatedly(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessagePattern : String to expectedMessagePattern : var in method package randomWithBogusSeedRepeatedly(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tseed : String to seed : var in method package randomWithDifferentSeedConsecutively(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessage : String to expectedMessage : var in method package randomWithDifferentSeedConsecutively(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tseed : String to seed : var in method package randomWithCustomSeed(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessage : String to expectedMessage : var in method package randomWithCustomSeed(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessage : String to expectedMessage : var in method package misbehavingMethodOrdererThatAddsElements(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessage : String to expectedMessage : var in method package misbehavingMethodOrdererThatRemovesElements(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ti : int to i : var in method package randomWithBogusSeedRepeatedly(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ti : int to i : var in method package randomWithDifferentSeedConsecutively(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ti : int to i : var in method package randomWithCustomSeed(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage mock(type Class<? super T>) : T renamed to package mockMethodDescriptor() : T in class org.junit.jupiter.engine.extension.OrderedMethodTests.MisbehavingByAdding",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate executeTestsInParallelWithRandomSeed(testClass Class<?>, seed String) : Events renamed to private executeRandomTestCaseInParallelWithRandomSeed(seed String) : Events in class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tseed : String to seed : var in method package randomWithBogusSeedRepeatedly(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessagePattern : String to expectedMessagePattern : var in method package randomWithBogusSeedRepeatedly(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tseed : String to seed : var in method package randomWithDifferentSeedConsecutively(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessage : String to expectedMessage : var in method package randomWithDifferentSeedConsecutively(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tseed : String to seed : var in method package randomWithCustomSeed(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessage : String to expectedMessage : var in method package randomWithCustomSeed(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessage : String to expectedMessage : var in method package misbehavingMethodOrdererThatAddsElements(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\texpectedMessage : String to expectedMessage : var in method package misbehavingMethodOrdererThatRemovesElements(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ti : int to i : var in method package randomWithBogusSeedRepeatedly(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ti : int to i : var in method package randomWithDifferentSeedConsecutively(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ti : int to i : var in method package randomWithCustomSeed(listener LogRecordListener) : void from class org.junit.jupiter.engine.extension.OrderedMethodTests",
          "developerConfirmation": true
        }
      ]
    }
  ]
}