{
  "results": [
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "a399bd13b1d754d3e0d9c23fc70b1a5705dc7485",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=a399bd13b1d754d3e0d9c23fc70b1a5705dc7485",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprotected initPreImage(aName String) : void extracted from protected init(aName String, preExists boolean, postExists boolean) : void in class org.eclipse.jgit.patch.PatchApplierTest.Base",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprotected initPostImage(aName String) : String extracted from protected init(aName String, preExists boolean, postExists boolean) : void in class org.eclipse.jgit.patch.PatchApplierTest.Base",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprotected verifyContent(result Result, path String, expectedContent String) : void extracted from protected verifyContent(result Result, path String, exists boolean) : void in class org.eclipse.jgit.patch.PatchApplierTest.Base",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprotected initPreImage(aName String) : void extracted from protected init(aName String, preExists boolean, postExists boolean) : void in class org.eclipse.jgit.patch.PatchApplierTest.Base",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprotected initPostImage(aName String) : String extracted from protected init(aName String, preExists boolean, postExists boolean) : void in class org.eclipse.jgit.patch.PatchApplierTest.Base",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprotected verifyContent(result Result, path String, expectedContent String) : void extracted from protected verifyContent(result Result, path String, exists boolean) : void in class org.eclipse.jgit.patch.PatchApplierTest.Base",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "b39972f8a20e2d9ad62629029b85e443d1bd082d",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=b39972f8a20e2d9ad62629029b85e443d1bd082d",
      "ourApproach": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate getNextKey(session ClientSession, service String) : PublicKeyIdentity inlined to protected resolveAttemptedPublicKeyIdentity(session ClientSession, service String) : PublicKeyIdentity in class org.eclipse.jgit.internal.transport.sshd.JGitPublicKeyAuthentication",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate getNextKey(session ClientSession, service String) : PublicKeyIdentity inlined to protected resolveAttemptedPublicKeyIdentity(session ClientSession, service String) : PublicKeyIdentity in class org.eclipse.jgit.internal.transport.sshd.JGitPublicKeyAuthentication",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "a8e683fef6acf3e9f00ac2648fff60b13a28fb13",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=a8e683fef6acf3e9f00ac2648fff60b13a28fb13",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate addConflict(base CanonicalTreeParser, ours CanonicalTreeParser, theirs CanonicalTreeParser) : DirCacheEntry extracted from protected processEntry(base CanonicalTreeParser, ours CanonicalTreeParser, theirs CanonicalTreeParser, index DirCacheBuildIterator, work WorkingTreeIterator, ignoreConflicts boolean, attributes Attributes[]) : boolean in class org.eclipse.jgit.merge.ResolveMerger",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate addConflict(base CanonicalTreeParser, ours CanonicalTreeParser, theirs CanonicalTreeParser) : DirCacheEntry extracted from private updateIndex(base CanonicalTreeParser, ours CanonicalTreeParser, theirs CanonicalTreeParser, result MergeResult<RawText>, attributes Attributes) : void in class org.eclipse.jgit.merge.ResolveMerger",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttheirEntry : DirCacheEntry to e : DirCacheEntry in method protected processEntry(base CanonicalTreeParser, ours CanonicalTreeParser, theirs CanonicalTreeParser, index DirCacheBuildIterator, work WorkingTreeIterator, ignoreConflicts boolean, attributes Attributes[]) : boolean from class org.eclipse.jgit.merge.ResolveMerger",
          "developerConfirmation": false
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate addConflict(base CanonicalTreeParser, ours CanonicalTreeParser, theirs CanonicalTreeParser) : DirCacheEntry extracted from protected processEntry(base CanonicalTreeParser, ours CanonicalTreeParser, theirs CanonicalTreeParser, index DirCacheBuildIterator, work WorkingTreeIterator, ignoreConflicts boolean, attributes Attributes[]) : boolean in class org.eclipse.jgit.merge.ResolveMerger",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate addConflict(base CanonicalTreeParser, ours CanonicalTreeParser, theirs CanonicalTreeParser) : DirCacheEntry extracted from private updateIndex(base CanonicalTreeParser, ours CanonicalTreeParser, theirs CanonicalTreeParser, result MergeResult<RawText>, attributes Attributes) : void in class org.eclipse.jgit.merge.ResolveMerger",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "ee6334bccf6d81b1bf513c44897e2a63b6300400",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=ee6334bccf6d81b1bf513c44897e2a63b6300400",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic testSingleBlame() : void renamed to public testBoundLineDelete() : void in class org.eclipse.jgit.api.blame.BlameGeneratorTest",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic push(blameCommit RevCommit) : BlameGenerator inlined to public push(description String, id AnyObjectId) : BlameGenerator in class org.eclipse.jgit.blame.BlameGenerator",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic testSingleBlame() : void renamed to public testBoundLineDelete() : void in class org.eclipse.jgit.api.blame.BlameGeneratorTest",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic push(blameCommit RevCommit) : BlameGenerator inlined to public push(description String, id AnyObjectId) : BlameGenerator in class org.eclipse.jgit.blame.BlameGenerator",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "207dd4c938830e84c9101d30edb7fe626e04bbe1",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=207dd4c938830e84c9101d30edb7fe626e04bbe1",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tdeepenNotRefs : List<String> to deepenNots : List<String> in class org.eclipse.jgit.transport.FetchV2Request.Builder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tdeepenNotRefs : List<String> to deepenNots : List<String> in class org.eclipse.jgit.transport.FetchRequest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage addDeepenNotRef(deepenNotRef String) : Builder renamed to package addDeepenNot(deepenNot String) : Builder in class org.eclipse.jgit.transport.FetchV2Request.Builder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage hasDeepenNotRefs() : boolean renamed to package hasDeepenNots() : boolean in class org.eclipse.jgit.transport.FetchV2Request.Builder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage getDeepenNotRefs() : List<String> renamed to package getDeepenNots() : List<String> in class org.eclipse.jgit.transport.FetchRequest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate parseDeepenNots(deepenNots List<String>) : List<ObjectId> extracted from private fetchV2(pckOut PacketLineOut) : void in class org.eclipse.jgit.transport.UploadPack",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage abstract getShallowCommits() : Set<ObjectId> from class org.eclipse.jgit.internal.storage.file.FileObjectDatabase to public getShallowCommits() : Set<ObjectId> from class org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tdeepenNots : List<ObjectId> in method private service(pckOut PacketLineOut) : void from class org.eclipse.jgit.transport.UploadPack",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage getDeepenNotRefs() : List<String> renamed to package getDeepenNots() : List<String> in class org.eclipse.jgit.transport.FetchRequest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tdeepenNotRefs : List<String> to deepenNots : List<String> in class org.eclipse.jgit.transport.FetchRequest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage hasDeepenNotRefs() : boolean renamed to package hasDeepenNots() : boolean in class org.eclipse.jgit.transport.FetchV2Request.Builder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage addDeepenNotRef(deepenNotRef String) : Builder renamed to package addDeepenNot(deepenNot String) : Builder in class org.eclipse.jgit.transport.FetchV2Request.Builder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tdeepenNotRefs : List<String> to deepenNots : List<String> in class org.eclipse.jgit.transport.FetchV2Request.Builder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate parseDeepenNots(deepenNots List<String>) : List<ObjectId> extracted from private fetchV2(pckOut PacketLineOut) : void in class org.eclipse.jgit.transport.UploadPack",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tdeepenNots : List<ObjectId> to result : List<ObjectId> in method private parseDeepenNots(deepenNots List<String>) : List<ObjectId> from class org.eclipse.jgit.transport.UploadPack",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpackage abstract getShallowCommits() : Set<ObjectId> from class org.eclipse.jgit.internal.storage.file.FileObjectDatabase to public abstract getShallowCommits() : Set<ObjectId> from class org.eclipse.jgit.lib.ObjectDatabase",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "85734356351ec2df4067b2472a37f6d9bcbb7350",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=85734356351ec2df4067b2472a37f6d9bcbb7350",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getExpectedDiffToolOutput(changes List<DiffEntry>) : String[] renamed to private getExpectedToolOutput(changes List<DiffEntry>) : String[] in class org.eclipse.jgit.pgm.DiffToolTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.pgm.DiffToolTest.GitCliJGitWrapperParser moved to org.eclipse.jgit.pgm.ExternalToolTestCase.GitCliJGitWrapperParser",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcompareResult : int to compareResult : ExecutionResult in method public testCompare() : void from class org.eclipse.jgit.internal.diffmergetool.ExternalMergeToolTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tnewPath : String to subsection : String in method public testCompare() : void from class org.eclipse.jgit.internal.diffmergetool.ExternalMergeToolTest",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate runAndCaptureUsingInitRaw(args String...) : String[] from class org.eclipse.jgit.pgm.DiffToolTest to protected runAndCaptureUsingInitRaw(args String...) : String[] from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate createUnstagedChanges() : RevCommit from class org.eclipse.jgit.pgm.DiffToolTest to protected createUnstagedChanges() : RevCommit from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate createStagedChanges() : RevCommit from class org.eclipse.jgit.pgm.DiffToolTest to protected createStagedChanges() : RevCommit from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate getRepositoryChanges(commit RevCommit) : List<DiffEntry> from class org.eclipse.jgit.pgm.DiffToolTest to protected getRepositoryChanges(commit RevCommit) : List<DiffEntry> from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate assertArrayOfLinesEquals(failMessage String, expected String[], actual String[]) : void from class org.eclipse.jgit.pgm.DiffToolTest to protected assertArrayOfLinesEquals(failMessage String, expected String[], actual String[]) : void from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate getEchoCommand() : String from class org.eclipse.jgit.pgm.DiffToolTest to protected getEchoCommand() : String from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic setUp() : void extracted from public setUp() : void in class org.eclipse.jgit.pgm.DiffToolTest & moved to class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_SUPERCLASS",
          "description": "Extract Superclass\torg.eclipse.jgit.pgm.ExternalToolTestCase from class org.eclipse.jgit.pgm.DiffToolTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\toldPath : String to command : String in method public testCompare() : void from class org.eclipse.jgit.internal.diffmergetool.ExternalMergeToolTest",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\ttoolName : String in method public testDefaultTool() : void from class org.eclipse.jgit.internal.diffmergetool.ExternalMergeToolTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tguiToolName : String in method public testDefaultTool() : void from class org.eclipse.jgit.internal.diffmergetool.ExternalMergeToolTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.pgm.DiffToolTest.GitCliJGitWrapperParser moved to org.eclipse.jgit.pgm.ExternalToolTestCase.GitCliJGitWrapperParser",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getExpectedDiffToolOutput(changes List<DiffEntry>) : String[] renamed to private getExpectedToolOutput(changes List<DiffEntry>) : String[] in class org.eclipse.jgit.pgm.DiffToolTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcompareResult : int to compareResult : ExecutionResult in method public testCompare() : void from class org.eclipse.jgit.internal.diffmergetool.ExternalMergeToolTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tnewPath : String to subsection : String in method public testCompare() : void from class org.eclipse.jgit.internal.diffmergetool.ExternalMergeToolTest",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate runAndCaptureUsingInitRaw(args String...) : String[] from class org.eclipse.jgit.pgm.DiffToolTest to protected runAndCaptureUsingInitRaw(args String...) : String[] from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate createUnstagedChanges() : RevCommit from class org.eclipse.jgit.pgm.DiffToolTest to protected createUnstagedChanges() : RevCommit from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate createStagedChanges() : RevCommit from class org.eclipse.jgit.pgm.DiffToolTest to protected createStagedChanges() : RevCommit from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate getRepositoryChanges(commit RevCommit) : List<DiffEntry> from class org.eclipse.jgit.pgm.DiffToolTest to protected getRepositoryChanges(commit RevCommit) : List<DiffEntry> from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate assertArrayOfLinesEquals(failMessage String, expected String[], actual String[]) : void from class org.eclipse.jgit.pgm.DiffToolTest to protected assertArrayOfLinesEquals(failMessage String, expected String[], actual String[]) : void from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate getEchoCommand() : String from class org.eclipse.jgit.pgm.DiffToolTest to protected getEchoCommand() : String from class org.eclipse.jgit.pgm.ExternalToolTestCase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_SUPERCLASS",
          "description": "Extract Superclass\torg.eclipse.jgit.pgm.ExternalToolTestCase from classes [org.eclipse.jgit.pgm.DiffToolTest]",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\ttoolName : String in method public testDefaultTool() : void from class org.eclipse.jgit.internal.diffmergetool.ExternalMergeToolTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tguiToolName : String in method public testDefaultTool() : void from class org.eclipse.jgit.internal.diffmergetool.ExternalMergeToolTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "7f9cd7d2baee39d6b4413f68ac58932bdd84221b",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=7f9cd7d2baee39d6b4413f68ac58932bdd84221b",
      "ourApproach": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.lib.GpgSignatureVerifierFactory.DefaultFactory from Class org.eclipse.jgit.lib.GpgSignatureVerifierFactory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.transport.SshSessionFactory.DefaultFactory from Class org.eclipse.jgit.transport.SshSessionFactory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic setInstance(newFactory SshSessionFactory) : void extracted from public setInstance(newFactory SshSessionFactory) : void in class org.eclipse.jgit.transport.SshSessionFactory & moved to class org.eclipse.jgit.transport.SshSessionFactory.DefaultFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate loadDefault() : GpgSignatureVerifierFactory from class org.eclipse.jgit.lib.GpgSignatureVerifierFactory to private loadDefault() : GpgSignatureVerifierFactory from class org.eclipse.jgit.lib.GpgSignatureVerifierFactory.DefaultFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate defaultFactory : GpgSignatureVerifierFactory from class org.eclipse.jgit.lib.GpgSignatureVerifierFactory to private defaultFactory : GpgSignatureVerifierFactory from class org.eclipse.jgit.lib.GpgSignatureVerifierFactory.DefaultFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate loadSshSessionFactory() : SshSessionFactory from class org.eclipse.jgit.transport.SshSessionFactory to private loadSshSessionFactory() : SshSessionFactory from class org.eclipse.jgit.transport.SshSessionFactory.DefaultFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate INSTANCE : SshSessionFactory from class org.eclipse.jgit.transport.SshSessionFactory to private INSTANCE : SshSessionFactory from class org.eclipse.jgit.transport.SshSessionFactory.DefaultFactory",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.lib.GpgSignatureVerifierFactory.DefaultFactory from class org.eclipse.jgit.lib.GpgSignatureVerifierFactory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.transport.SshSessionFactory.DefaultFactory from class org.eclipse.jgit.transport.SshSessionFactory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic setInstance(newFactory SshSessionFactory) : void extracted from public setInstance(newFactory SshSessionFactory) : void in class org.eclipse.jgit.transport.SshSessionFactory & moved to class org.eclipse.jgit.transport.SshSessionFactory.DefaultFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate loadDefault() : GpgSignatureVerifierFactory from class org.eclipse.jgit.lib.GpgSignatureVerifierFactory to private loadDefault() : GpgSignatureVerifierFactory from class org.eclipse.jgit.lib.GpgSignatureVerifierFactory.DefaultFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate defaultFactory : GpgSignatureVerifierFactory from class org.eclipse.jgit.lib.GpgSignatureVerifierFactory to private defaultFactory : GpgSignatureVerifierFactory from class org.eclipse.jgit.lib.GpgSignatureVerifierFactory.DefaultFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate loadSshSessionFactory() : SshSessionFactory from class org.eclipse.jgit.transport.SshSessionFactory to private loadSshSessionFactory() : SshSessionFactory from class org.eclipse.jgit.transport.SshSessionFactory.DefaultFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate INSTANCE : SshSessionFactory from class org.eclipse.jgit.transport.SshSessionFactory to private INSTANCE : SshSessionFactory from class org.eclipse.jgit.transport.SshSessionFactory.DefaultFactory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic getDefault() : GpgSignatureVerifierFactory extracted from public getDefault() : GpgSignatureVerifierFactory in class org.eclipse.jgit.lib.GpgSignatureVerifierFactory & moved to class org.eclipse.jgit.lib.GpgSignatureVerifierFactory.DefaultFactory",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic setDefault(factory GpgSignatureVerifierFactory) : void extracted from public setDefault(factory GpgSignatureVerifierFactory) : void in class org.eclipse.jgit.lib.GpgSignatureVerifierFactory & moved to class org.eclipse.jgit.lib.GpgSignatureVerifierFactory.DefaultFactory",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic getInstance() : SshSessionFactory extracted from public getInstance() : SshSessionFactory in class org.eclipse.jgit.transport.SshSessionFactory & moved to class org.eclipse.jgit.transport.SshSessionFactory.DefaultFactory",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "fbce3122e0e41b497ac6e2a8176d46f90d302671",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=fbce3122e0e41b497ac6e2a8176d46f90d302671",
      "ourApproach": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.lib.GpgSigner.DefaultSigner from Class org.eclipse.jgit.lib.GpgSigner",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate loadGpgSigner() : GpgSigner from class org.eclipse.jgit.lib.GpgSigner to private loadGpgSigner() : GpgSigner from class org.eclipse.jgit.lib.GpgSigner.DefaultSigner",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate defaultSigner : GpgSigner from class org.eclipse.jgit.lib.GpgSigner to private defaultSigner : GpgSigner from class org.eclipse.jgit.lib.GpgSigner.DefaultSigner",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.lib.GpgSigner.DefaultSigner from class org.eclipse.jgit.lib.GpgSigner",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate loadGpgSigner() : GpgSigner from class org.eclipse.jgit.lib.GpgSigner to private loadGpgSigner() : GpgSigner from class org.eclipse.jgit.lib.GpgSigner.DefaultSigner",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate defaultSigner : GpgSigner from class org.eclipse.jgit.lib.GpgSigner to private defaultSigner : GpgSigner from class org.eclipse.jgit.lib.GpgSigner.DefaultSigner",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic getDefault() : GpgSigner extracted from public getDefault() : GpgSigner in class org.eclipse.jgit.lib.GpgSigner & moved to class org.eclipse.jgit.lib.GpgSigner.DefaultSigner",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic setDefault(signer GpgSigner) : void extracted from public setDefault(signer GpgSigner) : void in class org.eclipse.jgit.lib.GpgSigner & moved to class org.eclipse.jgit.lib.GpgSigner.DefaultSigner",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "c127a1a6525dd1efe58dac5add7d927ba4b1c990",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=c127a1a6525dd1efe58dac5add7d927ba4b1c990",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMap<String,String> to String in method public replace(url String) : String from class org.eclipse.jgit.transport.UrlConfig",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.transport.UrlConfig from Class org.eclipse.jgit.transport.RemoteConfig",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate KEY_INSTEADOF : String from class org.eclipse.jgit.transport.RemoteConfig to private KEY_INSTEADOF : String from class org.eclipse.jgit.transport.UrlConfig",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate KEY_PUSHINSTEADOF : String from class org.eclipse.jgit.transport.RemoteConfig to private KEY_PUSHINSTEADOF : String from class org.eclipse.jgit.transport.UrlConfig",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprivate load(key String) : Map<String,String> extracted from private getReplacements(config Config, keyName String) : Map<String,String> in class org.eclipse.jgit.transport.RemoteConfig & moved to class org.eclipse.jgit.transport.UrlConfig",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprivate replace(uri String, replacements Map<String,String>) : String extracted from private getReplacements(config Config, keyName String) : Map<String,String> in class org.eclipse.jgit.transport.RemoteConfig & moved to class org.eclipse.jgit.transport.UrlConfig",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprivate replace(uri String, replacements Map<String,String>) : String extracted from private replaceUri(uri String, replacements Map<String,String>) : String in class org.eclipse.jgit.transport.RemoteConfig & moved to class org.eclipse.jgit.transport.UrlConfig",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.transport.UrlConfig from class org.eclipse.jgit.transport.RemoteConfig",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate KEY_INSTEADOF : String from class org.eclipse.jgit.transport.RemoteConfig to private KEY_INSTEADOF : String from class org.eclipse.jgit.transport.UrlConfig",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate KEY_PUSHINSTEADOF : String from class org.eclipse.jgit.transport.RemoteConfig to private KEY_PUSHINSTEADOF : String from class org.eclipse.jgit.transport.UrlConfig",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tinsteadOf : String to prefix : String in method private load(key String) : Map<String,String> from class org.eclipse.jgit.transport.UrlConfig",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "9683bc71b6c05ce1ca2b5d6c6f7d74fff3db8429",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=9683bc71b6c05ce1ca2b5d6c6f7d74fff3db8429",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JSchSshProtocol2Test moved to org.eclipse.jgit.transport.ssh.jsch.JSchSshProtocol2Test",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JSchSshTest moved to org.eclipse.jgit.transport.ssh.jsch.JSchSshTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JschConfigSessionFactoryTest moved to org.eclipse.jgit.transport.ssh.jsch.JschConfigSessionFactoryTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.OpenSshConfigTest moved to org.eclipse.jgit.transport.ssh.jsch.OpenSshConfigTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.CredentialsProviderUserInfo moved to org.eclipse.jgit.internal.transport.ssh.jsch.CredentialsProviderUserInfo",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.internal.transport.jsch.JSchText moved to org.eclipse.jgit.internal.transport.ssh.jsch.JSchText",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JschSession moved to org.eclipse.jgit.transport.ssh.jsch.JschSession",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JschConfigSessionFactory moved to org.eclipse.jgit.transport.ssh.jsch.JschConfigSessionFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.OpenSshConfig moved to org.eclipse.jgit.transport.ssh.jsch.OpenSshConfig",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JSchSshProtocol2Test moved to org.eclipse.jgit.transport.ssh.jsch.JSchSshProtocol2Test",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JSchSshTest moved to org.eclipse.jgit.transport.ssh.jsch.JSchSshTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JschConfigSessionFactoryTest moved to org.eclipse.jgit.transport.ssh.jsch.JschConfigSessionFactoryTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.OpenSshConfigTest moved to org.eclipse.jgit.transport.ssh.jsch.OpenSshConfigTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.internal.transport.jsch.JSchText moved to org.eclipse.jgit.internal.transport.ssh.jsch.JSchText",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JschConfigSessionFactory moved to org.eclipse.jgit.transport.ssh.jsch.JschConfigSessionFactory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.JschSession moved to org.eclipse.jgit.transport.ssh.jsch.JschSession",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.OpenSshConfig moved to org.eclipse.jgit.transport.ssh.jsch.OpenSshConfig",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.CredentialsProviderUserInfo moved to org.eclipse.jgit.internal.transport.ssh.jsch.CredentialsProviderUserInfo",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "10ac4499115965ff10e547a0632c89873a06cf91",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=10ac4499115965ff10e547a0632c89873a06cf91",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate apply(repository Repository, path String, rt RawText, f File, fh FileHeader, checkOut CheckoutMetadata) : void renamed to private applyText(repository Repository, path String, rt RawText, f File, fh FileHeader, checkOut CheckoutMetadata) : void in class org.eclipse.jgit.api.ApplyCommand",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdata : TemporaryBuffer to data : StreamSupplier in class org.eclipse.jgit.api.ApplyCommand.StreamLoader",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.eclipse.jgit.api.ApplyCommand.BufferLoader renamed to org.eclipse.jgit.api.ApplyCommand.StreamLoader",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.eclipse.jgit.api.ApplyCommand.BufferLoader renamed to org.eclipse.jgit.api.ApplyCommand.StreamLoader",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdata : TemporaryBuffer to data : StreamSupplier in class org.eclipse.jgit.api.ApplyCommand.StreamLoader",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tlastHunkNewLine : int to base : byte[] in method private applyBinary(repository Repository, path String, f File, fh FileHeader, loader StreamSupplier, id ObjectId, checkOut CheckoutMetadata) : void from class org.eclipse.jgit.api.ApplyCommand",
          "developerConfirmation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tapplyAt : int to length : int in method private applyBinary(repository Repository, path String, f File, fh FileHeader, loader StreamSupplier, id ObjectId, checkOut CheckoutMetadata) : void from class org.eclipse.jgit.api.ApplyCommand",
          "developerConfirmation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\toutput : OutputStream to out : OutputStream in method private applyBinary(repository Repository, path String, f File, fh FileHeader, loader StreamSupplier, id ObjectId, checkOut CheckoutMetadata) : void from class org.eclipse.jgit.api.ApplyCommand",
          "developerConfirmation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tlastHunkNewLine : int to base : byte[] in method private applyBinary(repository Repository, path String, f File, fh FileHeader, loader StreamSupplier, id ObjectId, checkOut CheckoutMetadata) : void from class org.eclipse.jgit.api.ApplyCommand",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "7fbff35887a4179d33b17fce96191c82b397ebd7",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=7fbff35887a4179d33b17fce96191c82b397ebd7",
      "ourApproach": [],
      "baseline": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\textensions : int to bitmapIdxFile : PackFile in class org.eclipse.jgit.internal.storage.file.Pack",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\textensions : int to bitmapIdxFile : PackFile in class org.eclipse.jgit.internal.storage.file.Pack",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "40d6eda3f16f24db20776d33e586737efeddc725",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=40d6eda3f16f24db20776d33e586737efeddc725",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tcreationDate : Date to createdAt : Instant in class org.eclipse.jgit.internal.transport.http.NetscapeCookieFile",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tcreationDate : Date to createdAt : Instant in class org.eclipse.jgit.internal.transport.http.NetscapeCookieFile",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tJAN_01_2030_NOON : long to TEST_EXPIRY_DATE : Instant in class org.eclipse.jgit.internal.transport.http.NetscapeCookieFileTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tJAN_01_2030_NOON : long to TEST_EXPIRY_DATE : Instant in class org.eclipse.jgit.internal.transport.http.NetscapeCookieFileTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tcreationDate : Date to createdAt : Instant in class org.eclipse.jgit.internal.transport.http.NetscapeCookieFile",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tcreationDate : Date to createdAt : Instant in class org.eclipse.jgit.internal.transport.http.NetscapeCookieFile",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcreationDate : Date to TEST_DATE : Instant in method public testWriteToNewFile() : void from class org.eclipse.jgit.internal.transport.http.NetscapeCookieFileTest",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcreationDate : Date to TEST_DATE : Instant in method public testWriteToExistingFile() : void from class org.eclipse.jgit.internal.transport.http.NetscapeCookieFileTest",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcreationDate : Date to TEST_DATE : Instant in method public testWriteAndReadCycle() : void from class org.eclipse.jgit.internal.transport.http.NetscapeCookieFileTest",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcreationDate : Date to TEST_DATE : Instant in method public testReadAndWriteCycle() : void from class org.eclipse.jgit.internal.transport.http.NetscapeCookieFileTest",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcreationDate : Date to TEST_DATE : Instant in method public testReadWithEmptyAndCommentLines() : void from class org.eclipse.jgit.internal.transport.http.NetscapeCookieFileTest",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "ecad2dc0a62db9ea521aa67a09b48e23bb7cb2ba",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=ecad2dc0a62db9ea521aa67a09b48e23bb7cb2ba",
      "ourApproach": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.internal.storage.file.LooseObjects from Class org.eclipse.jgit.internal.storage.file.ObjectDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate unpackedObjectCache : UnpackedObjectCache from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private unpackedObjectCache : UnpackedObjectCache from class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage open(curs WindowCursor, id AnyObjectId) : ObjectLoader extracted from package openLooseObject(curs WindowCursor, id AnyObjectId) : ObjectLoader in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprivate tryMove(tmp File, dst File, id ObjectId) : InsertLooseObjectResult extracted from private tryMove(tmp File, dst File, id ObjectId) : InsertLooseObjectResult in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage resolve(matches Set<ObjectId>, id AbbreviatedObjectId, matchLimit int) : boolean extracted from private resolve(matches Set<ObjectId>, id AbbreviatedObjectId, skips Set<AlternateHandle.Id>) : void in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage fileFor(objectId AnyObjectId) : File extracted from public fileFor(objectId AnyObjectId) : File in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage close() : void extracted from public close() : void in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage hasCached(id AnyObjectId) : boolean extracted from package getObjectSize(curs WindowCursor, id AnyObjectId) : long in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage hasCached(id AnyObjectId) : boolean extracted from package insertUnpackedObject(tmp File, id ObjectId, createDuplicate boolean) : InsertLooseObjectResult in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage has(objectId AnyObjectId) : boolean extracted from private hasLooseInSelfOrAlternate(objectId AnyObjectId, skips Set<AlternateHandle.Id>) : boolean in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.internal.storage.file.LooseObjects from class org.eclipse.jgit.internal.storage.file.ObjectDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate unpackedObjectCache : UnpackedObjectCache from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private unpackedObjectCache : UnpackedObjectCache from class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate tryMove(tmp File, dst File, id ObjectId) : InsertLooseObjectResult from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private tryMove(tmp File, dst File, id ObjectId) : InsertLooseObjectResult from class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate LOG : Logger from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private LOG : Logger from class org.eclipse.jgit.internal.storage.file.LooseObjects",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "a84a2d22abef94eb632e3da711622638e354e516",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=a84a2d22abef94eb632e3da711622638e354e516",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList moved to org.eclipse.jgit.internal.storage.file.PackDirectory.PackList",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.internal.storage.file.PackDirectory from Class org.eclipse.jgit.internal.storage.file.ObjectDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate handlePackError(e IOException, p PackFile) : void from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private handlePackError(e IOException, p PackFile) : void from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate doLogExponentialBackoff(n int) : boolean from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private doLogExponentialBackoff(n int) : boolean from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage searchPacksAgain(old PackList) : boolean from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to package searchPacksAgain(old PackList) : boolean from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate indexOf(list PackFile[], pack PackFile) : int from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private indexOf(list PackFile[], pack PackFile) : int from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate scanPacks(original PackList) : PackList from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private scanPacks(original PackList) : PackList from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate scanPacksImpl(old PackList) : PackList from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private scanPacksImpl(old PackList) : PackList from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate reuseMap(old PackList) : Map<String,PackFile> from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private reuseMap(old PackList) : Map<String,PackFile> from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate listPackDirectory() : Set<String> from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private listPackDirectory() : Set<String> from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate NO_PACKS : PackList from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private NO_PACKS : PackList from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpackage packList : AtomicReference<PackList> from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private packList : AtomicReference<PackList> from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage getPacks() : Collection<PackFile> extracted from public getPacks() : Collection<PackFile> in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage resolve(matches Set<ObjectId>, id AbbreviatedObjectId, matchLimit int) : boolean extracted from private resolve(matches Set<ObjectId>, id AbbreviatedObjectId, skips Set<AlternateHandle.Id>) : void in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage open(curs WindowCursor, objectId AnyObjectId) : ObjectLoader extracted from package openPackedObject(curs WindowCursor, objectId AnyObjectId) : ObjectLoader in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage selectRepresentation(packer PackWriter, otp ObjectToPack, curs WindowCursor) : void extracted from private selectObjectRepresentation(packer PackWriter, otp ObjectToPack, curs WindowCursor, skips Set<AlternateHandle.Id>) : void in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage has(objectId AnyObjectId) : boolean extracted from package hasPackedObject(objectId AnyObjectId) : boolean in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage close() : void extracted from public close() : void in class org.eclipse.jgit.internal.storage.file.ObjectDirectory & moved to class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList moved to org.eclipse.jgit.internal.storage.file.PackDirectory.PackList",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.internal.storage.file.PackDirectory from class org.eclipse.jgit.internal.storage.file.ObjectDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate handlePackError(e IOException, p PackFile) : void from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private handlePackError(e IOException, p PackFile) : void from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate doLogExponentialBackoff(n int) : boolean from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private doLogExponentialBackoff(n int) : boolean from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage searchPacksAgain(old PackList) : boolean from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to package searchPacksAgain(old PackList) : boolean from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate indexOf(list PackFile[], pack PackFile) : int from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private indexOf(list PackFile[], pack PackFile) : int from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate scanPacks(original PackList) : PackList from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private scanPacks(original PackList) : PackList from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate scanPacksImpl(old PackList) : PackList from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private scanPacksImpl(old PackList) : PackList from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate reuseMap(old PackList) : Map<String,PackFile> from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private reuseMap(old PackList) : Map<String,PackFile> from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate listPackDirectory() : Set<String> from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private listPackDirectory() : Set<String> from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate NO_PACKS : PackList from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private NO_PACKS : PackList from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpackage packList : AtomicReference<PackList> from class org.eclipse.jgit.internal.storage.file.ObjectDirectory to private packList : AtomicReference<PackList> from class org.eclipse.jgit.internal.storage.file.PackDirectory",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tp : PackFile to packed : PackDirectory in method public close() : void from class org.eclipse.jgit.internal.storage.file.ObjectDirectory",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "d69fb4d4ac7bcf7d0d84109bba56cf944646fb24",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=d69fb4d4ac7bcf7d0d84109bba56cf944646fb24",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tboolean to void in method protected readAdvertisedRefs() : void from class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic openFetch(refSpecs Collection<RefSpec>, additionalPatterns String...) : FetchConnection renamed to private getConnection(c HttpConnection, in InputStream, service String) : FetchConnection in class org.eclipse.jgit.transport.TransportHttp",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tboolean to void in method private readAdvertisedRefsImpl() : void from class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic exec(command String, environment Map<String,String>, timeout int) : Process renamed to private createProcess(args List<String>) : ProcessBuilder in class org.eclipse.jgit.transport.TransportGitSsh.ExtSession",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tProcess to ProcessBuilder in method private createProcess(args List<String>) : ProcessBuilder from class org.eclipse.jgit.transport.TransportGitSsh.ExtSession",
          "developerConfirmation": false
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic exec(commandName String, environment Map<String,String>, timeout int) : Process inlined to public exec(commandName String, timeout int) : Process in class org.eclipse.jgit.transport.sshd.SshdSession",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic exec(command String, environment Map<String,String>, timeout int) : Process inlined to public exec(command String, timeout int) : Process in class org.eclipse.jgit.transport.JschSession",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate readLine() : String inlined to private readAdvertisedRefsImpl() : void in class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate toId(line String, value String) : ObjectId inlined to private readAdvertisedRefsImpl() : void in class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpackage readACKorEOF(returnedId MutableObjectId) : AckNackResult inlined to package readACK(returnedId MutableObjectId) : AckNackResult in class org.eclipse.jgit.transport.PacketLineIn",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate connect(service String, protocolVersion TransferConfig.ProtocolVersion) : HttpConnection inlined to private connect(service String) : HttpConnection in class org.eclipse.jgit.transport.TransportHttp",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic openFetch(refSpecs Collection<RefSpec>, additionalPatterns String...) : FetchConnection inlined to public openFetch() : FetchConnection in class org.eclipse.jgit.transport.TransportLocal",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate spawn(cmd String, protocolVersion TransferConfig.ProtocolVersion) : Process inlined to protected spawn(cmd String) : Process in class org.eclipse.jgit.transport.TransportLocal",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate createProcess(args List<String>, environment Map<String,String>) : ProcessBuilder inlined to private createProcess(args List<String>) : ProcessBuilder in class org.eclipse.jgit.transport.TransportGitSsh.ExtSession",
          "developerConfirmation": false
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate getConnection(c HttpConnection, in InputStream, service String, refSpecs Collection<RefSpec>, additionalPatterns String...) : FetchConnection inlined to private getConnection(c HttpConnection, in InputStream, service String) : FetchConnection in class org.eclipse.jgit.transport.TransportHttp",
          "developerConfirmation": false
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate processLineV1(name String, id ObjectId, avail Map<String,Ref>) : void inlined to private readAdvertisedRefsImpl() : void in class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\te : EOFException to eof : EOFException in method private readAdvertisedRefsImpl() : void from class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic exec(commandName String, environment Map<String,String>, timeout int) : Process inlined to public exec(commandName String, timeout int) : Process in class org.eclipse.jgit.transport.sshd.SshdSession",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic exec(command String, environment Map<String,String>, timeout int) : Process inlined to public exec(command String, timeout int) : Process in class org.eclipse.jgit.transport.JschSession",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate readLine() : String inlined to private readAdvertisedRefsImpl() : void in class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate readCapabilitiesV2() : void inlined to private readAdvertisedRefsImpl() : void in class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": false
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate toId(line String, value String) : ObjectId inlined to private readAdvertisedRefsImpl() : void in class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate processLineV1(name String, id ObjectId, avail Map<String,Ref>) : void inlined to private readAdvertisedRefsImpl() : void in class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tboolean to void in method protected readAdvertisedRefs() : void from class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tboolean to void in method private readAdvertisedRefsImpl() : void from class org.eclipse.jgit.transport.BasePackConnection",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpackage readACKorEOF(returnedId MutableObjectId) : AckNackResult inlined to package readACK(returnedId MutableObjectId) : AckNackResult in class org.eclipse.jgit.transport.PacketLineIn",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic exec(command String, environment Map<String,String>, timeout int) : Process inlined to public exec(command String, timeout int) : Process in class org.eclipse.jgit.transport.TransportGitSsh.ExtSession",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic openFetch(refSpecs Collection<RefSpec>, additionalPatterns String...) : FetchConnection inlined to public openFetch() : FetchConnection in class org.eclipse.jgit.transport.TransportHttp",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate connect(service String, protocolVersion TransferConfig.ProtocolVersion) : HttpConnection inlined to private connect(service String) : HttpConnection in class org.eclipse.jgit.transport.TransportHttp",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic openFetch(refSpecs Collection<RefSpec>, additionalPatterns String...) : FetchConnection inlined to public openFetch() : FetchConnection in class org.eclipse.jgit.transport.TransportLocal",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate spawn(cmd String, protocolVersion TransferConfig.ProtocolVersion) : Process inlined to protected spawn(cmd String) : Process in class org.eclipse.jgit.transport.TransportLocal",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tsession : RemoteSession in method package SshFetchConnection(refSpecs Collection<RefSpec>, additionalPatterns String...) from class org.eclipse.jgit.transport.TransportGitSsh.SshFetchConnection",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "e9c7ba6fdccf64b16fdadd74106175f95454ec4f",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=e9c7ba6fdccf64b16fdadd74106175f95454ec4f",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tcreateXDGConfigHomeFailed : String to logXDGConfigHomeInvalid : String in class org.eclipse.jgit.internal.JGitText",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\te : IOException|InvalidPathException to e : InvalidPathException in method private getXDGConfigHome(fs FS) : Path from class org.eclipse.jgit.util.SystemReader.Default",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\txdgHomePath : Path in method private getXDGConfigHome(fs FS) : Path from class org.eclipse.jgit.util.SystemReader.Default",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tcreateXDGConfigHomeFailed : String to logXDGConfigHomeInvalid : String in class org.eclipse.jgit.internal.JGitText",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\te : IOException|InvalidPathException to e : InvalidPathException in method private getXDGConfigHome(fs FS) : Path from class org.eclipse.jgit.util.SystemReader.Default",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\txdgHomePath : Path in method private getXDGConfigHome(fs FS) : Path from class org.eclipse.jgit.util.SystemReader.Default",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tconfigPath : Path in method public openJGitConfig(parent Config, fs FS) : FileBasedConfig from class org.eclipse.jgit.util.SystemReader.Default",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "eb67862cbaf8f77a7ebb6e01a0d43366d3a223f0",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=eb67862cbaf8f77a7ebb6e01a0d43366d3a223f0",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate readPublicKey(key Path) : PublicKey extracted from public setTestUserPublicKey(key Path) : void in class org.eclipse.jgit.junit.ssh.SshTestGitServer",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate readKeyPair(keyMaterial byte[]) : KeyPair extracted from public SshTestGitServer(testUser String, testKey Path, repository Repository, hostKey byte[]) in class org.eclipse.jgit.junit.ssh.SshTestGitServer",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate readKeyPair(keyMaterial byte[]) : KeyPair extracted from public SshTestGitServer(testUser String, testKey Path, repository Repository, hostKey byte[]) in class org.eclipse.jgit.junit.ssh.SshTestGitServer",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate readPublicKey(key Path) : PublicKey extracted from public setTestUserPublicKey(key Path) : void in class org.eclipse.jgit.junit.ssh.SshTestGitServer",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "0b9370bec83739afa6dfe68241964d80eec36b43",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=0b9370bec83739afa6dfe68241964d80eec36b43",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic testPushWithSessionLimit() : void renamed to public testCloneAndFetchWithSessionLimit() : void in class org.eclipse.jgit.transport.sshd.ApacheSshTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic testPushWithSessionLimit() : void renamed to public testCloneAndFetchWithSessionLimit() : void in class org.eclipse.jgit.transport.sshd.ApacheSshTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://git.eclipse.org/r/jgit/jgit.git",
      "sha1": "8d2d683655e2de17cf465fa46af10e0e56b3aaed",
      "url": "https://git.eclipse.org/c/jgit/jgit.git/commit/?id=8d2d683655e2de17cf465fa46af10e0e56b3aaed",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.ssh.SshTestHarness moved to org.eclipse.jgit.junit.ssh.SshTestHarness",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tfactory : DefaultSshSessionFactory to factory : JschConfigSessionFactory in class org.eclipse.jgit.transport.JschConfigSessionFactoryTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.ssh.SshTestBase moved to org.eclipse.jgit.junit.ssh.SshTestBase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.eclipse.jgit.internal.transport.jsch.JSchText from Class org.eclipse.jgit.internal.JGitText",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpublic sshUserNameError : String from class org.eclipse.jgit.internal.JGitText to public sshUserNameError : String from class org.eclipse.jgit.internal.transport.jsch.JSchText",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpublic transportSSHRetryInterrupt : String from class org.eclipse.jgit.internal.JGitText to public transportSSHRetryInterrupt : String from class org.eclipse.jgit.internal.transport.jsch.JSchText",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.ssh.SshTestHarness moved to org.eclipse.jgit.junit.ssh.SshTestHarness",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.eclipse.jgit.transport.ssh.SshTestBase moved to org.eclipse.jgit.junit.ssh.SshTestBase",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tfactory : DefaultSshSessionFactory to factory : JschConfigSessionFactory in class org.eclipse.jgit.transport.JschConfigSessionFactoryTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate isJsch() : boolean extracted from public testSshKeys(keyName String) : void in class org.eclipse.jgit.junit.ssh.SshTestBase",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpublic sshUserNameError : String from class org.eclipse.jgit.internal.JGitText to public sshUserNameError : String from class org.eclipse.jgit.internal.transport.jsch.JSchText",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpublic transportSSHRetryInterrupt : String from class org.eclipse.jgit.internal.JGitText to public transportSSHRetryInterrupt : String from class org.eclipse.jgit.internal.transport.jsch.JSchText",
          "developerConfirmation": true
        }
      ]
    }
  ]
}