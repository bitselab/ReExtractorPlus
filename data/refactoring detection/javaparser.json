{
  "results": [
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "135d3c2209be9c57c3254705066061786477328f",
      "url": "https://github.com/javaparser/javaparser/commit/135d3c2209be9c57c3254705066061786477328f",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tOBJECT_METHODS_SIGNATURES : List<String> to OBJECT_PUBLIC_METHODS_SIGNATURES : List<String> in class com.github.javaparser.resolution.logic.FunctionalInterfaceLogic",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate declaredOnObject(m MethodUsage) : boolean renamed to private isPublicMemberOfObject(m MethodUsage) : boolean in class com.github.javaparser.resolution.logic.FunctionalInterfaceLogic",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate declaredOnObject(m MethodUsage) : boolean renamed to private isPublicMemberOfObject(m MethodUsage) : boolean in class com.github.javaparser.resolution.logic.FunctionalInterfaceLogic",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tOBJECT_METHODS_SIGNATURES : List<String> to OBJECT_PUBLIC_METHODS_SIGNATURES : List<String> in class com.github.javaparser.resolution.logic.FunctionalInterfaceLogic",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "3e22ad6bf835e167a8492611e38e153749e3a490",
      "url": "https://github.com/javaparser/javaparser/commit/3e22ad6bf835e167a8492611e38e153749e3a490",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.resolution.promotion.BooleanConditionalExprHandler moved to com.github.javaparser.symbolsolver.resolution.promotion.BooleanConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.resolution.promotion.ConditionalExprResolver moved to com.github.javaparser.symbolsolver.resolution.promotion.ConditionalExprResolver",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.resolution.promotion.NumericConditionalExprHandler moved to com.github.javaparser.symbolsolver.resolution.promotion.NumericConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.resolution.promotion.ReferenceConditionalExprHandler moved to com.github.javaparser.symbolsolver.resolution.promotion.ReferenceConditionalExprHandler",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.resolution.promotion.BooleanConditionalExprHandler moved to com.github.javaparser.symbolsolver.resolution.promotion.BooleanConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.resolution.promotion.ConditionalExprResolver moved to com.github.javaparser.symbolsolver.resolution.promotion.ConditionalExprResolver",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.resolution.promotion.NumericConditionalExprHandler moved to com.github.javaparser.symbolsolver.resolution.promotion.NumericConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.resolution.promotion.ReferenceConditionalExprHandler moved to com.github.javaparser.symbolsolver.resolution.promotion.ReferenceConditionalExprHandler",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "ca3ca0cbd889d07977095289d24591f282157bd8",
      "url": "https://github.com/javaparser/javaparser/commit/ca3ca0cbd889d07977095289d24591f282157bd8",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate considerIndentation(nodeText NodeText, nodeTextIndex int, numberOfCharactersToPreserve int) : int extracted from private considerEnforcingIndentation(nodeText NodeText, nodeTextIndex int) : int in class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate isEnforcingIndentationActivable(removedGroup RemovedGroup) : boolean extracted from private applyRemovedDiffElement(removedGroup RemovedGroup, removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void in class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate isRemovingIndentationActivable(removedGroup RemovedGroup) : boolean extracted from private applyRemovedDiffElement(removedGroup RemovedGroup, removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void in class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": false
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tpos : int in method private removeExtraCharacters(nodeText NodeText, nodeTextIndex int, extraCharacters int) : int from class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate considerIndentation(nodeText NodeText, nodeTextIndex int, numberOfCharactersToPreserve int) : int extracted from private considerEnforcingIndentation(nodeText NodeText, nodeTextIndex int) : int in class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate isEnforcingIndentationActivable(removedGroup RemovedGroup) : boolean extracted from private applyRemovedDiffElement(removedGroup RemovedGroup, removed Removed, originalElement TextElement, originalElementIsChild boolean, originalElementIsToken boolean) : void in class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tpos : int in method private removeExtraCharacters(nodeText NodeText, nodeTextIndex int, extraCharacters int) : int from class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "3daaa9d9f7c58640b8162d8fafb893b7d808be3f",
      "url": "https://github.com/javaparser/javaparser/commit/3daaa9d9f7c58640b8162d8fafb893b7d808be3f",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.BooleanConditionalExprHandler moved to com.github.javaparser.resolution.promotion.BooleanConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.ConditionalExprHandler moved to com.github.javaparser.resolution.promotion.ConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.ConditionalExprResolver moved to com.github.javaparser.resolution.promotion.ConditionalExprResolver",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.NumericConditionalExprHandler moved to com.github.javaparser.resolution.promotion.NumericConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.ReferenceConditionalExprHandler moved to com.github.javaparser.resolution.promotion.ReferenceConditionalExprHandler",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.BooleanConditionalExprHandler moved to com.github.javaparser.resolution.promotion.BooleanConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.ConditionalExprHandler moved to com.github.javaparser.resolution.promotion.ConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.ConditionalExprResolver moved to com.github.javaparser.resolution.promotion.ConditionalExprResolver",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.NumericConditionalExprHandler moved to com.github.javaparser.resolution.promotion.NumericConditionalExprHandler",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.resolution.promotion.ReferenceConditionalExprHandler moved to com.github.javaparser.resolution.promotion.ReferenceConditionalExprHandler",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "d682aa22ca7b16ca6e0a9545237ece44f3ddd69e",
      "url": "https://github.com/javaparser/javaparser/commit/d682aa22ca7b16ca6e0a9545237ece44f3ddd69e",
      "ourApproach": [],
      "baseline": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tobjectProvider : ObjectProvider to typeSolver : TypeSolver in class com.github.javaparser.symbolsolver.logic.InferenceContext",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tobjectProvider : ObjectProvider to typeSolver : TypeSolver in class com.github.javaparser.symbolsolver.logic.InferenceContext",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "b7375c946214c0301dd83d9fcd98b3a8ca991296",
      "url": "https://github.com/javaparser/javaparser/commit/b7375c946214c0301dd83d9fcd98b3a8ca991296",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tcu : CompilationUnit to compilationUnit : CompilationUnit in class com.github.javaparser.remove.NodeRemovalTest",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tchanged : String in method public test() : void from class com.github.javaparser.printer.lexicalpreservation.Issue3296Test",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tcu : CompilationUnit to compilationUnit : CompilationUnit in class com.github.javaparser.remove.NodeRemovalTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprotected considerStatement(code String) : void extracted from package issue2099AddingStatementAfterTraillingComment1() : void in class com.github.javaparser.printer.lexicalpreservation.TransformationsTest & moved to class com.github.javaparser.printer.lexicalpreservation.AbstractLexicalPreservingTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprotected considerStatement(code String) : void extracted from package issue2099AddingStatementAfterTraillingComment2() : void in class com.github.javaparser.printer.lexicalpreservation.TransformationsTest & moved to class com.github.javaparser.printer.lexicalpreservation.AbstractLexicalPreservingTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprotected considerStatement(code String) : void extracted from package addingStatement1() : void in class com.github.javaparser.printer.lexicalpreservation.TransformationsTest & moved to class com.github.javaparser.printer.lexicalpreservation.AbstractLexicalPreservingTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprotected considerStatement(code String) : void extracted from package addingStatement2() : void in class com.github.javaparser.printer.lexicalpreservation.TransformationsTest & moved to class com.github.javaparser.printer.lexicalpreservation.AbstractLexicalPreservingTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprotected considerStatement(code String) : void extracted from package addingStatement3() : void in class com.github.javaparser.printer.lexicalpreservation.TransformationsTest & moved to class com.github.javaparser.printer.lexicalpreservation.AbstractLexicalPreservingTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprotected considerStatement(code String) : void extracted from package testRemoveStatementFromMethodBodyWithLexicalPreservingPrinter() : void in class com.github.javaparser.remove.NodeRemovalTest & moved to class com.github.javaparser.printer.lexicalpreservation.AbstractLexicalPreservingTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "8e616cd8366d351950c4cfa4cc9bebf6687a8133",
      "url": "https://github.com/javaparser/javaparser/commit/8e616cd8366d351950c4cfa4cc9bebf6687a8133",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSymbolSolver to Solver in method public getSymbolSolver() : Solver from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSymbolSolver to Solver in method protected createSolver() : Solver from class com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.resolution.SymbolSolverTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistClassTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistEnumTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistInterfaceTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveDeclaredFieldReference() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveInheritedFieldReference() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveParameterReference() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToImportedType() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceUsingQualifiedName() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToClassesInTheSamePackage() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToClassInJavaLang() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToMethod() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveCascadeOfReferencesToMethod() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToMethodCalledOnArrayAccess() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToLambdaParamSimplified() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package accessClassFieldThroughThisWithCompetingSymbolInParentContext() : void from class com.github.javaparser.symbolsolver.resolution.FieldsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldWithGenericTypeToString() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldWithGenericTypeToDeclaredClass() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldWithGenericTypeToInteger() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldOfVariableType() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldOfGenericReferringToVariableType() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\tcom.github.javaparser.resolution.Solver from classes [com.github.javaparser.symbolsolver.resolution.SymbolSolver]",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSymbolSolver to Solver in method public getSymbolSolver() : Solver from class com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSymbolSolver to Solver in method protected createSolver() : Solver from class com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.resolution.SymbolSolverTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistClassTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistEnumTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in class com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistInterfaceTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveDeclaredFieldReference() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveInheritedFieldReference() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveParameterReference() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToImportedType() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceUsingQualifiedName() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToClassesInTheSamePackage() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToClassInJavaLang() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToMethod() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveCascadeOfReferencesToMethod() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToMethodCalledOnArrayAccess() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveReferenceToLambdaParamSimplified() : void from class com.github.javaparser.symbolsolver.resolution.ContextTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package accessClassFieldThroughThisWithCompetingSymbolInParentContext() : void from class com.github.javaparser.symbolsolver.resolution.FieldsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldWithGenericTypeToString() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldWithGenericTypeToDeclaredClass() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldWithGenericTypeToInteger() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldOfVariableType() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsymbolSolver : SymbolSolver to symbolSolver : Solver in method package resolveFieldOfGenericReferringToVariableType() : void from class com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\tcom.github.javaparser.resolution.Solver from classes [com.github.javaparser.symbolsolver.resolution.SymbolSolver]",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "9073420016c508b590f3cbfdc0b68bd5f101ec3c",
      "url": "https://github.com/javaparser/javaparser/commit/9073420016c508b590f3cbfdc0b68bd5f101ec3c",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.model.typesystem.LazyType moved to com.github.javaparser.resolution.model.typesystem.LazyType",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.model.typesystem.NullType moved to com.github.javaparser.resolution.model.typesystem.NullType",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.model.typesystem.LazyType moved to com.github.javaparser.resolution.model.typesystem.LazyType",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.symbolsolver.model.typesystem.NullType moved to com.github.javaparser.resolution.model.typesystem.NullType",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "aee62b1f3a9b2cdee1951db04df21be6e63ca24f",
      "url": "https://github.com/javaparser/javaparser/commit/aee62b1f3a9b2cdee1951db04df21be6e63ca24f",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate removeExtraCharacters(nodeText NodeText, nodeTextIndex int) : int extracted from private considerEnforcingIndentation(nodeText NodeText, nodeTextIndex int) : int in class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate hasOnlyWsBefore(nodeText NodeText, nodeTextIndex int) : boolean extracted from private considerEnforcingIndentation(nodeText NodeText, nodeTextIndex int) : int in class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate removeExtraCharacters(nodeText NodeText, nodeTextIndex int) : int extracted from private considerEnforcingIndentation(nodeText NodeText, nodeTextIndex int) : int in class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate hasOnlyWsBefore(nodeText NodeText, nodeTextIndex int) : boolean extracted from private considerEnforcingIndentation(nodeText NodeText, nodeTextIndex int) : int in class com.github.javaparser.printer.lexicalpreservation.Difference",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "97240408d5c48e602a5a277a0af8e98137d32800",
      "url": "https://github.com/javaparser/javaparser/commit/97240408d5c48e602a5a277a0af8e98137d32800",
      "ourApproach": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate createDefaultVisitor(configuration PrinterConfiguration) : Function<PrinterConfiguration,VoidVisitor<Void>> inlined to private createDefaultVisitor() : Function<PrinterConfiguration,VoidVisitor<Void>> in class com.github.javaparser.printer.DefaultPrettyPrinter",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate createDefaultVisitor(configuration PrinterConfiguration) : Function<PrinterConfiguration,VoidVisitor<Void>> inlined to private createDefaultVisitor() : Function<PrinterConfiguration,VoidVisitor<Void>> in class com.github.javaparser.printer.DefaultPrettyPrinter",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "04d0cb226040a035e08d8be4677e74863d8f18de",
      "url": "https://github.com/javaparser/javaparser/commit/04d0cb226040a035e08d8be4677e74863d8f18de",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage nullOperandInConditionalExpression() : void renamed to package test_null_operand_in_conditional_expression() : void in class com.github.javaparser.symbolsolver.resolution.ConditionalExprTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage booleanConditionalExpression() : void renamed to package test_boolean_conditional_expression() : void in class com.github.javaparser.symbolsolver.resolution.ConditionalExprTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage numericConditionalExpression() : void renamed to package test_numeric_conditional_expression() : void in class com.github.javaparser.symbolsolver.resolution.ConditionalExprTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage referenceConditionalExpression() : void renamed to package test_reference_conditional_expression() : void in class com.github.javaparser.symbolsolver.resolution.ConditionalExprTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage nullOperandInConditionalExpression() : void renamed to package test_null_operand_in_conditional_expression() : void in class com.github.javaparser.symbolsolver.resolution.ConditionalExprTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage booleanConditionalExpression() : void renamed to package test_boolean_conditional_expression() : void in class com.github.javaparser.symbolsolver.resolution.ConditionalExprTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage numericConditionalExpression() : void renamed to package test_numeric_conditional_expression() : void in class com.github.javaparser.symbolsolver.resolution.ConditionalExprTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage referenceConditionalExpression() : void renamed to package test_reference_conditional_expression() : void in class com.github.javaparser.symbolsolver.resolution.ConditionalExprTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "3f01add3f56546240d08fb3201a9f1143ede54d9",
      "url": "https://github.com/javaparser/javaparser/commit/3f01add3f56546240d08fb3201a9f1143ede54d9",
      "ourApproach": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\tcom.github.javaparser.ast.validator.Java16ValidatorTest.Record.RecordAsIdentifierForbidden renamed to com.github.javaparser.ast.validator.Java16ValidatorTest.Record.RecordAsIdentifierSometimesForbidden",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage recordUsedAsFieldName() : void renamed to package recordUsedAsFieldNameInClass() : void in class com.github.javaparser.ast.validator.Java16ValidatorTest.Record.RecordAsIdentifierSometimesForbidden",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate usedAsClassOrInterfaceName(n Node) : boolean renamed to private validUsage(node Node) : boolean in class com.github.javaparser.ast.validator.ReservedKeywordValidatorRecord",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpackage recordAsClassAndInterfaceIdentifierNotAllowed : Validator from class com.github.javaparser.ast.validator.language_level_validations.Java16Validator to package recordAsClassAndInterfaceIdentifierNotAllowed : Validator from class com.github.javaparser.ast.validator.language_level_validations.Java14Validator",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\tcom.github.javaparser.ast.validator.Java16ValidatorTest.Record.RecordAsIdentifierForbidden renamed to com.github.javaparser.ast.validator.Java16ValidatorTest.Record.RecordAsIdentifierSometimesForbidden",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate usedAsClassOrInterfaceName(n Node) : boolean renamed to private validUsage(node Node) : boolean in class com.github.javaparser.ast.validator.ReservedKeywordValidatorRecord",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage recordUsedAsFieldName() : void renamed to package recordUsedAsFieldNameInClass() : void in class com.github.javaparser.ast.validator.Java16ValidatorTest.Record.RecordAsIdentifierSometimesForbidden",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpackage recordAsClassAndInterfaceIdentifierNotAllowed : Validator from class com.github.javaparser.ast.validator.language_level_validations.Java16Validator to package recordAsClassAndInterfaceIdentifierNotAllowed : Validator from class com.github.javaparser.ast.validator.language_level_validations.Java14Validator",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "853048dfe3ae630cbf8e0ab487f0dee115e636ce",
      "url": "https://github.com/javaparser/javaparser/commit/853048dfe3ae630cbf8e0ab487f0dee115e636ce",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.resolution.declarations.ResolvedTypeDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.reflectionmodel.ReflectionAnnotationDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.reflectionmodel.ReflectionEnumDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.resolution.DefaultPackageTest.MyClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tres : List<ResolvedReferenceTypeDeclaration> to res : Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tres : List<ResolvedReferenceTypeDeclaration> to res : Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tres : List<ResolvedReferenceTypeDeclaration> to res : Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.resolution.declarations.ResolvedTypeDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.reflectionmodel.ReflectionAnnotationDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.reflectionmodel.ReflectionEnumDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<ResolvedReferenceTypeDeclaration> to Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.resolution.DefaultPackageTest.MyClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tres : List<ResolvedReferenceTypeDeclaration> to res : Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tres : List<ResolvedReferenceTypeDeclaration> to res : Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclaration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tres : List<ResolvedReferenceTypeDeclaration> to res : Set<ResolvedReferenceTypeDeclaration> in method public internalTypes() : Set<ResolvedReferenceTypeDeclaration> from class com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclaration",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "9e55bc54539d393e1948c8d4a89b1511ed379fad",
      "url": "https://github.com/javaparser/javaparser/commit/9e55bc54539d393e1948c8d4a89b1511ed379fad",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage record_mustNotAllowNonStaticFields() : void renamed to package record_forbidNonStaticFields() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage record_mustAllowStaticFields() : void renamed to package record_permitStaticFields2() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\tcom.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels from Class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage basicGrammarCompiles_languageLevelValidation_forbidden(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest to package basicGrammarCompiles_languageLevelValidation_forbidden(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage basicGrammarCompiles_languageLevelValidation_permitted(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest to package basicGrammarCompiles_languageLevelValidation_permitted(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage languageLevelValidation_recordAsTypeIdentifier_permitted(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest to package languageLevelValidation_recordAsTypeIdentifier_permitted(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage languageLevelValidation_recordAsTypeIdentifier_forbidden(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest to package languageLevelValidation_recordAsTypeIdentifier_forbidden(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage record_mustNotAllowNonStaticFields() : void renamed to package record_forbidNonStaticFields() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage record_mustAllowStaticFields() : void renamed to package record_isImplicitlyFinalWithoutExplicit() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\tcom.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels from class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage basicGrammarCompiles_languageLevelValidation_forbidden(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest to package basicGrammarCompiles_languageLevelValidation_forbidden(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage basicGrammarCompiles_languageLevelValidation_permitted(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest to package basicGrammarCompiles_languageLevelValidation_permitted(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage languageLevelValidation_recordAsTypeIdentifier_permitted(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest to package languageLevelValidation_recordAsTypeIdentifier_permitted(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage languageLevelValidation_recordAsTypeIdentifier_forbidden(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest to package languageLevelValidation_recordAsTypeIdentifier_forbidden(languageLevel ParserConfiguration.LanguageLevel) : void from class com.github.javaparser.ast.body.RecordDeclarationTest.LanguageLevels",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "e6060a4498c454e22d7ed1bd1f2e814e34ef89b5",
      "url": "https://github.com/javaparser/javaparser/commit/e6060a4498c454e22d7ed1bd1f2e814e34ef89b5",
      "ourApproach": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate addPathToJar(jarInputStream InputStream) : void inlined to public JarTypeSolver(jarInputStream InputStream) in class com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate addPathToJar(jarInputStream InputStream) : void inlined to public JarTypeSolver(jarInputStream InputStream) in class com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tjarFile : JarFile to jarNotFound : FileNotFoundException in method private addPathToJar(pathToJar String) : void from class com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver",
          "developerConfirmation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tjarFile : JarFile to jarNotFound : FileNotFoundException in method private addPathToJar(pathToJar String) : void from class com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolver",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "6d3c852a7ac115d9149dd96a71dee3dfd4c5d91b",
      "url": "https://github.com/javaparser/javaparser/commit/6d3c852a7ac115d9149dd96a71dee3dfd4c5d91b",
      "ourApproach": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\tcom.github.javaparser.symbolsolver.Issue3088Test renamed to com.github.javaparser.symbolsolver.Issue3087Test",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\tcom.github.javaparser.symbolsolver.Issue3088Test renamed to com.github.javaparser.symbolsolver.Issue3087Test",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "a73aba7b8cef7c52666d25169a3f6e495c65bcd2",
      "url": "https://github.com/javaparser/javaparser/commit/a73aba7b8cef7c52666d25169a3f6e495c65bcd2",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertCompilationFails(s String) : void extracted from package record_cannotExtend() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertCompilationFails(s String) : void extracted from package record_cannotBeAbstract() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertCompilationFails(s String) : void extracted from package record_mustNotAllowNonStaticFields() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertCompilationFails(s String) : void extracted from package record_mustNotAllowMismatchedComponentAccessorReturnType() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package basicGrammarCompiles() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package basicGrammar() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_emptyMembers() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_permitStaticFields() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_permitMethods() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_mustAllowStaticFields() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_allowMethodsWithSameNameAsRecordComponentButNotAnAccessorMethod() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_allowMethodsWithSameNameAsRecordComponentButNotAnAccessorMethod2() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_allowComponentAccessorWithMatchingType() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package basicGrammarCompiles() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package basicGrammar() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertCompilationFails(s String) : void extracted from package record_cannotExtend() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertCompilationFails(s String) : void extracted from package record_cannotBeAbstract() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_permitStaticFields() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_permitMethods() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertCompilationFails(s String) : void extracted from package record_mustNotAllowNonStaticFields() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_mustAllowStaticFields() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertCompilationFails(s String) : void extracted from package record_mustNotAllowMismatchedComponentAccessorReturnType() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_allowMethodsWithSameNameAsRecordComponentButNotAnAccessorMethod() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_allowMethodsWithSameNameAsRecordComponentButNotAnAccessorMethod2() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate assertOneRecordDeclaration(cu CompilationUnit) : void extracted from package record_allowComponentAccessorWithMatchingType() : void in class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\trecordDeclarations : List<RecordDeclaration> in method package basicGrammar() : void from class com.github.javaparser.ast.body.RecordDeclarationTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "e405ceecdc4c3fe0c8b80688f4df4513df3ca50b",
      "url": "https://github.com/javaparser/javaparser/commit/e405ceecdc4c3fe0c8b80688f4df4513df3ca50b",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<ConfigurableOption> to Set<ConfigurationOption> in method public get() : Set<ConfigurationOption> from class com.github.javaparser.printer.configuration.PrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<ConfigurableOption> to Set<ConfigurationOption> in method public get() : Set<ConfigurationOption> from class com.github.javaparser.printer.configuration.PrettyPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method public get(option ConfigurationOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.configuration.PrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdefaultOptions : Set<ConfigurableOption> to defaultOptions : Set<ConfigurationOption> in class com.github.javaparser.printer.configuration.DefaultPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method private getOption(config PrinterConfiguration, cOption ConfigOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.PrinterConfigurationTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method public get(option ConfigurationOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.configuration.PrettyPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method private getOption(cOption ConfigOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.DefaultPrettyPrinterVisitor",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tConfigurableOption to ConfigurationOption in method public value(value Object) : ConfigurationOption from class com.github.javaparser.printer.configuration.ConfigurationOption",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\tcom.github.javaparser.printer.configuration.ConfigurableOption renamed to com.github.javaparser.printer.configuration.ConfigurationOption",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method private getOption(config PrinterConfiguration, cOption ConfigOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.PrettyPrintVisitorTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<ConfigurableOption> to Set<ConfigurationOption> in method public get() : Set<ConfigurationOption> from class com.github.javaparser.printer.configuration.DefaultPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tConfigurableOption to ConfigurationOption in method public value(value Object) : ConfigurationOption from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method public get(option ConfigurationOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.configuration.DefaultPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\tcom.github.javaparser.printer.configuration.ConfigurationOption renamed to com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method private getOption(config PrinterConfiguration, cOption ConfigOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.PrettyPrinterTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tother : ConfigurationOption to other : DefaultConfigurationOption in method public equals(o Object) : boolean from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method private getOption(config PrinterConfiguration, cOption ConfigOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.PrettyPrintVisitorTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method private getOption(config PrinterConfiguration, cOption ConfigOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.PrettyPrinterTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method private getOption(config PrinterConfiguration, cOption ConfigOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.PrinterConfigurationTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method private getOption(cOption ConfigOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.DefaultPrettyPrinterVisitor",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdefaultOptions : Set<ConfigurableOption> to defaultOptions : Set<ConfigurationOption> in class com.github.javaparser.printer.configuration.DefaultPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<ConfigurableOption> to Set<ConfigurationOption> in method public get() : Set<ConfigurationOption> from class com.github.javaparser.printer.configuration.DefaultPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method public get(option ConfigurationOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.configuration.DefaultPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<ConfigurableOption> to Set<ConfigurationOption> in method public get() : Set<ConfigurationOption> from class com.github.javaparser.printer.configuration.PrettyPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method public get(option ConfigurationOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.configuration.PrettyPrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<ConfigurableOption> to Set<ConfigurationOption> in method public get() : Set<ConfigurationOption> from class com.github.javaparser.printer.configuration.PrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tConfigurableOption to ConfigurationOption in method public value(value Object) : ConfigurationOption from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<ConfigurableOption> to Optional<ConfigurationOption> in method public get(option ConfigurationOption) : Optional<ConfigurationOption> from class com.github.javaparser.printer.configuration.PrinterConfiguration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tother : ConfigurationOption to other : DefaultConfigurationOption in method public equals(o Object) : boolean from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_TYPE_DECLARATION_KIND",
          "description": "Change Type Declaration Kind\tclass to interface in type com.github.javaparser.printer.configuration.ConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_SUBCLASS",
          "description": "Extract Subclass\tcom.github.javaparser.printer.configuration.DefaultConfigurationOption from class com.github.javaparser.printer.configuration.ConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic equals(o Object) : boolean from class com.github.javaparser.printer.configuration.ConfigurationOption to public equals(o Object) : boolean from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic hashCode() : int from class com.github.javaparser.printer.configuration.ConfigurationOption to public hashCode() : int from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic value(value Object) : ConfigurableOption from class com.github.javaparser.printer.configuration.ConfigurationOption to public value(value Object) : ConfigurationOption from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic hasValue() : boolean from class com.github.javaparser.printer.configuration.ConfigurationOption to public hasValue() : boolean from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic asInteger() : Integer from class com.github.javaparser.printer.configuration.ConfigurationOption to public asInteger() : Integer from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic asString() : String from class com.github.javaparser.printer.configuration.ConfigurationOption to public asString() : String from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic asBoolean() : Boolean from class com.github.javaparser.printer.configuration.ConfigurationOption to public asBoolean() : Boolean from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic asValue() : T from class com.github.javaparser.printer.configuration.ConfigurationOption to public asValue() : T from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tprivate cast() : T from class com.github.javaparser.printer.configuration.ConfigurationOption to private cast() : T from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic hasValue() : boolean from class com.github.javaparser.printer.configuration.ConfigurableOption to public hasValue() : boolean from class com.github.javaparser.printer.configuration.ConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic asInteger() : Integer from class com.github.javaparser.printer.configuration.ConfigurableOption to public asInteger() : Integer from class com.github.javaparser.printer.configuration.ConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic asString() : String from class com.github.javaparser.printer.configuration.ConfigurableOption to public asString() : String from class com.github.javaparser.printer.configuration.ConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic asBoolean() : Boolean from class com.github.javaparser.printer.configuration.ConfigurableOption to public asBoolean() : Boolean from class com.github.javaparser.printer.configuration.ConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic asValue() : T from class com.github.javaparser.printer.configuration.ConfigurableOption to public asValue() : T from class com.github.javaparser.printer.configuration.ConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic ConfigurationOption(configOption ConfigOption) from class com.github.javaparser.printer.configuration.ConfigurationOption to public DefaultConfigurationOption(configOption ConfigOption) from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic ConfigurationOption(configOption ConfigOption, value Object) from class com.github.javaparser.printer.configuration.ConfigurationOption to public DefaultConfigurationOption(configOption ConfigOption, value Object) from class com.github.javaparser.printer.configuration.DefaultConfigurationOption",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "4da1e1ba016b9143cc81cb772249a51570a02c87",
      "url": "https://github.com/javaparser/javaparser/commit/4da1e1ba016b9143cc81cb772249a51570a02c87",
      "ourApproach": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tprinter : PrintableSource to printer : SourcePrinter in class com.github.javaparser.printer.DefaultPrettyPrinterVisitor",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\tcom.github.javaparser.printer.PrettyPrintableTest renamed to com.github.javaparser.printer.DefaultPrettyPrinterTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\tcom.github.javaparser.printer.PrettyPrintableTest renamed to com.github.javaparser.printer.DefaultPrettyPrinterTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tprinter : PrintableSource to printer : SourcePrinter in class com.github.javaparser.printer.DefaultPrettyPrinterVisitor",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/javaparser/javaparser.git",
      "sha1": "b08e66263903837d53a688b5d12a758c8cdf167e",
      "url": "https://github.com/javaparser/javaparser/commit/b08e66263903837d53a688b5d12a758c8cdf167e",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic type(type IndentType) : Indentation renamed to public setType(type IndentType) : Indentation in class com.github.javaparser.printer.configuration.Indentation",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic size(size int) : Indentation renamed to public setSize(size int) : Indentation in class com.github.javaparser.printer.configuration.Indentation",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.printer.PrettyPrinterConfiguration.Indentation moved to com.github.javaparser.printer.configuration.Indentation",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.printer.PrettyPrinterConfiguration.IndentType moved to com.github.javaparser.printer.configuration.Indentation.IndentType",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.printer.PrettyPrinterConfiguration.Indentation moved to com.github.javaparser.printer.configuration.Indentation",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tcom.github.javaparser.printer.PrettyPrinterConfiguration.IndentType moved to com.github.javaparser.printer.configuration.Indentation.IndentType",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic size(size int) : Indentation renamed to public setSize(size int) : Indentation in class com.github.javaparser.printer.configuration.Indentation",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic type(type IndentType) : Indentation renamed to public setType(type IndentType) : Indentation in class com.github.javaparser.printer.configuration.Indentation",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic getSize() : int extracted from public getIndentSize() : int in class com.github.javaparser.printer.PrettyPrinterConfiguration & moved to class com.github.javaparser.printer.configuration.Indentation",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic getType() : IndentType extracted from private calculateIndentWithAlignTo(column int) : String in class com.github.javaparser.printer.SourcePrinter & moved to class com.github.javaparser.printer.configuration.Indentation",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic getWidth() : int extracted from private calculateIndentWithAlignTo(column int) : String in class com.github.javaparser.printer.SourcePrinter & moved to class com.github.javaparser.printer.configuration.Indentation.IndentType",
          "developerConfirmation": false
        }
      ]
    }
  ]
}