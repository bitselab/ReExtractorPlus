{
  "results": [
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "300a792bb6c34e9e745054bb84578ba257cf4a4a",
      "url": "https://github.com/hibernate/hibernate-orm/commit/300a792bb6c34e9e745054bb84578ba257cf4a4a",
      "ourApproach": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_8 : Duration to TICK_8 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_7 : Duration to TICK_7 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_6 : Duration to TICK_6 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_5 : Duration to TICK_5 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_4 : Duration to TICK_4 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_3 : Duration to TICK_3 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_2 : Duration to TICK_2 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_1 : Duration to TICK_1 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_0 : Duration to TICK_0 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_8 : Duration to TICK_8 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_7 : Duration to TICK_7 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_6 : Duration to TICK_6 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_5 : Duration to TICK_5 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_4 : Duration to TICK_4 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_3 : Duration to TICK_3 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_2 : Duration to TICK_2 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_1 : Duration to TICK_1 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTICK_0 : Duration to TICK_0 : Clock in class org.hibernate.type.descriptor.java.ClockHelper",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "241cdf16d9e2f598b5e2bf3933507eb755f6b5d4",
      "url": "https://github.com/hibernate/hibernate-orm/commit/241cdf16d9e2f598b5e2bf3933507eb755f6b5d4",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic forEachDisassembledJdbcValue(value Object, x X, y Y, valuesConsumer JdbcValuesBiConsumer<X,Y>, session SharedSessionContractImplementor) : int extracted from public forEachDisassembledJdbcValue(value Object, valuesConsumer JdbcValuesConsumer, session SharedSessionContractImplementor) : int in class org.hibernate.metamodel.mapping.Bindable",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic forEachJdbcValue(value Object, x X, y Y, valuesConsumer JdbcValuesBiConsumer<X,Y>, session SharedSessionContractImplementor) : int extracted from public forEachJdbcValue(value Object, valuesConsumer JdbcValuesConsumer, session SharedSessionContractImplementor) : int in class org.hibernate.metamodel.mapping.Bindable",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic forEachJdbcValue(value Object, offset int, x X, y Y, valuesConsumer JdbcValuesBiConsumer<X,Y>, session SharedSessionContractImplementor) : int extracted from public forEachJdbcValue(value Object, offset int, valuesConsumer JdbcValuesConsumer, session SharedSessionContractImplementor) : int in class org.hibernate.metamodel.mapping.Bindable",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic forEachDisassembledJdbcValue(value Object, x X, y Y, valuesConsumer JdbcValuesBiConsumer<X,Y>, session SharedSessionContractImplementor) : int extracted from public forEachDisassembledJdbcValue(value Object, valuesConsumer JdbcValuesConsumer, session SharedSessionContractImplementor) : int in class org.hibernate.metamodel.mapping.Bindable",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic forEachJdbcValue(value Object, x X, y Y, valuesConsumer JdbcValuesBiConsumer<X,Y>, session SharedSessionContractImplementor) : int extracted from public forEachJdbcValue(value Object, valuesConsumer JdbcValuesConsumer, session SharedSessionContractImplementor) : int in class org.hibernate.metamodel.mapping.Bindable",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic forEachJdbcValue(value Object, offset int, x X, y Y, valuesConsumer JdbcValuesBiConsumer<X,Y>, session SharedSessionContractImplementor) : int extracted from public forEachJdbcValue(value Object, offset int, valuesConsumer JdbcValuesConsumer, session SharedSessionContractImplementor) : int in class org.hibernate.metamodel.mapping.Bindable",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "890e4ad62c1d9757c5181c1496efacff6460f24b",
      "url": "https://github.com/hibernate/hibernate-orm/commit/890e4ad62c1d9757c5181c1496efacff6460f24b",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.mapping.joincolumn.CharArrayToStringInEmbeddedJoinColumnOrFormulaTest moved to org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedJoinColumnOrFormulaTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate testCriteriaTreat(entityManager EntityManager, property String, value Object, plural boolean) : void extracted from private testCriteriaTreat(entityManager EntityManager, property String, value Object) : void in class org.hibernate.orm.test.jpa.criteria.TreatPathTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.CharArrayToStringJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.CharArrayToStringJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.StringToCharArrayJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.StringToCharArrayJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedMultipleJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedMultipleJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.StringToCharArrayInEmbeddedJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.StringToCharArrayInEmbeddedJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.StringToCharArrayInEmbeddedMultipleJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.StringToCharArrayInEmbeddedMultipleJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tjavaType : JavaType<?> in method private createDomainResult(navigablePath NavigablePath, tableGroup TableGroup, selectableMapping SelectableMapping, fetchParent FetchParent, creationState DomainResultCreationState) : DomainResult<T> from class org.hibernate.metamodel.mapping.internal.SimpleForeignKeyDescriptor",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.mapping.joincolumn.CharArrayToStringInEmbeddedJoinColumnOrFormulaTest moved to org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedJoinColumnOrFormulaTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate testCriteriaTreat(entityManager EntityManager, property String, value Object, plural boolean) : void extracted from private testCriteriaTreat(entityManager EntityManager, property String, value Object) : void in class org.hibernate.orm.test.jpa.criteria.TreatPathTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.CharArrayToStringJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.CharArrayToStringJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.StringToCharArrayJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.StringToCharArrayJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedMultipleJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.CharArrayToStringInEmbeddedMultipleJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.StringToCharArrayInEmbeddedJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.StringToCharArrayInEmbeddedJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.StringToCharArrayInEmbeddedMultipleJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresultList : List<VehicleInvoice> to vehicleInvoice : VehicleInvoice in method public testAssociation(scope SessionFactoryScope) : void from class org.hibernate.orm.test.mapping.joincolumn.embedded.StringToCharArrayInEmbeddedMultipleJoinColumnTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tjavaType : JavaType<?> in method private createDomainResult(navigablePath NavigablePath, tableGroup TableGroup, selectableMapping SelectableMapping, fetchParent FetchParent, creationState DomainResultCreationState) : DomainResult<T> from class org.hibernate.metamodel.mapping.internal.SimpleForeignKeyDescriptor",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "ff8b673689b9cfcc2e18b023d8c1621731e56cc4",
      "url": "https://github.com/hibernate/hibernate-orm/commit/ff8b673689b9cfcc2e18b023d8c1621731e56cc4",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.Monitor moved to org.hibernate.orm.test.cdi.general.hibernatesearch.Monitor",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheAlternativeNamedApplicationScopedBeanImpl moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheAlternativeNamedApplicationScopedBeanImpl",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheAlternativeNamedDependentBeanImpl moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheAlternativeNamedDependentBeanImpl",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheApplicationScopedBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheApplicationScopedBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheDependentBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheDependentBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheEntity moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheEntity",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheFallbackBeanInstanceProducer moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheFallbackBeanInstanceProducer",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheMainNamedApplicationScopedBeanImpl moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheMainNamedApplicationScopedBeanImpl",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheMainNamedDependentBeanImpl moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheMainNamedDependentBeanImpl",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheNamedApplicationScopedBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheNamedApplicationScopedBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheNamedDependentBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheNamedDependentBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheNestedDependentBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheNestedDependentBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheNonHibernateBeanConsumer moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheNonHibernateBeanConsumer",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheReflectionInstantiatedBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheReflectionInstantiatedBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheSharedApplicationScopedBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheSharedApplicationScopedBean",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbeanConsumingIntegrator : NonRegistryManagedBeanConsumingIntegrator to beanConsumingIntegrator : HibernateSearchSimulatedIntegrator in method public testIt() : void from class org.hibernate.orm.test.cdi.general.hibernatesearch.delayed.HibernateSearchDelayedCdiSupportTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbeanConsumingIntegrator : NonRegistryManagedBeanConsumingIntegrator to beanConsumingIntegrator : HibernateSearchSimulatedIntegrator in method private doTest(beanManager TestingExtendedBeanManager) : void from class org.hibernate.orm.test.cdi.general.hibernatesearch.extended.HibernateSearchExtendedCdiSupportTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbeanConsumingIntegrator : NonRegistryManagedBeanConsumingIntegrator to beanConsumingIntegrator : HibernateSearchSimulatedIntegrator in method public testIt() : void from class org.hibernate.orm.test.cdi.general.hibernatesearch.standard.HibernateSearchStandardCdiSupportTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.Monitor moved to org.hibernate.orm.test.cdi.general.hibernatesearch.Monitor",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheAlternativeNamedApplicationScopedBeanImpl moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheAlternativeNamedApplicationScopedBeanImpl",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheAlternativeNamedDependentBeanImpl moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheAlternativeNamedDependentBeanImpl",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheApplicationScopedBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheApplicationScopedBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheDependentBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheDependentBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheEntity moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheEntity",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheFallbackBeanInstanceProducer moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheFallbackBeanInstanceProducer",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheMainNamedApplicationScopedBeanImpl moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheMainNamedApplicationScopedBeanImpl",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheMainNamedDependentBeanImpl moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheMainNamedDependentBeanImpl",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheNamedApplicationScopedBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheNamedApplicationScopedBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheNamedDependentBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheNamedDependentBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheNestedDependentBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheNestedDependentBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheNonHibernateBeanConsumer moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheNonHibernateBeanConsumer",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheReflectionInstantiatedBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheReflectionInstantiatedBean",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.orm.test.cdi.general.nonregistrymanaged.TheSharedApplicationScopedBean moved to org.hibernate.orm.test.cdi.general.hibernatesearch.TheSharedApplicationScopedBean",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbeanConsumingIntegrator : NonRegistryManagedBeanConsumingIntegrator to beanConsumingIntegrator : HibernateSearchSimulatedIntegrator in method public testIt() : void from class org.hibernate.orm.test.cdi.general.hibernatesearch.delayed.HibernateSearchDelayedCdiSupportTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbeanConsumingIntegrator : NonRegistryManagedBeanConsumingIntegrator to beanConsumingIntegrator : HibernateSearchSimulatedIntegrator in method private doTest(beanManager TestingExtendedBeanManager) : void from class org.hibernate.orm.test.cdi.general.hibernatesearch.extended.HibernateSearchExtendedCdiSupportTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbeanConsumingIntegrator : NonRegistryManagedBeanConsumingIntegrator to beanConsumingIntegrator : HibernateSearchSimulatedIntegrator in method public testIt() : void from class org.hibernate.orm.test.cdi.general.hibernatesearch.standard.HibernateSearchStandardCdiSupportTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "5525b8d9b7b3cc526b648c9be837a2024dcfcb40",
      "url": "https://github.com/hibernate/hibernate-orm/commit/5525b8d9b7b3cc526b648c9be837a2024dcfcb40",
      "ourApproach": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.sql.model.internal.TableUpsert renamed to org.hibernate.sql.model.internal.OptionalTableUpdate",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.sql.model.internal.TableUpsert renamed to org.hibernate.sql.model.internal.OptionalTableUpdate",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "2a24876f69415bee327645ea0a8b86f3db4acc19",
      "url": "https://github.com/hibernate/hibernate-orm/commit/2a24876f69415bee327645ea0a8b86f3db4acc19",
      "ourApproach": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttimestamp : Long to timestamp : Instant in class org.hibernate.orm.test.secondarytable.SpecialRecord",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic appendReadExpression(qualifier String, appender Consumer<String>) : void extracted from public appendReadExpression(appender SqlAppender, qualifier String) : void in class org.hibernate.sql.ast.tree.expression.ColumnReference",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate verifySecondaryRows(table String, expectedCount int, sfScope SessionFactoryScope) : void extracted from private verifySecondaryRows(scope SessionFactoryScope, expectedCount int) : void in class org.hibernate.orm.test.write.UpsertTests",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic appendReadExpression(qualifier String, appender Consumer<String>) : void extracted from private renderMergeInsert(tableUpsert TableUpsert) : void in class org.hibernate.dialect.H2SqlAstTranslator & moved to class org.hibernate.sql.ast.tree.expression.ColumnReference",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic appendReadExpression(qualifier String, appender Consumer<String>) : void extracted from public appendReadExpression(appender SqlAppender, qualifier String) : void in class org.hibernate.sql.ast.tree.expression.ColumnReference",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttimestamp : Long to timestamp : Instant in class org.hibernate.orm.test.secondarytable.SpecialRecord",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate verifySecondaryRows(table String, expectedCount int, sfScope SessionFactoryScope) : void extracted from private verifySecondaryRows(scope SessionFactoryScope, expectedCount int) : void in class org.hibernate.orm.test.write.UpsertTests",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "00018731f891d25088483ce13790d084465a6899",
      "url": "https://github.com/hibernate/hibernate-orm/commit/00018731f891d25088483ce13790d084465a6899",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tbidirectionalAttributeName : String to bidirectionalAttributePath : SelectablePath in class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tbidirectionalAttributeName : String to bidirectionalAttributePath : SelectablePath in class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate findBidirectionalOneToManyAttributeName(propertyPath String, declaringType ManagedMappingType, parentSelectablePath SelectablePath, properties java.util.Collection<Property>) : SelectablePath extracted from public ToOneAttributeMapping(name String, navigableRole NavigableRole, stateArrayPosition int, fetchableIndex int, bootValue ToOne, attributeMetadata AttributeMetadata, mappedFetchTiming FetchTiming, mappedFetchStyle FetchStyle, entityMappingType EntityMappingType, declaringType ManagedMappingType, declaringEntityPersister EntityPersister, propertyAccess PropertyAccess) in class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate findBidirectionalOneToOneAttributeName(propertyPath String, declaringType ManagedMappingType, parentSelectablePath SelectablePath, properties java.util.Collection<Property>) : SelectablePath extracted from public ToOneAttributeMapping(name String, navigableRole NavigableRole, stateArrayPosition int, fetchableIndex int, bootValue ToOne, attributeMetadata AttributeMetadata, mappedFetchTiming FetchTiming, mappedFetchStyle FetchStyle, entityMappingType EntityMappingType, declaringType ManagedMappingType, declaringEntityPersister EntityPersister, propertyAccess PropertyAccess) in class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbidirectionalAttributeName : String to bidirectionalAttributeName : SelectablePath in method public ToOneAttributeMapping(name String, navigableRole NavigableRole, stateArrayPosition int, fetchableIndex int, bootValue ToOne, attributeMetadata AttributeMetadata, mappedFetchTiming FetchTiming, mappedFetchStyle FetchStyle, entityMappingType EntityMappingType, declaringType ManagedMappingType, declaringEntityPersister EntityPersister, propertyAccess PropertyAccess) from class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tpersister : QueryableCollection to persister : AbstractCollectionPersister in method public ToOneAttributeMapping(name String, navigableRole NavigableRole, stateArrayPosition int, fetchableIndex int, bootValue ToOne, attributeMetadata AttributeMetadata, mappedFetchTiming FetchTiming, mappedFetchStyle FetchStyle, entityMappingType EntityMappingType, declaringType ManagedMappingType, declaringEntityPersister EntityPersister, propertyAccess PropertyAccess) from class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate findBidirectionalOneToManyAttributeName(propertyPath String, declaringType ManagedMappingType, parentSelectablePath SelectablePath, properties Collection<Property>) : SelectablePath extracted from public ToOneAttributeMapping(name String, navigableRole NavigableRole, stateArrayPosition int, fetchableIndex int, bootValue ToOne, attributeMetadata AttributeMetadata, mappedFetchTiming FetchTiming, mappedFetchStyle FetchStyle, entityMappingType EntityMappingType, declaringType ManagedMappingType, declaringEntityPersister EntityPersister, propertyAccess PropertyAccess) in class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate findBidirectionalOneToOneAttributeName(propertyPath String, declaringType ManagedMappingType, parentSelectablePath SelectablePath, properties Collection<Property>) : SelectablePath extracted from public ToOneAttributeMapping(name String, navigableRole NavigableRole, stateArrayPosition int, fetchableIndex int, bootValue ToOne, attributeMetadata AttributeMetadata, mappedFetchTiming FetchTiming, mappedFetchStyle FetchStyle, entityMappingType EntityMappingType, declaringType ManagedMappingType, declaringEntityPersister EntityPersister, propertyAccess PropertyAccess) in class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tbidirectionalAttributeName : String to bidirectionalAttributePath : SelectablePath in class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tbidirectionalAttributeName : String to bidirectionalAttributePath : SelectablePath in class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbidirectionalAttributeName : String to bidirectionalAttributeName : SelectablePath in method public ToOneAttributeMapping(name String, navigableRole NavigableRole, stateArrayPosition int, fetchableIndex int, bootValue ToOne, attributeMetadata AttributeMetadata, mappedFetchTiming FetchTiming, mappedFetchStyle FetchStyle, entityMappingType EntityMappingType, declaringType ManagedMappingType, declaringEntityPersister EntityPersister, propertyAccess PropertyAccess) from class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tpersister : QueryableCollection to persister : AbstractCollectionPersister in method public ToOneAttributeMapping(name String, navigableRole NavigableRole, stateArrayPosition int, fetchableIndex int, bootValue ToOne, attributeMetadata AttributeMetadata, mappedFetchTiming FetchTiming, mappedFetchStyle FetchStyle, entityMappingType EntityMappingType, declaringType ManagedMappingType, declaringEntityPersister EntityPersister, propertyAccess PropertyAccess) from class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbidirectionalAttributeName : String to bidirectionalAttributeName : SelectablePath in method private findBidirectionalOneToManyAttributeName(propertyPath String, declaringType ManagedMappingType, parentSelectablePath SelectablePath, properties Collection<Property>) : SelectablePath from class org.hibernate.metamodel.mapping.internal.ToOneAttributeMapping",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "e8f899ffbcc97f72e1b300a92afcb5ab1041e410",
      "url": "https://github.com/hibernate/hibernate-orm/commit/e8f899ffbcc97f72e1b300a92afcb5ab1041e410",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tJpaMetamodel to JpaMetamodelImplementor in method protected jpaMetamodel() : JpaMetamodelImplementor from class org.hibernate.metamodel.model.domain.AbstractDomainType",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tJpaMetamodel to JpaMetamodelImplementor in method public getJpaMetamodel() : JpaMetamodelImplementor from class org.hibernate.metamodel.internal.MetadataContext",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tjpaMetamodel : JpaMetamodel to jpaMetamodel : JpaMetamodelImplementor in class org.hibernate.metamodel.internal.MetadataContext",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdomainMetamodel : JpaMetamodel to domainMetamodel : JpaMetamodelImplementor in class org.hibernate.metamodel.model.domain.AbstractDomainType",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate buildCustomFunctionRegistry(queryEngineOptions QueryEngineOptions) : SqmFunctionRegistry extracted from public from(sessionFactory SessionFactoryImplementor, metadata MetadataImplementor) : QueryEngine in class org.hibernate.query.spi.QueryEngine",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic validate(arguments List<? extends SqmTypedNode<?>>, functionName String, metamodel MappingMetamodel) : void extracted from public validate(arguments List<? extends SqmTypedNode<?>>, functionName String, queryEngine QueryEngine) : void in class org.hibernate.query.sqm.produce.function.ArgumentsValidator",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getFactoryName(factory SessionFactoryImplementor) : String extracted from package setSessionFactory(factory SessionFactoryImplementor) : void in class org.hibernate.type.spi.TypeConfiguration.Scope",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.internal.FetchProfileHelper from Class org.hibernate.internal.SessionFactoryImpl",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic toSqmType(anticipatedType BindableType<T>, typeConfiguration TypeConfiguration) : SqmExpressible<T> inlined to public toSqmType(parameterType BindableType<T>, creationState SqmCreationState) : SqmExpressible<T> in class org.hibernate.query.sqm.tree.expression.SqmExpressionHelper",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic toSqmType(anticipatedType BindableType<T>, typeConfiguration TypeConfiguration) : SqmExpressible<T> inlined to public toSqmType(anticipatedType BindableType<T>, nodeBuilder NodeBuilder) : SqmExpressible<T> in class org.hibernate.query.sqm.tree.expression.SqmExpressionHelper",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\truntimeMetamodels : RuntimeMetamodels to runtimeMetamodels : MappingMetamodel in method private isCompatible(attribute1 PersistentAttribute<?,?>, attribute2 PersistentAttribute<?,?>) : boolean from class org.hibernate.metamodel.model.domain.AbstractManagedType",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate sessionFactory : SessionFactoryImplementor from class org.hibernate.query.sqm.internal.SqmCreationOptionsStandard to private sessionFactory : SessionFactoryImplementor from class org.hibernate.query.sqm.internal.SqmCriteriaNodeBuilder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate getFetchProfiles(bootMetamodel MetadataImplementor, runtimeMetamodels RuntimeMetamodelsImpl) : Map<String,FetchProfile> from class org.hibernate.internal.SessionFactoryImpl to public getFetchProfiles(bootMetamodel MetadataImplementor, mappingMetamodel MappingMetamodel) : Map<String,FetchProfile> from class org.hibernate.internal.FetchProfileHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createFetchProfile(runtimeMetamodels RuntimeMetamodelsImpl, mappingProfile org.hibernate.mapping.FetchProfile) : FetchProfile from class org.hibernate.internal.SessionFactoryImpl to private createFetchProfile(mappingMetamodel MappingMetamodel, mappingProfile org.hibernate.mapping.FetchProfile) : FetchProfile from class org.hibernate.internal.FetchProfileHelper",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprivate getEntityPersister(mappingMetamodel MappingMetamodel, fetchProfile FetchProfile, mappingFetch org.hibernate.mapping.FetchProfile.Fetch) : EntityPersister extracted from private createFetchProfile(runtimeMetamodels RuntimeMetamodelsImpl, mappingProfile org.hibernate.mapping.FetchProfile) : FetchProfile in class org.hibernate.internal.SessionFactoryImpl & moved to class org.hibernate.internal.FetchProfileHelper",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\ttypeConfiguration : TypeConfiguration in method public init() : void from class org.hibernate.community.dialect.InformixDialectTestCase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tbootstrapContext : BootstrapContext in method public initSessionFactory() : void from class org.hibernate.orm.test.boot.database.qualfiedTableNaming.DefaultCatalogAndSchemaTest",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tsqmTranslatorFactory : SqmTranslatorFactory in method public from(sessionFactory SessionFactoryImplementor, metadata MetadataImplementor) : QueryEngine from class org.hibernate.query.spi.QueryEngine",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tcustomSqmFunctionRegistry : SqmFunctionRegistry in method public from(sessionFactory SessionFactoryImplementor, metadata MetadataImplementor) : QueryEngine from class org.hibernate.query.spi.QueryEngine",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tjpaMetamodel : JpaMetamodel to jpaMetamodel : JpaMetamodelImplementor in class org.hibernate.metamodel.internal.MetadataContext",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tJpaMetamodel to JpaMetamodelImplementor in method public getJpaMetamodel() : JpaMetamodelImplementor from class org.hibernate.metamodel.internal.MetadataContext",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdomainMetamodel : JpaMetamodel to domainMetamodel : JpaMetamodelImplementor in class org.hibernate.metamodel.model.domain.AbstractDomainType",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tJpaMetamodel to JpaMetamodelImplementor in method protected jpaMetamodel() : JpaMetamodelImplementor from class org.hibernate.metamodel.model.domain.AbstractDomainType",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tjpaCompliance : JpaCompliance to mappingMetamodel : MappingMetamodel in class org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl",
          "developerConfirmation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tjpaCompliance : JpaCompliance to mappingMetamodel : MappingMetamodel in class org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate buildCustomFunctionRegistry(queryEngineOptions QueryEngineOptions) : SqmFunctionRegistry extracted from public from(sessionFactory SessionFactoryImplementor, metadata MetadataImplementor) : QueryEngine in class org.hibernate.query.spi.QueryEngine",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic toSqmType(anticipatedType BindableType<T>, typeConfiguration TypeConfiguration) : SqmExpressible<T> inlined to public toSqmType(parameterType BindableType<T>, creationState SqmCreationState) : SqmExpressible<T> in class org.hibernate.query.sqm.tree.expression.SqmExpressionHelper",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic toSqmType(anticipatedType BindableType<T>, typeConfiguration TypeConfiguration) : SqmExpressible<T> inlined to public toSqmType(anticipatedType BindableType<T>, nodeBuilder NodeBuilder) : SqmExpressible<T> in class org.hibernate.query.sqm.tree.expression.SqmExpressionHelper",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getFactoryName(factory SessionFactoryImplementor) : String extracted from package setSessionFactory(factory SessionFactoryImplementor) : void in class org.hibernate.type.spi.TypeConfiguration.Scope",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\truntimeMetamodels : RuntimeMetamodels to runtimeMetamodels : MappingMetamodel in method private isCompatible(attribute1 PersistentAttribute<?,?>, attribute2 PersistentAttribute<?,?>) : boolean from class org.hibernate.metamodel.model.domain.AbstractManagedType",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate sessionFactory : SessionFactoryImplementor from class org.hibernate.query.sqm.internal.SqmCreationOptionsStandard to private sessionFactory : SessionFactoryImplementor from class org.hibernate.query.sqm.internal.SqmCriteriaNodeBuilder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate getFetchProfiles(bootMetamodel MetadataImplementor, runtimeMetamodels RuntimeMetamodelsImpl) : Map<String,FetchProfile> from class org.hibernate.internal.SessionFactoryImpl to public getFetchProfiles(bootMetamodel MetadataImplementor, mappingMetamodel MappingMetamodel) : Map<String,FetchProfile> from class org.hibernate.internal.FetchProfileHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createFetchProfile(runtimeMetamodels RuntimeMetamodelsImpl, mappingProfile FetchProfile) : FetchProfile from class org.hibernate.internal.SessionFactoryImpl to private createFetchProfile(mappingMetamodel MappingMetamodel, mappingProfile FetchProfile) : FetchProfile from class org.hibernate.internal.FetchProfileHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate getEntityPersister(runtimeMetamodels RuntimeMetamodelsImpl, fetchProfile FetchProfile, mappingFetch FetchProfile.Fetch) : EntityPersister from class org.hibernate.internal.SessionFactoryImpl to private getEntityPersister(mappingMetamodel MappingMetamodel, fetchProfile FetchProfile, mappingFetch FetchProfile.Fetch) : EntityPersister from class org.hibernate.internal.FetchProfileHelper",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\ttypeConfiguration : TypeConfiguration in method public init() : void from class org.hibernate.community.dialect.InformixDialectTestCase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tbootstrapContext : BootstrapContext in method public initSessionFactory() : void from class org.hibernate.orm.test.boot.database.qualfiedTableNaming.DefaultCatalogAndSchemaTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\ttypeConfiguration : TypeConfiguration in method public SessionFactoryImpl(bootMetamodel MetadataImplementor, options SessionFactoryOptions, bootstrapContext BootstrapContext) from class org.hibernate.internal.SessionFactoryImpl",
          "developerConfirmation": false
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\ttypeConfiguration : TypeConfiguration in method public SessionFactoryImpl(bootMetamodel MetadataImplementor, options SessionFactoryOptions) from class org.hibernate.internal.SessionFactoryImpl",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "8aba946e776eae0ad4b8cc5bd845802ced23f7b2",
      "url": "https://github.com/hibernate/hibernate-orm/commit/8aba946e776eae0ad4b8cc5bd845802ced23f7b2",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jackson.JacksonIntegration moved to org.hibernate.type.format.jackson.JacksonIntegration",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jackson.JacksonJsonFormatMapper moved to org.hibernate.type.format.jackson.JacksonJsonFormatMapper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jackson.JacksonXmlFormatMapper moved to org.hibernate.type.format.jackson.JacksonXmlFormatMapper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jakartajson.JakartaJsonIntegration moved to org.hibernate.type.format.jakartajson.JakartaJsonIntegration",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jakartajson.JsonBJsonFormatMapper moved to org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jaxb.JaxbXmlFormatMapper moved to org.hibernate.type.format.jaxb.JaxbXmlFormatMapper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.FormatMapper moved to org.hibernate.type.format.FormatMapper",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.FormatMapper moved to org.hibernate.type.format.FormatMapper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jackson.JacksonIntegration moved to org.hibernate.type.format.jackson.JacksonIntegration",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jackson.JacksonJsonFormatMapper moved to org.hibernate.type.format.jackson.JacksonJsonFormatMapper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jackson.JacksonXmlFormatMapper moved to org.hibernate.type.format.jackson.JacksonXmlFormatMapper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jakartajson.JakartaJsonIntegration moved to org.hibernate.type.format.jakartajson.JakartaJsonIntegration",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jakartajson.JsonBJsonFormatMapper moved to org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.type.jaxb.JaxbXmlFormatMapper moved to org.hibernate.type.format.jaxb.JaxbXmlFormatMapper",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "c9cd12c625d23bf871c35dd439383944f64cb35a",
      "url": "https://github.com/hibernate/hibernate-orm/commit/c9cd12c625d23bf871c35dd439383944f64cb35a",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tisXToMany : boolean to toMany : boolean in class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic setXToMany(xToMany boolean) : void renamed to public setToMany(toMany boolean) : void in class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getOrCreateCompositeId(rootClass RootClass) : Component extracted from private bind(property Property) : Property in class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.AnyBinder from Class org.hibernate.boot.model.internal.AnnotationBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.EmbeddableBinder from Class org.hibernate.boot.model.internal.AnnotationBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.GeneratorBinder from Class org.hibernate.boot.model.internal.AnnotationBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.GeneratorBinder from Class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.GeneratorBinder from Class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.TimeZoneStorageHelper from Class org.hibernate.boot.model.internal.AnnotationBinder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\taliase : SqlFragmentAlias to alias : SqlFragmentAlias in method public toAliasTableMap(aliases SqlFragmentAlias[]) : Map<String,String> from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\taliase : SqlFragmentAlias to alias : SqlFragmentAlias in method public toAliasEntityMap(aliases SqlFragmentAlias[]) : Map<String,String> from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindAny(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, context MetadataBuildingContext, property XProperty, joinColumns AnnotatedJoinColumns, forcePersist boolean) : void from class org.hibernate.boot.model.internal.AnnotationBinder to package bindAny(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, context MetadataBuildingContext, property XProperty, joinColumns AnnotatedJoinColumns, forcePersist boolean) : void from class org.hibernate.boot.model.internal.AnyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindAny(cascadeStrategy String, columns AnnotatedJoinColumns, onDeleteAction OnDeleteAction, nullability Nullability, propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, context MetadataBuildingContext) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private bindAny(cascadeStrategy String, columns AnnotatedJoinColumns, onDeleteAction OnDeleteAction, nullability Nullability, propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, context MetadataBuildingContext) : void from class org.hibernate.boot.model.internal.AnyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createCompositeBinder(propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, columns AnnotatedColumns, returnedClass XClass, propertyBinder PropertyBinder, isOverridden boolean, compositeUserType Class<? extends CompositeUserType<?>>) : PropertyBinder from class org.hibernate.boot.model.internal.AnnotationBinder to package createCompositeBinder(propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, columns AnnotatedColumns, returnedClass XClass, propertyBinder PropertyBinder, isOverridden boolean, compositeUserType Class<? extends CompositeUserType<?>>) : PropertyBinder from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isEmbedded(property XProperty, returnedClass XClass) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to package isEmbedded(property XProperty, returnedClass XClass) : boolean from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkEmbeddedId(inferredData PropertyData, propertyHolder PropertyHolder, referencedEntityName String, component Component) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private checkEmbeddedId(inferredData PropertyData, propertyHolder PropertyHolder, referencedEntityName String, component Component) : void from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate compositeUserType(compositeUserTypeClass Class<? extends CompositeUserType<?>>, context MetadataBuildingContext) : CompositeUserType<?> from class org.hibernate.boot.model.internal.AnnotationBinder to private compositeUserType(compositeUserTypeClass Class<? extends CompositeUserType<?>>, context MetadataBuildingContext) : CompositeUserType<?> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate collectClassElements(propertyAccessor AccessType, context MetadataBuildingContext, returnedClassOrElement XClass, annotatedClass XClass) : List<PropertyData> from class org.hibernate.boot.model.internal.AnnotationBinder to private collectClassElements(propertyAccessor AccessType, context MetadataBuildingContext, returnedClassOrElement XClass, annotatedClass XClass) : List<PropertyData> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate collectBaseClassElements(baseInferredData PropertyData, propertyAccessor AccessType, context MetadataBuildingContext, annotatedClass XClass) : List<PropertyData> from class org.hibernate.boot.model.internal.AnnotationBinder to private collectBaseClassElements(baseInferredData PropertyData, propertyAccessor AccessType, context MetadataBuildingContext, annotatedClass XClass) : List<PropertyData> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isGeneratedId(property XProperty) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private isGeneratedId(property XProperty) : boolean from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate processCompositeUserType(component Component, compositeUserType CompositeUserType<?>) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private processCompositeUserType(component Component, compositeUserType CompositeUserType<?>) : void from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate hasAnnotationsOnIdClass(idClass XClass) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private hasAnnotationsOnIdClass(idClass XClass) : boolean from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate hasTriggeringAnnotation(property XAnnotatedElement) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private hasTriggeringAnnotation(property XAnnotatedElement) : boolean from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate processGeneratedId(context MetadataBuildingContext, component Component, property XProperty) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private processGeneratedId(context MetadataBuildingContext, component Component, property XProperty) : void from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate processIdClassElememts(propertyHolder PropertyHolder, baseInferredData PropertyData, classElements List<PropertyData>, baseClassElements List<PropertyData>) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private processIdClassElememts(propertyHolder PropertyHolder, baseInferredData PropertyData, classElements List<PropertyData>, baseClassElements List<PropertyData>) : void from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic resolveInstantiator(embeddableClass XClass, buildingContext MetadataBuildingContext) : Constructor<?> from class org.hibernate.boot.model.internal.AnnotationBinder to private resolveInstantiator(embeddableClass XClass, buildingContext MetadataBuildingContext) : Constructor<?> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate determineCustomInstantiator(property XProperty, returnedClass XClass, context MetadataBuildingContext) : Class<? extends EmbeddableInstantiator> from class org.hibernate.boot.model.internal.AnnotationBinder to private determineCustomInstantiator(property XProperty, returnedClass XClass, context MetadataBuildingContext) : Class<? extends EmbeddableInstantiator> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic buildGenerators(annotatedElement XAnnotatedElement, context MetadataBuildingContext) : Map<String,IdentifierGeneratorDefinition> from class org.hibernate.boot.model.internal.AnnotationBinder to public buildGenerators(annotatedElement XAnnotatedElement, context MetadataBuildingContext) : Map<String,IdentifierGeneratorDefinition> from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate generatorType(context MetadataBuildingContext, entityXClass XClass, isComponent boolean, generatedValue GeneratedValue) : String from class org.hibernate.boot.model.internal.AnnotationBinder to package generatorType(context MetadataBuildingContext, entityXClass XClass, isComponent boolean, generatedValue GeneratedValue) : String from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic generatorType(generatedValue GeneratedValue, javaClass XClass, context MetadataBuildingContext) : String from class org.hibernate.boot.model.internal.AnnotationBinder to package generatorType(generatedValue GeneratedValue, javaClass XClass, context MetadataBuildingContext) : String from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate buildIdGenerator(generatorAnnotation Annotation, context MetadataBuildingContext) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.AnnotationBinder to package buildIdGenerator(generatorAnnotation Annotation, context MetadataBuildingContext) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createIdGenerator(idValue SimpleValue, classGenerators Map<String,IdentifierGeneratorDefinition>, context MetadataBuildingContext, entityClass XClass, idProperty XProperty) : void from class org.hibernate.boot.model.internal.AnnotationBinder to package createIdGenerator(idValue SimpleValue, classGenerators Map<String,IdentifierGeneratorDefinition>, context MetadataBuildingContext, entityClass XClass, idProperty XProperty) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createForeignGenerator(mapsIdProperty PropertyData) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.AnnotationBinder to package createForeignGenerator(mapsIdProperty PropertyData) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic makeIdGenerator(id SimpleValue, property XProperty, generatorType String, generatorName String, buildingContext MetadataBuildingContext, localGenerators Map<String,IdentifierGeneratorDefinition>) : void from class org.hibernate.boot.model.internal.BinderHelper to public makeIdGenerator(id SimpleValue, property XProperty, generatorType String, generatorName String, buildingContext MetadataBuildingContext, localGenerators Map<String,IdentifierGeneratorDefinition>) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic makeIdGenerator(id SimpleValue, idXProperty XProperty, generatorType String, generatorName String, buildingContext MetadataBuildingContext, foreignKGeneratorDefinition IdentifierGeneratorDefinition) : void from class org.hibernate.boot.model.internal.BinderHelper to public makeIdGenerator(id SimpleValue, idXProperty XProperty, generatorType String, generatorName String, buildingContext MetadataBuildingContext, foreignKGeneratorDefinition IdentifierGeneratorDefinition) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate makeIdentifierGeneratorDefinition(name String, idXProperty XProperty, localGenerators Map<String,IdentifierGeneratorDefinition>, buildingContext MetadataBuildingContext) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.BinderHelper to private makeIdentifierGeneratorDefinition(name String, idXProperty XProperty, localGenerators Map<String,IdentifierGeneratorDefinition>, buildingContext MetadataBuildingContext) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate interpretGenerationType(generatedValueAnn GeneratedValue) : GenerationType from class org.hibernate.boot.model.internal.BinderHelper to private interpretGenerationType(generatedValueAnn GeneratedValue) : GenerationType from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkGeneratorClass(generatorClass Class<? extends Generator>) : void from class org.hibernate.boot.model.internal.PropertyBinder to private checkGeneratorClass(generatorClass Class<? extends Generator>) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkGeneratorInterfaces(generatorClass Class<? extends Generator>) : void from class org.hibernate.boot.model.internal.PropertyBinder to private checkGeneratorInterfaces(generatorClass Class<? extends Generator>) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic generatorCreator(property XProperty, annotation Annotation) : GeneratorCreator from class org.hibernate.boot.model.internal.PropertyBinder to package generatorCreator(property XProperty, annotation Annotation) : GeneratorCreator from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic identifierGeneratorCreator(idProperty XProperty, annotation Annotation) : IdentifierGeneratorCreator from class org.hibernate.boot.model.internal.PropertyBinder to package identifierGeneratorCreator(idProperty XProperty, annotation Annotation) : IdentifierGeneratorCreator from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate instantiateGenerator(annotation Annotation, member Member, annotationType Class<? extends Annotation>, creationContext C, contextClass Class<C>, generatorClass Class<? extends G>) : G from class org.hibernate.boot.model.internal.PropertyBinder to private instantiateGenerator(annotation Annotation, member Member, annotationType Class<? extends Annotation>, creationContext C, contextClass Class<C>, generatorClass Class<? extends G>) : G from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate callInitialize(annotation A, member Member, creationContext GeneratorCreationContext, generator Generator) : void from class org.hibernate.boot.model.internal.PropertyBinder to private callInitialize(annotation A, member Member, creationContext GeneratorCreationContext, generator Generator) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkVersionGenerationAlways(property XProperty, generator Generator) : void from class org.hibernate.boot.model.internal.PropertyBinder to private checkVersionGenerationAlways(property XProperty, generator Generator) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkIdGeneratorTiming(annotationType Class<? extends Annotation>, generator Generator) : void from class org.hibernate.boot.model.internal.PropertyBinder to private checkIdGeneratorTiming(annotationType Class<? extends Annotation>, generator Generator) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate resolveTimeZoneStorageCompositeUserType(property XProperty, returnedClass XClass, context MetadataBuildingContext) : Class<? extends CompositeUserType<?>> from class org.hibernate.boot.model.internal.AnnotationBinder to package resolveTimeZoneStorageCompositeUserType(property XProperty, returnedClass XClass, context MetadataBuildingContext) : Class<? extends CompositeUserType<?>> from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isZonedDateTimeClass(returnedClassName String) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private isZonedDateTimeClass(returnedClassName String) : boolean from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage useColumnForTimeZoneStorage(element XAnnotatedElement, context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to package useColumnForTimeZoneStorage(element XAnnotatedElement, context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate OFFSET_DATETIME_CLASS : String from class org.hibernate.boot.model.internal.AnnotationBinder to private OFFSET_DATETIME_CLASS : String from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate ZONED_DATETIME_CLASS : String from class org.hibernate.boot.model.internal.AnnotationBinder to private ZONED_DATETIME_CLASS : String from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage addElementsOfClass(elements List<PropertyData>, propertyContainer PropertyContainer, context MetadataBuildingContext) : int from class org.hibernate.boot.model.internal.AnnotationBinder to package addElementsOfClass(elements List<PropertyData>, propertyContainer PropertyContainer, context MetadataBuildingContext) : int from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate addProperty(propertyContainer PropertyContainer, property XProperty, inFlightPropertyDataList List<PropertyData>, context MetadataBuildingContext) : int from class org.hibernate.boot.model.internal.AnnotationBinder to private addProperty(propertyContainer PropertyContainer, property XProperty, inFlightPropertyDataList List<PropertyData>, context MetadataBuildingContext) : int from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkIdProperty(property XProperty, propertyData PropertyData) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private checkIdProperty(property XProperty, propertyData PropertyData) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate handleIdProperty(propertyContainer PropertyContainer, context MetadataBuildingContext, declaringClass XClass, entity XClass, element XAnnotatedElement) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private handleIdProperty(propertyContainer PropertyContainer, context MetadataBuildingContext, declaringClass XClass, entity XClass, element XAnnotatedElement) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isJoinColumnPresent(columnName String, property XProperty) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private isJoinColumnPresent(columnName String, property XProperty) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate hasIdAnnotation(element XAnnotatedElement) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private hasIdAnnotation(element XAnnotatedElement) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic processElementAnnotations(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>) : void from class org.hibernate.boot.model.internal.AnnotationBinder to public processElementAnnotations(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate alreadyProcessedBySuper(propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private alreadyProcessedBySuper(holder PropertyHolder, data PropertyData, binder EntityBinder) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate handleParentProperty(propertyHolder PropertyHolder, inferredData PropertyData, property XProperty) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private handleParentProperty(holder PropertyHolder, data PropertyData, property XProperty) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate buildProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private buildProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass, columnsBuilder ColumnsBuilder, propertyBinder PropertyBinder) : AnnotatedColumns from class org.hibernate.boot.model.internal.AnnotationBinder to private bindProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass, columnsBuilder ColumnsBuilder, propertyBinder PropertyBinder) : AnnotatedColumns from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isForcePersist(property XProperty) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private isForcePersist(property XProperty) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindVersionProperty(propertyHolder PropertyHolder, inferredData PropertyData, isIdentifierMapper boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, columns AnnotatedColumns, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private bindVersionProperty(propertyHolder PropertyHolder, inferredData PropertyData, isIdentifierMapper boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, columns AnnotatedColumns, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkVersionProperty(propertyHolder PropertyHolder, isIdentifierMapper boolean) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private checkVersionProperty(propertyHolder PropertyHolder, isIdentifierMapper boolean) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindBasic(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, columnsBuilder ColumnsBuilder, columns AnnotatedColumns, returnedClass XClass, propertyBinder PropertyBinder) : AnnotatedColumns from class org.hibernate.boot.model.internal.AnnotationBinder to private bindBasic(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, columnsBuilder ColumnsBuilder, columns AnnotatedColumns, returnedClass XClass, propertyBinder PropertyBinder) : AnnotatedColumns from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate handleGeneratorsForOverriddenId(propertyHolder PropertyHolder, classGenerators Map<String,IdentifierGeneratorDefinition>, context MetadataBuildingContext, property XProperty, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private handleGeneratorsForOverriddenId(propertyHolder PropertyHolder, classGenerators Map<String,IdentifierGeneratorDefinition>, context MetadataBuildingContext, property XProperty, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createBasicBinder(propertyHolder PropertyHolder, inferredData PropertyData, nullability Nullability, context MetadataBuildingContext, property XProperty, columns AnnotatedColumns, propertyBinder PropertyBinder, isOverridden boolean) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private createBasicBinder(propertyHolder PropertyHolder, inferredData PropertyData, nullability Nullability, context MetadataBuildingContext, property XProperty, columns AnnotatedColumns, propertyBinder PropertyBinder, isOverridden boolean) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate forceColumnsNotNull(propertyHolder PropertyHolder, inferredData PropertyData, columns AnnotatedColumns, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private forceColumnsNotNull(holder PropertyHolder, data PropertyData, columns AnnotatedColumns, binder PropertyBinder) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate shouldForceNotNull(nullability Nullability, propertyBinder PropertyBinder, optional boolean) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private shouldForceNotNull(nullability Nullability, binder PropertyBinder, optional boolean) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate addIndexes(inSecondPass boolean, property XProperty, columns AnnotatedColumns, joinColumns AnnotatedJoinColumns) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private addIndexes(inSecondPass boolean, property XProperty, columns AnnotatedColumns, joinColumns AnnotatedJoinColumns) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate addNaturalIds(inSecondPass boolean, property XProperty, columns AnnotatedColumns, joinColumns AnnotatedJoinColumns) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private addNaturalIds(inSecondPass boolean, property XProperty, columns AnnotatedColumns, joinColumns AnnotatedJoinColumns) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate resolveCompositeUserType(inferredData PropertyData, context MetadataBuildingContext) : Class<? extends CompositeUserType<?>> from class org.hibernate.boot.model.internal.AnnotationBinder to private resolveCompositeUserType(inferredData PropertyData, context MetadataBuildingContext) : Class<? extends CompositeUserType<?>> from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isGlobalGeneratorNameGlobal(context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to package isGlobalGeneratorNameGlobal(context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate processId(propertyHolder PropertyHolder, inferredData PropertyData, idValue SimpleValue, classGenerators Map<String,IdentifierGeneratorDefinition>, isIdentifierMapper boolean, context MetadataBuildingContext) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private processId(propertyHolder PropertyHolder, inferredData PropertyData, idValue SimpleValue, classGenerators Map<String,IdentifierGeneratorDefinition>, isIdentifierMapper boolean, context MetadataBuildingContext) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isCompositeId(entityClass XClass, idProperty XProperty) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to package isCompositeId(entityClass XClass, idProperty XProperty) : boolean from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic getUniqueIdPropertyFromBaseClass(inferredData PropertyData, baseInferredData PropertyData, propertyAccessor AccessType, context MetadataBuildingContext) : PropertyData from class org.hibernate.boot.model.internal.AnnotationBinder to private getUniqueIdPropertyFromBaseClass(inferredData PropertyData, baseInferredData PropertyData, propertyAccessor AccessType, context MetadataBuildingContext) : PropertyData from class org.hibernate.boot.model.internal.EntityBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic isDefault(clazz XClass, context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to public isDefault(clazz XClass, context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage matchIgnoreNotFoundWithFetchType(entity String, association String, notFoundAction NotFoundAction, fetchType FetchType) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private matchIgnoreNotFoundWithFetchType(entity String, association String, notFoundAction NotFoundAction, fetchType FetchType) : void from class org.hibernate.boot.model.internal.ToOneBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isOptional(property XProperty) : boolean from class org.hibernate.boot.model.internal.BasicValueBinder to private isOptional(property XProperty) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage isLazy(property XProperty) : boolean from class org.hibernate.boot.model.internal.BasicValueBinder to private isLazy(property XProperty) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprivate isVersion(property XProperty) : boolean extracted from private bindProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass, columnsBuilder ColumnsBuilder, propertyBinder PropertyBinder) : AnnotatedColumns in class org.hibernate.boot.model.internal.AnnotationBinder & moved to class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprivate isOneToOne(property XProperty) : boolean extracted from private bindProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass, columnsBuilder ColumnsBuilder, propertyBinder PropertyBinder) : AnnotatedColumns in class org.hibernate.boot.model.internal.AnnotationBinder & moved to class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprivate isManyToOne(property XProperty) : boolean extracted from private bindProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass, columnsBuilder ColumnsBuilder, propertyBinder PropertyBinder) : AnnotatedColumns in class org.hibernate.boot.model.internal.AnnotationBinder & moved to class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprivate isCollection(property XProperty) : boolean extracted from private bindProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass, columnsBuilder ColumnsBuilder, propertyBinder PropertyBinder) : AnnotatedColumns in class org.hibernate.boot.model.internal.AnnotationBinder & moved to class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tidentifier : Component to id : Component in method private getOrCreateCompositeId(rootClass RootClass) : Component from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getOrCreateCompositeId(rootClass RootClass) : Component extracted from private bind(property Property) : Property in class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tisXToMany : boolean to toMany : boolean in class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.AnyBinder from class org.hibernate.boot.model.internal.AnnotationBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.EmbeddableBinder from class org.hibernate.boot.model.internal.AnnotationBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.GeneratorBinder from class org.hibernate.boot.model.internal.AnnotationBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.GeneratorBinder from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.GeneratorBinder from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.boot.model.internal.TimeZoneStorageHelper from class org.hibernate.boot.model.internal.AnnotationBinder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\taliase : SqlFragmentAlias to alias : SqlFragmentAlias in method public toAliasTableMap(aliases SqlFragmentAlias[]) : Map<String,String> from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\taliase : SqlFragmentAlias to alias : SqlFragmentAlias in method public toAliasEntityMap(aliases SqlFragmentAlias[]) : Map<String,String> from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindAny(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, context MetadataBuildingContext, property XProperty, joinColumns AnnotatedJoinColumns, forcePersist boolean) : void from class org.hibernate.boot.model.internal.AnnotationBinder to package bindAny(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, context MetadataBuildingContext, property XProperty, joinColumns AnnotatedJoinColumns, forcePersist boolean) : void from class org.hibernate.boot.model.internal.AnyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindAny(cascadeStrategy String, columns AnnotatedJoinColumns, onDeleteAction OnDeleteAction, nullability Nullability, propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, context MetadataBuildingContext) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private bindAny(cascadeStrategy String, columns AnnotatedJoinColumns, onDeleteAction OnDeleteAction, nullability Nullability, propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, context MetadataBuildingContext) : void from class org.hibernate.boot.model.internal.AnyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createCompositeBinder(propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, columns AnnotatedColumns, returnedClass XClass, propertyBinder PropertyBinder, isOverridden boolean, compositeUserType Class<? extends CompositeUserType<?>>) : PropertyBinder from class org.hibernate.boot.model.internal.AnnotationBinder to package createCompositeBinder(propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, columns AnnotatedColumns, returnedClass XClass, propertyBinder PropertyBinder, isOverridden boolean, compositeUserType Class<? extends CompositeUserType<?>>) : PropertyBinder from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isEmbedded(property XProperty, returnedClass XClass) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to package isEmbedded(property XProperty, returnedClass XClass) : boolean from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkEmbeddedId(inferredData PropertyData, propertyHolder PropertyHolder, referencedEntityName String, component Component) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private checkEmbeddedId(inferredData PropertyData, propertyHolder PropertyHolder, referencedEntityName String, component Component) : void from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate compositeUserType(compositeUserTypeClass Class<? extends CompositeUserType<?>>, context MetadataBuildingContext) : CompositeUserType<?> from class org.hibernate.boot.model.internal.AnnotationBinder to private compositeUserType(compositeUserTypeClass Class<? extends CompositeUserType<?>>, context MetadataBuildingContext) : CompositeUserType<?> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate collectClassElements(propertyAccessor AccessType, context MetadataBuildingContext, returnedClassOrElement XClass, annotatedClass XClass) : List<PropertyData> from class org.hibernate.boot.model.internal.AnnotationBinder to private collectClassElements(propertyAccessor AccessType, context MetadataBuildingContext, returnedClassOrElement XClass, annotatedClass XClass) : List<PropertyData> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate collectBaseClassElements(baseInferredData PropertyData, propertyAccessor AccessType, context MetadataBuildingContext, annotatedClass XClass) : List<PropertyData> from class org.hibernate.boot.model.internal.AnnotationBinder to private collectBaseClassElements(baseInferredData PropertyData, propertyAccessor AccessType, context MetadataBuildingContext, annotatedClass XClass) : List<PropertyData> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isGeneratedId(property XProperty) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private isGeneratedId(property XProperty) : boolean from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate processCompositeUserType(component Component, compositeUserType CompositeUserType<?>) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private processCompositeUserType(component Component, compositeUserType CompositeUserType<?>) : void from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate hasAnnotationsOnIdClass(idClass XClass) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private hasAnnotationsOnIdClass(idClass XClass) : boolean from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate hasTriggeringAnnotation(property XAnnotatedElement) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private hasTriggeringAnnotation(property XAnnotatedElement) : boolean from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate processGeneratedId(context MetadataBuildingContext, component Component, property XProperty) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private processGeneratedId(context MetadataBuildingContext, component Component, property XProperty) : void from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate processIdClassElememts(propertyHolder PropertyHolder, baseInferredData PropertyData, classElements List<PropertyData>, baseClassElements List<PropertyData>) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private processIdClassElememts(propertyHolder PropertyHolder, baseInferredData PropertyData, classElements List<PropertyData>, baseClassElements List<PropertyData>) : void from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic resolveInstantiator(embeddableClass XClass, buildingContext MetadataBuildingContext) : Constructor<?> from class org.hibernate.boot.model.internal.AnnotationBinder to private resolveInstantiator(embeddableClass XClass, buildingContext MetadataBuildingContext) : Constructor<?> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate determineCustomInstantiator(property XProperty, returnedClass XClass, context MetadataBuildingContext) : Class<? extends EmbeddableInstantiator> from class org.hibernate.boot.model.internal.AnnotationBinder to private determineCustomInstantiator(property XProperty, returnedClass XClass, context MetadataBuildingContext) : Class<? extends EmbeddableInstantiator> from class org.hibernate.boot.model.internal.EmbeddableBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic buildGenerators(annotatedElement XAnnotatedElement, context MetadataBuildingContext) : Map<String,IdentifierGeneratorDefinition> from class org.hibernate.boot.model.internal.AnnotationBinder to public buildGenerators(annotatedElement XAnnotatedElement, context MetadataBuildingContext) : Map<String,IdentifierGeneratorDefinition> from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate generatorType(context MetadataBuildingContext, entityXClass XClass, isComponent boolean, generatedValue GeneratedValue) : String from class org.hibernate.boot.model.internal.AnnotationBinder to package generatorType(context MetadataBuildingContext, entityXClass XClass, isComponent boolean, generatedValue GeneratedValue) : String from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic generatorType(generatedValue GeneratedValue, javaClass XClass, context MetadataBuildingContext) : String from class org.hibernate.boot.model.internal.AnnotationBinder to package generatorType(generatedValue GeneratedValue, javaClass XClass, context MetadataBuildingContext) : String from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate buildIdGenerator(generatorAnnotation Annotation, context MetadataBuildingContext) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.AnnotationBinder to package buildIdGenerator(generatorAnnotation Annotation, context MetadataBuildingContext) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createIdGenerator(idValue SimpleValue, classGenerators Map<String,IdentifierGeneratorDefinition>, context MetadataBuildingContext, entityClass XClass, idProperty XProperty) : void from class org.hibernate.boot.model.internal.AnnotationBinder to package createIdGenerator(idValue SimpleValue, classGenerators Map<String,IdentifierGeneratorDefinition>, context MetadataBuildingContext, entityClass XClass, idProperty XProperty) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createForeignGenerator(mapsIdProperty PropertyData) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.AnnotationBinder to package createForeignGenerator(mapsIdProperty PropertyData) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic makeIdGenerator(id SimpleValue, property XProperty, generatorType String, generatorName String, buildingContext MetadataBuildingContext, localGenerators Map<String,IdentifierGeneratorDefinition>) : void from class org.hibernate.boot.model.internal.BinderHelper to public makeIdGenerator(id SimpleValue, property XProperty, generatorType String, generatorName String, buildingContext MetadataBuildingContext, localGenerators Map<String,IdentifierGeneratorDefinition>) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic makeIdGenerator(id SimpleValue, idXProperty XProperty, generatorType String, generatorName String, buildingContext MetadataBuildingContext, foreignKGeneratorDefinition IdentifierGeneratorDefinition) : void from class org.hibernate.boot.model.internal.BinderHelper to public makeIdGenerator(id SimpleValue, idXProperty XProperty, generatorType String, generatorName String, buildingContext MetadataBuildingContext, foreignKGeneratorDefinition IdentifierGeneratorDefinition) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate makeIdentifierGeneratorDefinition(name String, idXProperty XProperty, localGenerators Map<String,IdentifierGeneratorDefinition>, buildingContext MetadataBuildingContext) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.BinderHelper to private makeIdentifierGeneratorDefinition(name String, idXProperty XProperty, localGenerators Map<String,IdentifierGeneratorDefinition>, buildingContext MetadataBuildingContext) : IdentifierGeneratorDefinition from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate interpretGenerationType(generatedValueAnn GeneratedValue) : GenerationType from class org.hibernate.boot.model.internal.BinderHelper to private interpretGenerationType(generatedValueAnn GeneratedValue) : GenerationType from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkGeneratorClass(generatorClass Class<? extends Generator>) : void from class org.hibernate.boot.model.internal.PropertyBinder to private checkGeneratorClass(generatorClass Class<? extends Generator>) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkGeneratorInterfaces(generatorClass Class<? extends Generator>) : void from class org.hibernate.boot.model.internal.PropertyBinder to private checkGeneratorInterfaces(generatorClass Class<? extends Generator>) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic generatorCreator(property XProperty, annotation Annotation) : GeneratorCreator from class org.hibernate.boot.model.internal.PropertyBinder to package generatorCreator(property XProperty, annotation Annotation) : GeneratorCreator from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic identifierGeneratorCreator(idProperty XProperty, annotation Annotation) : IdentifierGeneratorCreator from class org.hibernate.boot.model.internal.PropertyBinder to package identifierGeneratorCreator(idProperty XProperty, annotation Annotation) : IdentifierGeneratorCreator from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate instantiateGenerator(annotation Annotation, member Member, annotationType Class<? extends Annotation>, creationContext C, contextClass Class<C>, generatorClass Class<? extends G>) : G from class org.hibernate.boot.model.internal.PropertyBinder to private instantiateGenerator(annotation Annotation, member Member, annotationType Class<? extends Annotation>, creationContext C, contextClass Class<C>, generatorClass Class<? extends G>) : G from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate callInitialize(annotation A, member Member, creationContext GeneratorCreationContext, generator Generator) : void from class org.hibernate.boot.model.internal.PropertyBinder to private callInitialize(annotation A, member Member, creationContext GeneratorCreationContext, generator Generator) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkVersionGenerationAlways(property XProperty, generator Generator) : void from class org.hibernate.boot.model.internal.PropertyBinder to private checkVersionGenerationAlways(property XProperty, generator Generator) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkIdGeneratorTiming(annotationType Class<? extends Annotation>, generator Generator) : void from class org.hibernate.boot.model.internal.PropertyBinder to private checkIdGeneratorTiming(annotationType Class<? extends Annotation>, generator Generator) : void from class org.hibernate.boot.model.internal.GeneratorBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate resolveTimeZoneStorageCompositeUserType(property XProperty, returnedClass XClass, context MetadataBuildingContext) : Class<? extends CompositeUserType<?>> from class org.hibernate.boot.model.internal.AnnotationBinder to package resolveTimeZoneStorageCompositeUserType(property XProperty, returnedClass XClass, context MetadataBuildingContext) : Class<? extends CompositeUserType<?>> from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isZonedDateTimeClass(returnedClassName String) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private isZonedDateTimeClass(returnedClassName String) : boolean from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage useColumnForTimeZoneStorage(element XAnnotatedElement, context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to package useColumnForTimeZoneStorage(element XAnnotatedElement, context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate OFFSET_DATETIME_CLASS : String from class org.hibernate.boot.model.internal.AnnotationBinder to private OFFSET_DATETIME_CLASS : String from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate ZONED_DATETIME_CLASS : String from class org.hibernate.boot.model.internal.AnnotationBinder to private ZONED_DATETIME_CLASS : String from class org.hibernate.boot.model.internal.TimeZoneStorageHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage addElementsOfClass(elements List<PropertyData>, propertyContainer PropertyContainer, context MetadataBuildingContext) : int from class org.hibernate.boot.model.internal.AnnotationBinder to package addElementsOfClass(elements List<PropertyData>, propertyContainer PropertyContainer, context MetadataBuildingContext) : int from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate addProperty(propertyContainer PropertyContainer, property XProperty, inFlightPropertyDataList List<PropertyData>, context MetadataBuildingContext) : int from class org.hibernate.boot.model.internal.AnnotationBinder to private addProperty(propertyContainer PropertyContainer, property XProperty, inFlightPropertyDataList List<PropertyData>, context MetadataBuildingContext) : int from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkIdProperty(property XProperty, propertyData PropertyData) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private checkIdProperty(property XProperty, propertyData PropertyData) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate handleIdProperty(propertyContainer PropertyContainer, context MetadataBuildingContext, declaringClass XClass, entity XClass, element XAnnotatedElement) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private handleIdProperty(propertyContainer PropertyContainer, context MetadataBuildingContext, declaringClass XClass, entity XClass, element XAnnotatedElement) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isJoinColumnPresent(columnName String, property XProperty) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private isJoinColumnPresent(columnName String, property XProperty) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate hasIdAnnotation(element XAnnotatedElement) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private hasIdAnnotation(element XAnnotatedElement) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic processElementAnnotations(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>) : void from class org.hibernate.boot.model.internal.AnnotationBinder to public processElementAnnotations(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate alreadyProcessedBySuper(propertyHolder PropertyHolder, inferredData PropertyData, entityBinder EntityBinder) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private alreadyProcessedBySuper(holder PropertyHolder, data PropertyData, binder EntityBinder) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate handleParentProperty(propertyHolder PropertyHolder, inferredData PropertyData, property XProperty) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private handleParentProperty(holder PropertyHolder, data PropertyData, property XProperty) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate buildProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private buildProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass, columnsBuilder ColumnsBuilder, propertyBinder PropertyBinder) : AnnotatedColumns from class org.hibernate.boot.model.internal.AnnotationBinder to private bindProperty(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, inSecondPass boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, returnedClass XClass, columnsBuilder ColumnsBuilder, propertyBinder PropertyBinder) : AnnotatedColumns from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isForcePersist(property XProperty) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private isForcePersist(property XProperty) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindVersionProperty(propertyHolder PropertyHolder, inferredData PropertyData, isIdentifierMapper boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, columns AnnotatedColumns, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private bindVersionProperty(propertyHolder PropertyHolder, inferredData PropertyData, isIdentifierMapper boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, columns AnnotatedColumns, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate checkVersionProperty(propertyHolder PropertyHolder, isIdentifierMapper boolean) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private checkVersionProperty(propertyHolder PropertyHolder, isIdentifierMapper boolean) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate bindBasic(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, columnsBuilder ColumnsBuilder, columns AnnotatedColumns, returnedClass XClass, propertyBinder PropertyBinder) : AnnotatedColumns from class org.hibernate.boot.model.internal.AnnotationBinder to private bindBasic(propertyHolder PropertyHolder, nullability Nullability, inferredData PropertyData, classGenerators Map<String,IdentifierGeneratorDefinition>, entityBinder EntityBinder, isIdentifierMapper boolean, isComponentEmbedded boolean, context MetadataBuildingContext, inheritanceStatePerClass Map<XClass,InheritanceState>, property XProperty, columnsBuilder ColumnsBuilder, columns AnnotatedColumns, returnedClass XClass, propertyBinder PropertyBinder) : AnnotatedColumns from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate handleGeneratorsForOverriddenId(propertyHolder PropertyHolder, classGenerators Map<String,IdentifierGeneratorDefinition>, context MetadataBuildingContext, property XProperty, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private handleGeneratorsForOverriddenId(propertyHolder PropertyHolder, classGenerators Map<String,IdentifierGeneratorDefinition>, context MetadataBuildingContext, property XProperty, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate createBasicBinder(propertyHolder PropertyHolder, inferredData PropertyData, nullability Nullability, context MetadataBuildingContext, property XProperty, columns AnnotatedColumns, propertyBinder PropertyBinder, isOverridden boolean) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private createBasicBinder(propertyHolder PropertyHolder, inferredData PropertyData, nullability Nullability, context MetadataBuildingContext, property XProperty, columns AnnotatedColumns, propertyBinder PropertyBinder, isOverridden boolean) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate forceColumnsNotNull(propertyHolder PropertyHolder, inferredData PropertyData, columns AnnotatedColumns, propertyBinder PropertyBinder) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private forceColumnsNotNull(holder PropertyHolder, data PropertyData, columns AnnotatedColumns, binder PropertyBinder) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate shouldForceNotNull(nullability Nullability, propertyBinder PropertyBinder, optional boolean) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to private shouldForceNotNull(nullability Nullability, binder PropertyBinder, optional boolean) : boolean from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate addIndexes(inSecondPass boolean, property XProperty, columns AnnotatedColumns, joinColumns AnnotatedJoinColumns) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private addIndexes(inSecondPass boolean, property XProperty, columns AnnotatedColumns, joinColumns AnnotatedJoinColumns) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate addNaturalIds(inSecondPass boolean, property XProperty, columns AnnotatedColumns, joinColumns AnnotatedJoinColumns) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private addNaturalIds(inSecondPass boolean, property XProperty, columns AnnotatedColumns, joinColumns AnnotatedJoinColumns) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate resolveCompositeUserType(inferredData PropertyData, context MetadataBuildingContext) : Class<? extends CompositeUserType<?>> from class org.hibernate.boot.model.internal.AnnotationBinder to private resolveCompositeUserType(inferredData PropertyData, context MetadataBuildingContext) : Class<? extends CompositeUserType<?>> from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isGlobalGeneratorNameGlobal(context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to package isGlobalGeneratorNameGlobal(context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate processId(propertyHolder PropertyHolder, inferredData PropertyData, idValue SimpleValue, classGenerators Map<String,IdentifierGeneratorDefinition>, isIdentifierMapper boolean, context MetadataBuildingContext) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private processId(propertyHolder PropertyHolder, inferredData PropertyData, idValue SimpleValue, classGenerators Map<String,IdentifierGeneratorDefinition>, isIdentifierMapper boolean, context MetadataBuildingContext) : void from class org.hibernate.boot.model.internal.PropertyBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate isCompositeId(entityClass XClass, idProperty XProperty) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to package isCompositeId(entityClass XClass, idProperty XProperty) : boolean from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic getUniqueIdPropertyFromBaseClass(inferredData PropertyData, baseInferredData PropertyData, propertyAccessor AccessType, context MetadataBuildingContext) : PropertyData from class org.hibernate.boot.model.internal.AnnotationBinder to private getUniqueIdPropertyFromBaseClass(inferredData PropertyData, baseInferredData PropertyData, propertyAccessor AccessType, context MetadataBuildingContext) : PropertyData from class org.hibernate.boot.model.internal.EntityBinder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic isDefault(clazz XClass, context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.AnnotationBinder to public isDefault(clazz XClass, context MetadataBuildingContext) : boolean from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpackage matchIgnoreNotFoundWithFetchType(entity String, association String, notFoundAction NotFoundAction, fetchType FetchType) : void from class org.hibernate.boot.model.internal.AnnotationBinder to private matchIgnoreNotFoundWithFetchType(entity String, association String, notFoundAction NotFoundAction, fetchType FetchType) : void from class org.hibernate.boot.model.internal.ToOneBinder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tann : AnyDiscriminatorValue to discriminatorValue : AnyDiscriminatorValue in method private processAnyDiscriminatorValues(property XProperty, consumer Consumer<AnyDiscriminatorValue>) : void from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tvalueAnns : AnyDiscriminatorValue[] in method private processAnyDiscriminatorValues(property XProperty, consumer Consumer<AnyDiscriminatorValue>) : void from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tversion : DatabaseVersion in method public getOverridableAnnotation(element XAnnotatedElement, annotationType Class<T>, context MetadataBuildingContext) : T from class org.hibernate.boot.model.internal.BinderHelper",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "2355f98586483f71faca58822f30c3e718af8c52",
      "url": "https://github.com/hibernate/hibernate-orm/commit/2355f98586483f71faca58822f30c3e718af8c52",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMap<Object,EntityDiscriminatorMapping.DiscriminatorValueDetails> to Map<Object,DiscriminatorValueDetails> in method protected buildDiscriminatorValueMappings(bootEntityDescriptor PersistentClass, modelCreationProcess MappingModelCreationProcess) : Map<Object,DiscriminatorValueDetails> from class org.hibernate.persister.entity.JoinedSubclassEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprotected resolvePrimaryTableReference(sqlAliasBase SqlAliasBase) : UnionTableReference renamed to public createPrimaryTableReference(sqlAliasBase SqlAliasBase, expressionResolver SqlExpressionResolver, creationContext SqlAstCreationContext) : UnionTableReference in class org.hibernate.persister.entity.UnionSubclassEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprotected resolvePrimaryTableReference(sqlAliasBase SqlAliasBase) : TableReference inlined to public createPrimaryTableReference(sqlAliasBase SqlAliasBase, sqlExpressionResolver SqlExpressionResolver, creationContext SqlAstCreationContext) : TableReference in class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tsp : FkSecondPass to pass : FkSecondPass in method private buildRecursiveOrderedFkSecondPasses(orderedFkSecondPasses List<FkSecondPass>, isADependencyOf Map<String,Set<FkSecondPass>>, startTable String, currentTable String) : void from class org.hibernate.boot.internal.InFlightMetadataCollectorImpl",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tbuf : StringBuilder to alias : StringBuilder in method public generateTableAlias(rootAlias String, tableNumber int) : String from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tvalueMappings : Map<Object,EntityDiscriminatorMapping.DiscriminatorValueDetails> to valueMappings : Map<Object,DiscriminatorValueDetails> in method protected buildDiscriminatorValueMappings(bootEntityDescriptor PersistentClass, modelCreationProcess MappingModelCreationProcess) : Map<Object,DiscriminatorValueDetails> from class org.hibernate.persister.entity.JoinedSubclassEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\townerPersister : EntityPersister in method public getCollectionKey(persister CollectionPersister, owner Object, ownerEntry EntityEntry, session SharedSessionContractImplementor) : Object from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tidDefault : Object in method public resetIdentifier(entity Object, currentId Object, currentVersion Object, session SharedSessionContractImplementor) : void from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tversionDefault : Object in method public resetIdentifier(entity Object, currentId Object, currentVersion Object, session SharedSessionContractImplementor) : void from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tmapping : NonAggregatedIdentifierMapping in method private getIdentifierModelPart(name String, treatTargetType EntityMappingType) : ModelPart from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tcol : Column in method public SingleTableEntityPersister(persistentClass PersistentClass, cacheAccessStrategy EntityDataAccess, naturalIdRegionAccessStrategy NaturalIdDataAccess, creationContext RuntimeModelCreationContext) from class org.hibernate.persister.entity.SingleTableEntityPersister",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate processDiscriminatorOptions() : void extracted from private processSingleTableDiscriminatorProperties(inheritanceState InheritanceState) : AnnotatedDiscriminatorColumn in class org.hibernate.boot.model.internal.EntityBinder",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprotected resolvePrimaryTableReference(sqlAliasBase SqlAliasBase) : TableReference inlined to public createPrimaryTableReference(sqlAliasBase SqlAliasBase, sqlExpressionResolver SqlExpressionResolver, creationContext SqlAstCreationContext) : TableReference in class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMap<Object,EntityDiscriminatorMapping.DiscriminatorValueDetails> to Map<Object,DiscriminatorValueDetails> in method protected buildDiscriminatorValueMappings(bootEntityDescriptor PersistentClass, modelCreationProcess MappingModelCreationProcess) : Map<Object,DiscriminatorValueDetails> from class org.hibernate.persister.entity.JoinedSubclassEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprotected resolvePrimaryTableReference(sqlAliasBase SqlAliasBase) : UnionTableReference renamed to public createPrimaryTableReference(sqlAliasBase SqlAliasBase, expressionResolver SqlExpressionResolver, creationContext SqlAstCreationContext) : UnionTableReference in class org.hibernate.persister.entity.UnionSubclassEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tsp : FkSecondPass to pass : FkSecondPass in method private buildRecursiveOrderedFkSecondPasses(orderedFkSecondPasses List<FkSecondPass>, isADependencyOf Map<String,Set<FkSecondPass>>, startTable String, currentTable String) : void from class org.hibernate.boot.internal.InFlightMetadataCollectorImpl",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tbuf : StringBuilder to alias : StringBuilder in method public generateTableAlias(rootAlias String, tableNumber int) : String from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tvalueMappings : Map<Object,EntityDiscriminatorMapping.DiscriminatorValueDetails> to valueMappings : Map<Object,DiscriminatorValueDetails> in method protected buildDiscriminatorValueMappings(bootEntityDescriptor PersistentClass, modelCreationProcess MappingModelCreationProcess) : Map<Object,DiscriminatorValueDetails> from class org.hibernate.persister.entity.JoinedSubclassEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tprimaryTableReference : TableReference to rootTableReference : TableReference in method public createRootTableGroup(canUseInnerJoins boolean, navigablePath NavigablePath, explicitSourceAlias String, additionalPredicateCollectorAccess Supplier<Consumer<Predicate>>, sqlAliasBase SqlAliasBase, expressionResolver SqlExpressionResolver, fromClauseAccess FromClauseAccess, creationContext SqlAstCreationContext) : TableGroup from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic applyDiscriminator(predicateConsumer Consumer<Predicate>, alias String, tableGroup TableGroup, creationState SqlAstCreationState) : void from class org.hibernate.persister.entity.SingleTableEntityPersister to public applyDiscriminator(predicateConsumer Consumer<Predicate>, alias String, tableGroup TableGroup, creationState SqlAstCreationState) : void from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\townerPersister : EntityPersister in method public getCollectionKey(persister CollectionPersister, owner Object, ownerEntry EntityEntry, session SharedSessionContractImplementor) : Object from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tidDefault : Object in method public resetIdentifier(entity Object, currentId Object, currentVersion Object, session SharedSessionContractImplementor) : void from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tversionDefault : Object in method public resetIdentifier(entity Object, currentId Object, currentVersion Object, session SharedSessionContractImplementor) : void from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tmapping : NonAggregatedIdentifierMapping in method private getIdentifierModelPart(name String, treatTargetType EntityMappingType) : ModelPart from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tcol : Column in method public SingleTableEntityPersister(persistentClass PersistentClass, cacheAccessStrategy EntityDataAccess, naturalIdRegionAccessStrategy NaturalIdDataAccess, creationContext RuntimeModelCreationContext) from class org.hibernate.persister.entity.SingleTableEntityPersister",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "64d0cf804ac949daebfb62630bcad6f78580c1a2",
      "url": "https://github.com/hibernate/hibernate-orm/commit/64d0cf804ac949daebfb62630bcad6f78580c1a2",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.generator.Generator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.generator.internal.CurrentTimestampGeneration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tgenerator : InMemoryGenerator to generator : BeforeExecutionGenerator in class org.hibernate.metamodel.mapping.InMemoryGeneratedValueResolver",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method private createGenerator(context RuntimeModelCreationContext, collection IdentifierCollection) : BeforeExecutionGenerator from class org.hibernate.persister.collection.AbstractCollectionPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getGenerator() : BeforeExecutionGenerator from class org.hibernate.persister.collection.AbstractCollectionPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tidentifierGenerator : InMemoryGenerator to identifierGenerator : BeforeExecutionGenerator in class org.hibernate.persister.collection.AbstractCollectionPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getGenerator() : BeforeExecutionGenerator from class org.hibernate.persister.collection.CollectionPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getVersionGenerator() : BeforeExecutionGenerator from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tversionGenerator : InMemoryGenerator to versionGenerator : BeforeExecutionGenerator in class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getVersionGenerator() : BeforeExecutionGenerator from class org.hibernate.persister.entity.EntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tgenerator : InMemoryGenerator to generator : BeforeExecutionGenerator in class org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.IdGeneratorParameter",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.tuple.ValueGeneration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getVersionGenerator() : BeforeExecutionGenerator from class org.hibernate.tuple.entity.EntityMetamodel",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tversionGenerator : InMemoryGenerator to versionGenerator : BeforeExecutionGenerator in class org.hibernate.tuple.entity.EntityMetamodel",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tinDatabaseStrategies : List<InDatabaseGenerator> to inDatabaseStrategies : List<OnExecutionGenerator> in class org.hibernate.tuple.entity.EntityMetamodel.CompositeGeneratorBuilder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.tuple.entity.EntityMetamodel.InDatabaseGeneratorImpl renamed to org.hibernate.tuple.entity.EntityMetamodel.OnExecutionGeneratorImpl",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.generator.BeforeExecutionGenerator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.generator.InMemoryGenerator renamed to org.hibernate.generator.BeforeExecutionGenerator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.generator.OnExecutionGenerator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.generator.InDatabaseGenerator renamed to org.hibernate.generator.OnExecutionGenerator",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InDatabaseGenerator to generator : OnExecutionGenerator in method public createTableInsertBuilder(identifierMapping BasicEntityIdentifierMapping, expectation Expectation, factory SessionFactoryImplementor) : TableInsertBuilder from class org.hibernate.id.insert.BasicSelectingDelegate",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InDatabaseGenerator to generator : OnExecutionGenerator in method public createTableInsertBuilder(identifierMapping BasicEntityIdentifierMapping, expectation Expectation, factory SessionFactoryImplementor) : TableInsertBuilder from class org.hibernate.id.insert.GetGeneratedKeysDelegate",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InDatabaseGenerator to generator : OnExecutionGenerator in method private doLateInit() : void from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InMemoryGenerator to generator : BeforeExecutionGenerator in method public prepareMappingModel(creationProcess MappingModelCreationProcess) : void from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tdatabaseGenerator : InDatabaseGenerator to databaseGenerator : OnExecutionGenerator in method private insertRootTable(tableExpression String, rows int, keyColumns String[], executionContext ExecutionContext) : void from class org.hibernate.query.sqm.mutation.internal.temptable.InsertExecutionDelegate",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InDatabaseGenerator to generator : OnExecutionGenerator in method public build() : Generator from class org.hibernate.tuple.entity.EntityMetamodel.CompositeGeneratorBuilder",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttempVersionGenerator : InMemoryGenerator to tempVersionGenerator : BeforeExecutionGenerator in method public EntityMetamodel(persistentClass PersistentClass, persister EntityPersister, creationContext RuntimeModelCreationContext) from class org.hibernate.tuple.entity.EntityMetamodel",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.tuple.entity.EntityMetamodel.InDatabaseGeneratorImpl renamed to org.hibernate.tuple.entity.EntityMetamodel.OnExecutionGeneratorImpl",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.generator.InDatabaseGenerator renamed to org.hibernate.generator.OnExecutionGenerator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.generator.internal.CurrentTimestampGeneration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tgenerator : InMemoryGenerator to generator : BeforeExecutionGenerator in class org.hibernate.metamodel.mapping.InMemoryGeneratedValueResolver",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tidentifierGenerator : InMemoryGenerator to identifierGenerator : BeforeExecutionGenerator in class org.hibernate.persister.collection.AbstractCollectionPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method private createGenerator(context RuntimeModelCreationContext, collection IdentifierCollection) : BeforeExecutionGenerator from class org.hibernate.persister.collection.AbstractCollectionPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getGenerator() : BeforeExecutionGenerator from class org.hibernate.persister.collection.AbstractCollectionPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getGenerator() : BeforeExecutionGenerator from class org.hibernate.persister.collection.CollectionPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tversionGenerator : InMemoryGenerator to versionGenerator : BeforeExecutionGenerator in class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getVersionGenerator() : BeforeExecutionGenerator from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getVersionGenerator() : BeforeExecutionGenerator from class org.hibernate.persister.entity.EntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tgenerator : InMemoryGenerator to generator : BeforeExecutionGenerator in class org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter.IdGeneratorParameter",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.tuple.ValueGeneration",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tinDatabaseStrategies : List<InDatabaseGenerator> to inDatabaseStrategies : List<OnExecutionGenerator> in class org.hibernate.tuple.entity.EntityMetamodel.CompositeGeneratorBuilder",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tversionGenerator : InMemoryGenerator to versionGenerator : BeforeExecutionGenerator in class org.hibernate.tuple.entity.EntityMetamodel",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tInMemoryGenerator to BeforeExecutionGenerator in method public getVersionGenerator() : BeforeExecutionGenerator from class org.hibernate.tuple.entity.EntityMetamodel",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.generator.OnExecutionGenerator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.generator.BeforeExecutionGenerator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.generator.InMemoryGenerator renamed to org.hibernate.generator.BeforeExecutionGenerator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic generatedByDatabase() : boolean renamed to public generatedOnExecute() : boolean in class org.hibernate.generator.Generator",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InDatabaseGenerator to generator : OnExecutionGenerator in method public createTableInsertBuilder(identifierMapping BasicEntityIdentifierMapping, expectation Expectation, factory SessionFactoryImplementor) : TableInsertBuilder from class org.hibernate.id.insert.BasicSelectingDelegate",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InDatabaseGenerator to generator : OnExecutionGenerator in method public createTableInsertBuilder(identifierMapping BasicEntityIdentifierMapping, expectation Expectation, factory SessionFactoryImplementor) : TableInsertBuilder from class org.hibernate.id.insert.GetGeneratedKeysDelegate",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InDatabaseGenerator to generator : OnExecutionGenerator in method private doLateInit() : void from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InMemoryGenerator to generator : BeforeExecutionGenerator in method public prepareMappingModel(creationProcess MappingModelCreationProcess) : void from class org.hibernate.persister.entity.AbstractEntityPersister",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tdatabaseGenerator : InDatabaseGenerator to databaseGenerator : OnExecutionGenerator in method private insertRootTable(tableExpression String, rows int, keyColumns String[], executionContext ExecutionContext) : void from class org.hibernate.query.sqm.mutation.internal.temptable.InsertExecutionDelegate",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgenerator : InDatabaseGenerator to generator : OnExecutionGenerator in method public build() : Generator from class org.hibernate.tuple.entity.EntityMetamodel.CompositeGeneratorBuilder",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttempVersionGenerator : InMemoryGenerator to tempVersionGenerator : BeforeExecutionGenerator in method public EntityMetamodel(persistentClass PersistentClass, persister EntityPersister, creationContext RuntimeModelCreationContext) from class org.hibernate.tuple.entity.EntityMetamodel",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "ff9a60601cecce5063c408fe221862f7d602487a",
      "url": "https://github.com/hibernate/hibernate-orm/commit/ff9a60601cecce5063c408fe221862f7d602487a",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getSqlStatementLogger() : SqlStatementLogger extracted from public accept(command String) : void in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getSqlExceptionHelper() : SqlExceptionHelper extracted from public accept(command String) : void in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getSqlExceptionHelper() : SqlExceptionHelper extracted from private jdbcStatement() : Statement in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getSqlExceptionHelper() : SqlExceptionHelper extracted from public release() : void in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getIsolatedConnection() : Connection extracted from private jdbcStatement() : Statement in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getSqlStatementLogger() : SqlStatementLogger extracted from public accept(command String) : void in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getSqlExceptionHelper() : SqlExceptionHelper extracted from public accept(command String) : void in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getSqlExceptionHelper() : SqlExceptionHelper extracted from private jdbcStatement() : Statement in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getIsolatedConnection() : Connection extracted from private jdbcStatement() : Statement in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getSqlExceptionHelper() : SqlExceptionHelper extracted from public release() : void in class org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "c6ecdb78f4315f0c931395d45b179446fb313997",
      "url": "https://github.com/hibernate/hibernate-orm/commit/c6ecdb78f4315f0c931395d45b179446fb313997",
      "ourApproach": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate adaptToPreferredSqlTypeCode(jdbcTypeRegistry JdbcTypeRegistry, defaultSqlTypeCode int, preferredSqlTypeCode int) : void inlined to private handleTypes(bootstrapContext BootstrapContext, options MetadataBuildingOptions) : void in class org.hibernate.boot.model.process.spi.MetadataBuildingProcess",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate adaptToPreferredSqlTypeCode(jdbcTypeRegistry JdbcTypeRegistry, defaultSqlTypeCode int, preferredSqlTypeCode int) : void inlined to private handleTypes(bootstrapContext BootstrapContext, options MetadataBuildingOptions) : void in class org.hibernate.boot.model.process.spi.MetadataBuildingProcess",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "7208bcea41fa7b1676dc0cd7df44ec4768c6a0bf",
      "url": "https://github.com/hibernate/hibernate-orm/commit/7208bcea41fa7b1676dc0cd7df44ec4768c6a0bf",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate bindOwned(persistentClasses Map<String,PersistentClass>, oneToOne OneToOne, property Property) : void renamed to private bindUnowned(persistentClasses Map<String,PersistentClass>, oneToOne OneToOne, property Property) : void in class org.hibernate.cfg.OneToOneSecondPass",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate bindUnowned(persistentClasses Map<String,PersistentClass>, oneToOne OneToOne, propertyName String, property Property) : void renamed to private bindOwned(persistentClasses Map<String,PersistentClass>, oneToOne OneToOne, propertyName String, property Property) : void in class org.hibernate.cfg.OneToOneSecondPass",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getList() : List extracted from private bindIndex() : void in class org.hibernate.cfg.annotations.ListBinder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tlistValueMapping : List to list : List in method private bindIndex() : void from class org.hibernate.cfg.annotations.ListBinder",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmap : org.hibernate.mapping.Map to map : Map in method private makeOneToManyMapKeyColumnNullableIfNotInProperty(property XProperty) : void from class org.hibernate.cfg.annotations.MapBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tentityName : String in method private bindEntityAnnotation() : void from class org.hibernate.cfg.annotations.EntityBinder",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic isEmptyAnnotationValue(annotationString String) : boolean inlined to public makeIdGenerator(id SimpleValue, property XProperty, generatorType String, generatorName String, buildingContext MetadataBuildingContext, localGenerators Map<String,IdentifierGeneratorDefinition>) : void in class org.hibernate.cfg.BinderHelper",
          "developerConfirmation": false
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate bindOwned(persistentClasses Map<String,PersistentClass>, oneToOne OneToOne, property Property) : void renamed to private bindUnowned(persistentClasses Map<String,PersistentClass>, oneToOne OneToOne, property Property) : void in class org.hibernate.cfg.OneToOneSecondPass",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate bindUnowned(persistentClasses Map<String,PersistentClass>, oneToOne OneToOne, propertyName String, property Property) : void renamed to private bindOwned(persistentClasses Map<String,PersistentClass>, oneToOne OneToOne, propertyName String, property Property) : void in class org.hibernate.cfg.OneToOneSecondPass",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate getList() : List extracted from private bindIndex() : void in class org.hibernate.cfg.annotations.ListBinder",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tlistValueMapping : List to list : List in method private bindIndex() : void from class org.hibernate.cfg.annotations.ListBinder",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmap : org.hibernate.mapping.Map to map : Map in method private makeOneToManyMapKeyColumnNullableIfNotInProperty(property XProperty) : void from class org.hibernate.cfg.annotations.MapBinder",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tentityName : String in method private bindEntityAnnotation() : void from class org.hibernate.cfg.annotations.EntityBinder",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "f4a7be6b923493aded77e8427aedce994fb56d60",
      "url": "https://github.com/hibernate/hibernate-orm/commit/f4a7be6b923493aded77e8427aedce994fb56d60",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMappingType to EmbeddableMappingType in method public getMappedType() : EmbeddableMappingType from class org.hibernate.query.derived.AnonymousTupleNonAggregatedEntityIdentifierMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tModelPart to ValuedModelPart in method private resolveNamedTargetPart(targetPartName String, entityMappingType EntityMappingType, collectionDescriptor CollectionPersister) : ValuedModelPart from class org.hibernate.metamodel.mapping.internal.ManyToManyCollectionPart",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tfkTargetModelPart : ModelPart to fkTargetModelPart : ValuedModelPart in class org.hibernate.metamodel.mapping.internal.ManyToManyCollectionPart",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tModelPart to ValuedModelPart in method public getKeyPart() : ValuedModelPart from class org.hibernate.metamodel.mapping.ForeignKeyDescriptor",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMappingType to EmbeddableMappingType in method public getMappedType() : EmbeddableMappingType from class org.hibernate.query.derived.AnonymousTupleEmbeddedEntityIdentifierMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tModelPart to ValuedModelPart in method public getTargetPart() : ValuedModelPart from class org.hibernate.metamodel.mapping.ForeignKeyDescriptor",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tModelPart to ValuedModelPart in method public getModelPart() : ValuedModelPart from class org.hibernate.metamodel.mapping.ForeignKeyDescriptor.Side",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic forEachSubPart(consumer IndexedConsumer<ModelPart>, treatTarget EntityMappingType) : void extracted from public visitFetchables(fetchableConsumer IndexedConsumer<Fetchable>, treatTargetType EntityMappingType) : void in class org.hibernate.metamodel.mapping.internal.DiscriminatedAssociationAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic getContainingTableExpression() : String from class org.hibernate.metamodel.mapping.EmbeddableValuedModelPart to public getContainingTableExpression() : String from class org.hibernate.metamodel.mapping.ValuedModelPart",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.metamodel.mapping.ValuedModelPart from classes [org.hibernate.metamodel.mapping.EmbeddableValuedModelPart, org.hibernate.metamodel.mapping.ForeignKeyDescriptor]",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic findSubTypesSubPart(name String, treatTargetType EntityMappingType) : ModelPart from class org.hibernate.metamodel.mapping.Queryable to public findSubTypesSubPart(name String, treatTargetType EntityMappingType) : ModelPart from class org.hibernate.metamodel.mapping.EntityMappingType",
          "developerConfirmation": true
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic findByPath(path String) : ModelPart from class org.hibernate.metamodel.mapping.Queryable to public findByPath(path String) : ModelPart from class org.hibernate.metamodel.mapping.ModelPartContainer",
          "developerConfirmation": true
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic findSubPart(name String, treatTargetType EntityMappingType) : ModelPart from class org.hibernate.metamodel.mapping.Queryable to public findSubPart(name String, treatTargetType EntityMappingType) : ModelPart from class org.hibernate.metamodel.mapping.ModelPartContainer",
          "developerConfirmation": true
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic visitSubParts(consumer Consumer<ModelPart>, treatTargetType EntityMappingType) : void from class org.hibernate.metamodel.mapping.Queryable to public visitSubParts(consumer Consumer<ModelPart>, treatTargetType EntityMappingType) : void from class org.hibernate.metamodel.mapping.ModelPartContainer",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmodelPartContainer : Queryable to modelPartContainer : ModelPartContainer in method public findByPath(path String) : ModelPart from class org.hibernate.metamodel.mapping.ModelPartContainer",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tModelPart to ValuedModelPart in method public getModelPart() : ValuedModelPart from class org.hibernate.metamodel.mapping.ForeignKeyDescriptor.Side",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tModelPart to ValuedModelPart in method public getKeyPart() : ValuedModelPart from class org.hibernate.metamodel.mapping.ForeignKeyDescriptor",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tModelPart to ValuedModelPart in method public getTargetPart() : ValuedModelPart from class org.hibernate.metamodel.mapping.ForeignKeyDescriptor",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic forEachSubPart(consumer IndexedConsumer<ModelPart>, treatTarget EntityMappingType) : void extracted from public visitFetchables(fetchableConsumer IndexedConsumer<Fetchable>, treatTargetType EntityMappingType) : void in class org.hibernate.metamodel.mapping.internal.DiscriminatedAssociationAttributeMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tfkTargetModelPart : ModelPart to fkTargetModelPart : ValuedModelPart in class org.hibernate.metamodel.mapping.internal.ManyToManyCollectionPart",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tModelPart to ValuedModelPart in method private resolveNamedTargetPart(targetPartName String, entityMappingType EntityMappingType, collectionDescriptor CollectionPersister) : ValuedModelPart from class org.hibernate.metamodel.mapping.internal.ManyToManyCollectionPart",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMappingType to EmbeddableMappingType in method public getMappedType() : EmbeddableMappingType from class org.hibernate.query.derived.AnonymousTupleEmbeddedEntityIdentifierMapping",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMappingType to EmbeddableMappingType in method public getMappedType() : EmbeddableMappingType from class org.hibernate.query.derived.AnonymousTupleNonAggregatedEntityIdentifierMapping",
          "developerConfirmation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic getContainingTableExpression() : String from class org.hibernate.metamodel.mapping.EmbeddableValuedModelPart to public getContainingTableExpression() : String from class org.hibernate.metamodel.mapping.ValuedModelPart",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.metamodel.mapping.ValuedModelPart from classes [org.hibernate.metamodel.mapping.EmbeddableValuedModelPart, org.hibernate.metamodel.mapping.ForeignKeyDescriptor]",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "33ce6a3d79396b93d259610befc9db3123c114e8",
      "url": "https://github.com/hibernate/hibernate-orm/commit/33ce6a3d79396b93d259610befc9db3123c114e8",
      "ourApproach": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate getProxyIdentifier(proxy Object) : Object inlined to public getContextEntityIdentifier(object Object) : Object in class org.hibernate.internal.SessionImpl",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tinitializer : LazyInitializer to lazyInitializer : LazyInitializer in method public unproxy(proxy Object) : Object from class org.hibernate.Hibernate",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tli : LazyInitializer to lazyInitializer : LazyInitializer in method public unproxy(maybeProxy Object) : Object from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tli : LazyInitializer to lazyInitializer : LazyInitializer in method public unproxyAndReassociate(maybeProxy Object) : Object from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tinitializer : LazyInitializer to lazyInitializer : LazyInitializer in method private initializeIfNecessary(result Object) : void from class org.hibernate.loader.access.IdentifierLoadAccessImpl",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tinitializer : LazyInitializer to lazyInitializer : LazyInitializer in method private replaceNonAuditIdProxies(versionsEntity Map, revision Number) : void from class org.hibernate.envers.internal.entities.EntityInstantiator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\toriginalHibernateProxy : HibernateProxy to lazyInitializer : LazyInitializer in method public narrowProxy(proxy Object, persister EntityPersister, key EntityKey, object Object) : Object from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\toriginalHibernateProxy : HibernateProxy to lazyInitializer : LazyInitializer in method public narrowProxy(proxy Object, persister EntityPersister, key EntityKey, object Object) : Object from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tproxy : HibernateProxy in method public reassociateIfUninitializedProxy(value Object) : boolean from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tproxy : HibernateProxy in method public reassociateProxy(value Object, id Object) : void from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tproxy : HibernateProxy in method public unproxyAndReassociate(maybeProxy Object) : Object from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate getProxyIdentifier(proxy Object) : Object inlined to public getContextEntityIdentifier(object Object) : Object in class org.hibernate.internal.SessionImpl",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tinitializer : LazyInitializer to lazyInitializer : LazyInitializer in method public unproxy(proxy Object) : Object from class org.hibernate.Hibernate",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tli : LazyInitializer to lazyInitializer : LazyInitializer in method public unproxy(maybeProxy Object) : Object from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tli : LazyInitializer to lazyInitializer : LazyInitializer in method public unproxyAndReassociate(maybeProxy Object) : Object from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tinitializer : LazyInitializer to lazyInitializer : LazyInitializer in method private initializeIfNecessary(result Object) : void from class org.hibernate.loader.access.IdentifierLoadAccessImpl",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tinitializer : LazyInitializer to lazyInitializer : LazyInitializer in method private replaceNonAuditIdProxies(versionsEntity Map, revision Number) : void from class org.hibernate.envers.internal.entities.EntityInstantiator",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tli : LazyInitializer to lazyInitializer : LazyInitializer in method public reassociateIfUninitializedProxy(value Object) : boolean from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tli : LazyInitializer to lazyInitializer : LazyInitializer in method public reassociateProxy(value Object, id Object) : void from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tproxy : HibernateProxy to lazyInitializer : LazyInitializer in method public setReadOnly(object Object, readOnly boolean) : void from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tproxy : HibernateProxy to lazyInitializer : LazyInitializer in method public setReadOnly(object Object, readOnly boolean) : void from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\thibernateProxy : HibernateProxy to lazyInitializer : LazyInitializer in method private addCollectionChangeWorkUnit(auditProcess AuditProcess, session SessionImplementor, fromEntityName String, relDesc RelationDescription, value Object) : void from class org.hibernate.envers.event.spi.BaseEnversEventListener",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\thibernateProxy : HibernateProxy to lazyInitializer : LazyInitializer in method private addCollectionChangeWorkUnit(auditProcess AuditProcess, session SessionImplementor, fromEntityName String, relDesc RelationDescription, value Object) : void from class org.hibernate.envers.event.spi.BaseEnversEventListener",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tproxy : HibernateProxy in method public reassociateIfUninitializedProxy(value Object) : boolean from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tproxy : HibernateProxy in method public reassociateProxy(value Object, id Object) : void from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tproxy : HibernateProxy in method public unproxyAndReassociate(maybeProxy Object) : Object from class org.hibernate.engine.internal.StatefulPersistenceContext",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "2b50997e7143674bcfe99587a5f12470a1f69c84",
      "url": "https://github.com/hibernate/hibernate-orm/commit/2b50997e7143674bcfe99587a5f12470a1f69c84",
      "ourApproach": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.tuple.AnnotationGenerator renamed to org.hibernate.tuple.AnnotationBasedGenerator",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgeneration : AnnotationGenerator<A> to generation : AnnotationBasedGenerator<A> in method private callInitialize(annotation A, member Member, creationContext GeneratorCreationContext, generator Generator) : void from class org.hibernate.cfg.annotations.PropertyBinder",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.tuple.AnnotationGenerator renamed to org.hibernate.tuple.AnnotationBasedGenerator",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tgeneration : AnnotationGenerator<A> to generation : AnnotationBasedGenerator<A> in method private callInitialize(annotation A, member Member, creationContext GeneratorCreationContext, generator Generator) : void from class org.hibernate.cfg.annotations.PropertyBinder",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "f2c81b0eaf3a39e74c527c20c77704beadb1d26d",
      "url": "https://github.com/hibernate/hibernate-orm/commit/f2c81b0eaf3a39e74c527c20c77704beadb1d26d",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate explicitJoinColumn(primaryKeyJoinColumn PrimaryKeyJoinColumn, joinColumn JoinColumn, parent AnnotatedJoinColumns, context MetadataBuildingContext, defaultColumnName String) : AnnotatedJoinColumn renamed to private buildExplicitInheritanceJoinColumn(primaryKeyJoinColumn PrimaryKeyJoinColumn, joinColumn JoinColumn, parent AnnotatedJoinColumns, context MetadataBuildingContext, defaultColumnName String) : AnnotatedJoinColumn in class org.hibernate.cfg.AnnotatedJoinColumn",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate implicitJoinColumn(parent AnnotatedJoinColumns, context MetadataBuildingContext, defaultColumnName String) : AnnotatedJoinColumn renamed to private buildImplicitInheritanceJoinColumn(parent AnnotatedJoinColumns, context MetadataBuildingContext, defaultColumnName String) : AnnotatedJoinColumn in class org.hibernate.cfg.AnnotatedJoinColumn",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic buildJoinColumn(primaryKeyJoinColumn PrimaryKeyJoinColumn, joinColumn JoinColumn, identifier Value, parent AnnotatedJoinColumns, context MetadataBuildingContext) : AnnotatedJoinColumn renamed to public buildInheritanceJoinColumn(primaryKeyJoinColumn PrimaryKeyJoinColumn, joinColumn JoinColumn, identifier Value, parent AnnotatedJoinColumns, context MetadataBuildingContext) : AnnotatedJoinColumn in class org.hibernate.cfg.AnnotatedJoinColumn",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic buildJoinColumn(primaryKeyJoinColumn PrimaryKeyJoinColumn, joinColumn JoinColumn, identifier Value, parent AnnotatedJoinColumns, context MetadataBuildingContext) : AnnotatedJoinColumn renamed to public buildInheritanceJoinColumn(primaryKeyJoinColumn PrimaryKeyJoinColumn, joinColumn JoinColumn, identifier Value, parent AnnotatedJoinColumns, context MetadataBuildingContext) : AnnotatedJoinColumn in class org.hibernate.cfg.AnnotatedJoinColumn",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate explicitJoinColumn(primaryKeyJoinColumn PrimaryKeyJoinColumn, joinColumn JoinColumn, parent AnnotatedJoinColumns, context MetadataBuildingContext, defaultColumnName String) : AnnotatedJoinColumn renamed to private buildExplicitInheritanceJoinColumn(primaryKeyJoinColumn PrimaryKeyJoinColumn, joinColumn JoinColumn, parent AnnotatedJoinColumns, context MetadataBuildingContext, defaultColumnName String) : AnnotatedJoinColumn in class org.hibernate.cfg.AnnotatedJoinColumn",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate implicitJoinColumn(parent AnnotatedJoinColumns, context MetadataBuildingContext, defaultColumnName String) : AnnotatedJoinColumn renamed to private buildImplicitInheritanceJoinColumn(parent AnnotatedJoinColumns, context MetadataBuildingContext, defaultColumnName String) : AnnotatedJoinColumn in class org.hibernate.cfg.AnnotatedJoinColumn",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-orm.git",
      "sha1": "849246e3cd75e10733c475e18b684ee61daba6dc",
      "url": "https://github.com/hibernate/hibernate-orm/commit/849246e3cd75e10733c475e18b684ee61daba6dc",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getLogicalColumnName(inferredData PropertyData, suffixForDefaultColumnName String, database Database, column jakarta.persistence.Column) : String renamed to private logicalColumnName(inferredData PropertyData, suffixForDefaultColumnName String, database Database, column jakarta.persistence.Column) : String in class org.hibernate.cfg.AnnotatedColumn",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic getPropertyHolder() : PropertyHolder inlined to private inferColumnName(propertyName String) : String in class org.hibernate.cfg.AnnotatedColumn",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate propertyName : String from class org.hibernate.cfg.AnnotatedColumn to private propertyName : String from class org.hibernate.cfg.AnnotatedColumns",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic getPropertyName() : String from class org.hibernate.cfg.AnnotatedColumn to public getPropertyName() : String from class org.hibernate.cfg.AnnotatedColumns",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic setPropertyName(propertyName String) : void from class org.hibernate.cfg.AnnotatedColumn to public setPropertyName(propertyName String) : void from class org.hibernate.cfg.AnnotatedColumns",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic checkPropertyConsistency(columns List<AnnotatedColumn>, propertyName String) : void from class org.hibernate.cfg.AnnotatedColumn to public checkPropertyConsistency() : void from class org.hibernate.cfg.AnnotatedColumns",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate buildJoinColumnsWithFormula(propertyName String, joinFormula JoinFormula) : AnnotatedJoinColumns from class org.hibernate.cfg.ColumnsBuilder to package buildJoinColumnsWithFormula(propertyName String, joinFormula JoinFormula, secondaryTables Map<String,Join>, propertyHolder PropertyHolder, context MetadataBuildingContext) : AnnotatedJoinColumns from class org.hibernate.cfg.AnnotatedJoinColumns",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tpath : String in method private overrideColumns(columns jakarta.persistence.Column[], propertyHolder PropertyHolder, inferredData PropertyData) : jakarta.persistence.Column[] from class org.hibernate.cfg.AnnotatedColumn",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate getLogicalColumnName(inferredData PropertyData, suffixForDefaultColumnName String, database Database, column Column) : String renamed to private logicalColumnName(inferredData PropertyData, suffixForDefaultColumnName String, database Database, column Column) : String in class org.hibernate.cfg.AnnotatedColumn",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic getPropertyHolder() : PropertyHolder inlined to private inferColumnName(propertyName String) : String in class org.hibernate.cfg.AnnotatedColumn",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tpublic getTable() : Table inlined to protected addColumnBinding(value SimpleValue) : void in class org.hibernate.cfg.AnnotatedColumn",
          "developerConfirmation": false
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate propertyName : String from class org.hibernate.cfg.AnnotatedColumn to private propertyName : String from class org.hibernate.cfg.AnnotatedColumns",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic getPropertyName() : String from class org.hibernate.cfg.AnnotatedColumn to public getPropertyName() : String from class org.hibernate.cfg.AnnotatedColumns",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic setPropertyName(propertyName String) : void from class org.hibernate.cfg.AnnotatedColumn to public setPropertyName(propertyName String) : void from class org.hibernate.cfg.AnnotatedColumns",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic checkPropertyConsistency(columns List<AnnotatedColumn>, propertyName String) : void from class org.hibernate.cfg.AnnotatedColumn to public checkPropertyConsistency() : void from class org.hibernate.cfg.AnnotatedColumns",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate buildJoinColumnsWithFormula(propertyName String, joinFormula JoinFormula) : AnnotatedJoinColumns from class org.hibernate.cfg.ColumnsBuilder to package buildJoinColumnsWithFormula(propertyName String, joinFormula JoinFormula, secondaryTables Map<String,Join>, propertyHolder PropertyHolder, context MetadataBuildingContext) : AnnotatedJoinColumns from class org.hibernate.cfg.AnnotatedJoinColumns",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tpath : String in method private overrideColumns(columns Column[], propertyHolder PropertyHolder, inferredData PropertyData) : Column[] from class org.hibernate.cfg.AnnotatedColumn",
          "developerConfirmation": true
        }
      ]
    }
  ]
}