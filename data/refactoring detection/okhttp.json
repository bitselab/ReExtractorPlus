{
  "results": [
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "34bb12533b56eacd7b03c13b87dede4204d48629",
      "url": "https://github.com/square/okhttp/commit/34bb12533b56eacd7b03c13b87dede4204d48629",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMockDuplexResponseBody to MockStreamHandler in method private enqueueResponseWithBody(builder MockResponse.Builder, body MockStreamHandler) : MockStreamHandler from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public trueDuplexClientWritesFirst() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public trueDuplexClientWritesFirst() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public trueDuplexServerWritesFirst() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public trueDuplexServerWritesFirst() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public clientReadsHeadersDataTrailers() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public clientReadsHeadersDataTrailers() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public serverReadsHeadersData() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public serverReadsHeadersData() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public requestBodyEndsAfterResponseBody() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public requestBodyEndsAfterResponseBody() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWith100Continue() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWith100Continue() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWithRedirect() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWithRedirect() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockResponseBody1 : MockDuplexResponseBody to mockResponseBody1 : MockStreamHandler in method public duplexWithAuthChallenge() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockResponseBody2 : MockDuplexResponseBody to mockResponseBody2 : MockStreamHandler in method public duplexWithAuthChallenge() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public fullCallTimeoutDoesNotApplyOnceConnected() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public fullCallTimeoutDoesNotApplyOnceConnected() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWithRewriteInterceptors() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWithRewriteInterceptors() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public serverCancelsRequestBodyAndSendsResponseBody() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public serverCancelsRequestBodyAndSendsResponseBody() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMockDuplexResponseBody to MockStreamHandler in method private enqueueResponseWithBody(builder MockResponse.Builder, body MockStreamHandler) : MockStreamHandler from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public trueDuplexClientWritesFirst() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public trueDuplexClientWritesFirst() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public trueDuplexServerWritesFirst() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public trueDuplexServerWritesFirst() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public clientReadsHeadersDataTrailers() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public clientReadsHeadersDataTrailers() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public serverReadsHeadersData() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public serverReadsHeadersData() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public requestBodyEndsAfterResponseBody() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public requestBodyEndsAfterResponseBody() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWith100Continue() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWith100Continue() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWithRedirect() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWithRedirect() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockResponseBody1 : MockDuplexResponseBody to mockResponseBody1 : MockStreamHandler in method public duplexWithAuthChallenge() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockResponseBody2 : MockDuplexResponseBody to mockResponseBody2 : MockStreamHandler in method public duplexWithAuthChallenge() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public fullCallTimeoutDoesNotApplyOnceConnected() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public fullCallTimeoutDoesNotApplyOnceConnected() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWithRewriteInterceptors() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public duplexWithRewriteInterceptors() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public serverCancelsRequestBodyAndSendsResponseBody() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tmockDuplexResponseBody : MockDuplexResponseBody to mockStreamHandler : MockStreamHandler in method public serverCancelsRequestBodyAndSendsResponseBody() : void from class okhttp3.DuplexTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "c30d3ce7b7859e0048749e4cc07201268a0fd474",
      "url": "https://github.com/square/okhttp/commit/c30d3ce7b7859e0048749e4cc07201268a0fd474",
      "ourApproach": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate writeChunk(sink BufferedSink) : void inlined to public writeTo(sink BufferedSink) : void in class okhttp3.EventListenerTest.NonCompletingRequestBody",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate writeChunk(sink BufferedSink) : void inlined to public writeTo(sink BufferedSink) : void in class okhttp3.EventListenerTest.NonCompletingRequestBody",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "fc14f6fd2a97ccaa8aeb449a0bfc1b4e92978a40",
      "url": "https://github.com/square/okhttp/commit/fc14f6fd2a97ccaa8aeb449a0bfc1b4e92978a40",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic testLocalhostIpv6() : void renamed to public testHostname() : void in class mockwebserver3.RecordedRequestTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic ipv6HostHasSquareBraces() : void renamed to public ipv6HostHasSquareBracesHttp2() : void in class okhttp3.CallTest",
          "developerConfirmation": false
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate configureClientAndServerProxies(http2 boolean) : void extracted from public ipv6HostHasSquareBraces() : void in class okhttp3.CallTest",
          "developerConfirmation": false
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic testLocalhostIpv6() : void renamed to public testHostname() : void in class mockwebserver3.RecordedRequestTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "6e8aa12dd6ffa66c3cf4afc2d68a503059ea88f6",
      "url": "https://github.com/square/okhttp/commit/6e8aa12dd6ffa66c3cf4afc2d68a503059ea88f6",
      "ourApproach": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tfileSystem : InMemoryFileSystem to fileSystem : FakeFileSystem in class okhttp3.CacheTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tfileSystem : InMemoryFileSystem to fileSystem : FakeFileSystem in class okhttp3.CallTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tfileSystem : InMemoryFileSystem to fileSystem : FakeFileSystem in class okhttp3.CacheTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tfileSystem : InMemoryFileSystem to fileSystem : FakeFileSystem in class okhttp3.CallTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "6ed5ec1c8c9fec5c5231a29c5d621429566af248",
      "url": "https://github.com/square/okhttp/commit/6ed5ec1c8c9fec5c5231a29c5d621429566af248",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate sendRequest(client OkHttpClient, url String) : void extracted from public getFailsWithoutAdditionalCert() : void in class okhttp.regression.LetsEncryptTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate sendRequest(client OkHttpClient, url String) : void extracted from public getFailsWithoutAdditionalCert() : void in class okhttp.regression.LetsEncryptTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "4036fa55b72faaad3a14f806094184ade157917d",
      "url": "https://github.com/square/okhttp/commit/4036fa55b72faaad3a14f806094184ade157917d",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollection<Story[]> to List<Object> in method protected createStories(interopTests String[]) : List<Object> from class okhttp3.internal.http2.HpackDecodeTestBase",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresult : List<Story[]> to result : List<Object> in method protected createStories(interopTests String[]) : List<Object> from class okhttp3.internal.http2.HpackDecodeTestBase",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tstory : Story to story2 : Story in method public testRoundTrip(story Story) : void from class okhttp3.internal.http2.HpackRoundTripTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollection<Story[]> to List<Object> in method protected createStories(interopTests String[]) : List<Object> from class okhttp3.internal.http2.HpackDecodeTestBase",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresult : List<Story[]> to result : List<Object> in method protected createStories(interopTests String[]) : List<Object> from class okhttp3.internal.http2.HpackDecodeTestBase",
          "developerConfirmation": true
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tprotected testDecoder() : void from class okhttp3.internal.http2.HpackDecodeTestBase to public testGoodDecoderInterop(story Story) : void from class okhttp3.internal.http2.HpackDecodeInteropTest",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "59ae0c138d6468aac5d92781b19cddc26e04e862",
      "url": "https://github.com/square/okhttp/commit/59ae0c138d6468aac5d92781b19cddc26e04e862",
      "ourApproach": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttempDir : TemporaryFolder to tempDir : File in class okhttp3.internal.cache2.RelayTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttempDir : TemporaryFolder to tempDir : File in class okhttp3.internal.cache2.FileOperatorTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tnoDataLeftBehind : TestRule to noDataLeftBehind : AfterEachCallback in class okhttp3.internal.ws.WebSocketWriterTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic setUp() : void from class mockwebserver3.MockWebServerTest to public setUp() : void from class okhttp3.mockwebserver.MockWebServerTest",
          "developerConfirmation": false
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic checkPlatforms() : void renamed to public setUp() : void in class okhttp3.mockwebserver.MockWebServerTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttempDir : TemporaryFolder to tempDir : File in class okhttp3.internal.cache2.FileOperatorTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttempDir : TemporaryFolder to tempDir : File in class okhttp3.internal.cache2.RelayTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tnoDataLeftBehind : TestRule to noDataLeftBehind : AfterEachCallback in class okhttp3.internal.ws.WebSocketWriterTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "963c76864344d0d55ba7421f474c130a958a9649",
      "url": "https://github.com/square/okhttp/commit/963c76864344d0d55ba7421f474c130a958a9649",
      "ourApproach": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttempDir : TemporaryFolder to tempDir : File in class okhttp3.URLConnectionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttempDir : TemporaryFolder to tempDir : File in class okhttp3.internal.http2.HttpOverHttp2Test",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttempDir : TemporaryFolder to tempDir : File in class okhttp3.URLConnectionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttempDir : TemporaryFolder to tempDir : File in class okhttp3.internal.http2.HttpOverHttp2Test",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "f8065acac28a0b86f3bdbd854ac87af0789416d0",
      "url": "https://github.com/square/okhttp/commit/f8065acac28a0b86f3bdbd854ac87af0789416d0",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic beforeEach(context ExtensionContext) : void extracted from public apply(base Statement, description Description) : Statement in class okhttp3.TestLogHandler",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic afterEach(context ExtensionContext) : void extracted from public apply(base Statement, description Description) : Statement in class okhttp3.TestLogHandler",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic beforeEach(context ExtensionContext) : void extracted from public apply(base Statement, description Description) : Statement in class okhttp3.TestLogHandler",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic afterEach(context ExtensionContext) : void extracted from public apply(base Statement, description Description) : Statement in class okhttp3.TestLogHandler",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "9ee33446f83932a2bb001e5ef2156a3d5de5838d",
      "url": "https://github.com/square/okhttp/commit/9ee33446f83932a2bb001e5ef2156a3d5de5838d",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic checkPlatforms() : void renamed to public setUp() : void in class mockwebserver3.MockWebServerTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tiae : IllegalArgumentException to expected : IllegalStateException in method public shutdownTwice() : void from class okhttp3.mockwebserver.MockWebServerTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tiae : IllegalArgumentException to expected : IllegalStateException in method public shutdownTwice() : void from class okhttp3.mockwebserver.MockWebServerTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tiae : IllegalArgumentException to expected : IllegalStateException in method public shutdownTwice() : void from class mockwebserver3.MockWebServerTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tiae : IllegalArgumentException to expected : IllegalStateException in method public shutdownTwice() : void from class mockwebserver3.MockWebServerTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic checkPlatforms() : void renamed to public setUp() : void in class mockwebserver3.MockWebServerTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tiae : IllegalArgumentException to expected : IllegalStateException in method public shutdownTwice() : void from class okhttp3.mockwebserver.MockWebServerTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tiae : IllegalArgumentException to expected : IllegalStateException in method public shutdownTwice() : void from class okhttp3.mockwebserver.MockWebServerTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tiae : IllegalArgumentException to expected : IllegalStateException in method public shutdownTwice() : void from class mockwebserver3.MockWebServerTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tiae : IllegalArgumentException to expected : IllegalStateException in method public shutdownTwice() : void from class mockwebserver3.MockWebServerTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "334eb0072512155e57a809b2fa18861c0d68ec9f",
      "url": "https://github.com/square/okhttp/commit/334eb0072512155e57a809b2fa18861c0d68ec9f",
      "ourApproach": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tokhttp3.internal.sse.Event moved to okhttp3.sse.internal.Event",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tokhttp3.internal.sse.EventSourceHttpTest moved to okhttp3.sse.internal.EventSourceHttpTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tokhttp3.internal.sse.EventSourceRecorder moved to okhttp3.sse.internal.EventSourceRecorder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tokhttp3.internal.sse.ServerSentEventIteratorTest moved to okhttp3.sse.internal.ServerSentEventIteratorTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tokhttp3.internal.sse.Event moved to okhttp3.sse.internal.Event",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tokhttp3.internal.sse.EventSourceHttpTest moved to okhttp3.sse.internal.EventSourceHttpTest",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tokhttp3.internal.sse.EventSourceRecorder moved to okhttp3.sse.internal.EventSourceRecorder",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\tokhttp3.internal.sse.ServerSentEventIteratorTest moved to okhttp3.sse.internal.ServerSentEventIteratorTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "5f67bd1e5b28179ddd11da500d61ae2d8ec8b8f2",
      "url": "https://github.com/square/okhttp/commit/5f67bd1e5b28179ddd11da500d61ae2d8ec8b8f2",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate newEventSource(accept String) : EventSource extracted from private newEventSource() : EventSource in class okhttp3.internal.sse.EventSourceHttpTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tbuilder : Request.Builder in method private newEventSource(accept String) : EventSource from class okhttp3.internal.sse.EventSourceHttpTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate newEventSource(accept String) : EventSource extracted from private newEventSource() : EventSource in class okhttp3.internal.sse.EventSourceHttpTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tbuilder : Request.Builder in method private newEventSource(accept String) : EventSource from class okhttp3.internal.sse.EventSourceHttpTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "b17d8f1c39ce25e968d66b9d3d65d60a1a6683d6",
      "url": "https://github.com/square/okhttp/commit/b17d8f1c39ce25e968d66b9d3d65d60a1a6683d6",
      "ourApproach": [],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate successfulExtensions(extensionsHeader String) : void extracted from public compressedMessages() : void in class okhttp3.internal.ws.WebSocketHttpTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "8703126227aba76b252f3108de760187f1982be1",
      "url": "https://github.com/square/okhttp/commit/8703126227aba76b252f3108de760187f1982be1",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic reservedFlagsAreUnsupported() : void renamed to public reservedFlags2and3AreUnsupported() : void in class okhttp3.internal.ws.WebSocketReaderTest",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic initWebSocket(random Random, pingIntervalMillis int, responseHeaders Headers) : void extracted from public initWebSocket(random Random, pingIntervalMillis int) : void in class okhttp3.internal.ws.RealWebSocketTest.TestStreams",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic initWebSocket(random Random, pingIntervalMillis int, responseHeaders Headers) : void extracted from public initWebSocket(random Random, pingIntervalMillis int) : void in class okhttp3.internal.ws.RealWebSocketTest.TestStreams",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic reservedFlagsAreUnsupported() : void renamed to public reservedFlags2and3AreUnsupported() : void in class okhttp3.internal.ws.WebSocketReaderTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "134ac982291a8d679e9cd2721a903fdeb1e1fb5b",
      "url": "https://github.com/square/okhttp/commit/134ac982291a8d679e9cd2721a903fdeb1e1fb5b",
      "ourApproach": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate recoverFromOneHttp2ErrorRequiresNewConnection(errorCode ErrorCode) : void extracted from public recoverFromOneInternalErrorRequiresNewConnection() : void in class okhttp3.internal.http2.HttpOverHttp2Test",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate recoverFromOneHttp2ErrorRequiresNewConnection(errorCode ErrorCode) : void extracted from public recoverFromOneInternalErrorRequiresNewConnection() : void in class okhttp3.internal.http2.HttpOverHttp2Test",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "b2168ceb7381153aee352e582aa4131ad35f15a7",
      "url": "https://github.com/square/okhttp/commit/b2168ceb7381153aee352e582aa4131ad35f15a7",
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tX509TrustManager to KeyAndTrustManagers in method private trustManagerForCertificates(in InputStream) : KeyAndTrustManagers from class okhttp3.recipes.CustomTrust",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\ttrustManagers : TrustManager[] in method private trustManagerForCertificates(in InputStream) : X509TrustManager from class okhttp3.recipes.CustomTrust",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tX509TrustManager to KeyAndTrustManagers in method private trustManagerForCertificates(in InputStream) : KeyAndTrustManagers from class okhttp3.recipes.CustomTrust",
          "developerConfirmation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\ttrustManagers : TrustManager[] in method private trustManagerForCertificates(in InputStream) : X509TrustManager from class okhttp3.recipes.CustomTrust",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "283418b2bc079108cbe3599f06a4ebfa7211e319",
      "url": "https://github.com/square/okhttp/commit/283418b2bc079108cbe3599f06a4ebfa7211e319",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic skipForUri(codePoints int...) : UrlComponentEncodingTester renamed to public escapeForUri(codePoints int...) : UrlComponentEncodingTester in class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic identityForNonAscii() : UrlComponentEncodingTester renamed to public nonAscii(encoding Encoding) : UrlComponentEncodingTester in class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tencoded : String to expected : String in method private testParseAlreadyEncoded(codePoint int, encoding Encoding, component Component) : void from class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tencoded : String to expected : String in method private testParseOriginal(codePoint int, codePointString String, encoding Encoding, component Component) : void from class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ts : String to actual : String in method private testParseOriginal(codePoint int, codePointString String, encoding Encoding, component Component) : void from class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tactual : String in method private testParseAlreadyEncoded(codePoint int, encoding Encoding, component Component) : void from class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic identityForNonAscii() : UrlComponentEncodingTester renamed to public nonAscii(encoding Encoding) : UrlComponentEncodingTester in class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic skipForUri(codePoints int...) : UrlComponentEncodingTester renamed to public escapeForUri(codePoints int...) : UrlComponentEncodingTester in class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tencoded : String to expected : String in method private testParseAlreadyEncoded(codePoint int, encoding Encoding, component Component) : void from class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tencoded : String to expected : String in method private testParseOriginal(codePoint int, codePointString String, encoding Encoding, component Component) : void from class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ts : String to actual : String in method private testParseOriginal(codePoint int, codePointString String, encoding Encoding, component Component) : void from class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tactual : String in method private testParseAlreadyEncoded(codePoint int, encoding Encoding, component Component) : void from class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tcodePointString : String in method public test(component Component) : UrlComponentEncodingTester from class okhttp3.UrlComponentEncodingTester",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "584e8503a84d508bde58b49137ed920281b3d9bf",
      "url": "https://github.com/square/okhttp/commit/584e8503a84d508bde58b49137ed920281b3d9bf",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tlogHandler : TestLogHandler to testLogHandler : TestLogHandler in class okhttp3.CallTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\thttp2Handler : TestLogHandler to testLogHandler : TestLogHandler in class okhttp3.internal.http2.HttpOverHttp2Test",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tlogHandler : TestLogHandler to testLogHandler : TestLogHandler in class okhttp3.CallTest",
          "developerConfirmation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\thttp2Handler : TestLogHandler to testLogHandler : TestLogHandler in class okhttp3.internal.http2.HttpOverHttp2Test",
          "developerConfirmation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate logger : Logger from class okhttp3.CallTest to private logger : Logger from class okhttp3.TestLogHandler",
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "b5efb41a636154cb8bbc7c5ea3c8244090692d28",
      "url": "https://github.com/square/okhttp/commit/b5efb41a636154cb8bbc7c5ea3c8244090692d28",
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic unexpectedPingIsNotReturned() : void renamed to public unexpectedPongIsNotReturned() : void in class okhttp3.internal.http2.Http2ConnectionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsource : Source to source : BufferedSource in method public readTimesOut() : void from class okhttp3.internal.http2.Http2ConnectionTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic unexpectedPingIsNotReturned() : void renamed to public unexpectedPongIsNotReturned() : void in class okhttp3.internal.http2.Http2ConnectionTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsource : Source to source : BufferedSource in method public readTimesOut() : void from class okhttp3.internal.http2.Http2ConnectionTest",
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "https://github.com/square/okhttp.git",
      "sha1": "7624d99eafcd3dd847f36335d4c99560c55ab6bd",
      "url": "https://github.com/square/okhttp/commit/7624d99eafcd3dd847f36335d4c99560c55ab6bd",
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\texecutor : TestExecutor to taskRunner : TaskRunner in class okhttp3.internal.cache.DiskLruCacheTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\texecutor : TestExecutor to taskRunner : TaskRunner in class okhttp3.internal.cache.DiskLruCacheTest",
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\texecutor : TestExecutor to taskRunner : TaskRunner in class okhttp3.internal.cache.DiskLruCacheTest",
          "developerConfirmation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\texecutor : TestExecutor to taskRunner : TaskRunner in class okhttp3.internal.cache.DiskLruCacheTest",
          "developerConfirmation": true
        }
      ]
    }
  ]
}