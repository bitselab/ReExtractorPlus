{
  "results": [
    {
      "repository": "***.git",
      "sha1": "4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "url": "***/commit/4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "originalMethod": {
        "container": "metrics.MethodEntitySet",
        "type": "Method",
        "name": "calculate",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 71,
        "endLine": 93,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "metrics.MethodEntitySet",
        "type": "Method",
        "name": "calculate",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 66,
        "endLine": 86,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodDeclaration.accept(methodEntityVisitor);\n",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 9,
            "endColumn": 55
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodDeclaration.accept(methodEntityVisitor);\n",
            "startLine": 69,
            "endLine": 69,
            "startColumn": 9,
            "endColumn": 55
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=methodEntityVisitor.getMethodEntitySet();\n",
            "startLine": 77,
            "endLine": 77,
            "startColumn": 9,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=methodEntityVisitor.getMethodEntitySet();\n",
            "startLine": 71,
            "endLine": 71,
            "startColumn": 9,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList=methodEntityVisitor.getVariableCallList();\n",
            "startLine": 78,
            "endLine": 78,
            "startColumn": 9,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList=methodEntityVisitor.getVariableCallList();\n",
            "startLine": 72,
            "endLine": 72,
            "startColumn": 9,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList=methodEntityVisitor.getVariableWriteList();\n",
            "startLine": 79,
            "endLine": 79,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList=methodEntityVisitor.getVariableWriteList();\n",
            "startLine": 73,
            "endLine": 73,
            "startColumn": 9,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList=methodEntityVisitor.getVariableReadList();\n",
            "startLine": 80,
            "endLine": 80,
            "startColumn": 9,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList=methodEntityVisitor.getVariableReadList();\n",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 9,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=methodEntityVisitor.getInvocationSet();\n",
            "startLine": 81,
            "endLine": 81,
            "startColumn": 9,
            "endColumn": 64
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=methodEntityVisitor.getInvocationSet();\n",
            "startLine": 75,
            "endLine": 75,
            "startColumn": 9,
            "endColumn": 64
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=methodEntityVisitor.getInvocationList();\n",
            "startLine": 82,
            "endLine": 82,
            "startColumn": 9,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=methodEntityVisitor.getInvocationList();\n",
            "startLine": 76,
            "endLine": 76,
            "startColumn": 9,
            "endColumn": 66
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations=methodEntityVisitor.getInvocationLocations();\n",
            "startLine": 83,
            "endLine": 83,
            "startColumn": 9,
            "endColumn": 76
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations=methodEntityVisitor.getInvocationLocations();\n",
            "startLine": 77,
            "endLine": 77,
            "startColumn": 9,
            "endColumn": 76
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(name,methodEntitySet);\n",
            "startLine": 84,
            "endLine": 84,
            "startColumn": 9,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(name,methodEntitySet);\n",
            "startLine": 78,
            "endLine": 78,
            "startColumn": 9,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"VariableCallList\",variableCallList);\n",
            "startLine": 87,
            "endLine": 87,
            "startColumn": 9,
            "endColumn": 58
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"VariableCallList\",variableCallList);\n",
            "startLine": 80,
            "endLine": 80,
            "startColumn": 9,
            "endColumn": 58
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"VariableWriteList\",variableWriteList);\n",
            "startLine": 88,
            "endLine": 88,
            "startColumn": 9,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"VariableWriteList\",variableWriteList);\n",
            "startLine": 81,
            "endLine": 81,
            "startColumn": 9,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"VariableReadList\",variableReadList);\n",
            "startLine": 89,
            "endLine": 89,
            "startColumn": 9,
            "endColumn": 58
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"VariableReadList\",variableReadList);\n",
            "startLine": 82,
            "endLine": 82,
            "startColumn": 9,
            "endColumn": 58
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"InvocationSet\",invocationSet);\n",
            "startLine": 90,
            "endLine": 90,
            "startColumn": 9,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"InvocationSet\",invocationSet);\n",
            "startLine": 83,
            "endLine": 83,
            "startColumn": 9,
            "endColumn": 52
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"InvocationList\",invocationList);\n",
            "startLine": 91,
            "endLine": 91,
            "startColumn": 9,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"InvocationList\",invocationList);\n",
            "startLine": 84,
            "endLine": 84,
            "startColumn": 9,
            "endColumn": 54
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"InvocationLocations\",invocationLocations);\n",
            "startLine": 92,
            "endLine": 92,
            "startColumn": 9,
            "endColumn": 64
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"InvocationLocations\",invocationLocations);\n",
            "startLine": 85,
            "endLine": 85,
            "startColumn": 9,
            "endColumn": 64
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MethodEntityVisitor methodEntityVisitor=new MethodEntityVisitor(cu,methodDeclaration,methodGetSetJudge,type,classPath,classBindingToPath,classToMethodDeclaration);\n",
            "startLine": 73,
            "endLine": 73,
            "startColumn": 9,
            "endColumn": 179
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MethodEntityVisitor methodEntityVisitor=new MethodEntityVisitor(cu,methodDeclaration,methodGetSetJudge,type,classPath,classToDeclaration);\n",
            "startLine": 68,
            "endLine": 68,
            "startColumn": 9,
            "endColumn": 154
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"MethodCallHashSet\",methodCallHashSet);\n",
            "startLine": 85,
            "endLine": 85,
            "startColumn": 9,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"methodEntityList\",methodEntityList);\n",
            "startLine": 79,
            "endLine": 79,
            "startColumn": 9,
            "endColumn": 58
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallHashSet=methodEntityVisitor.getMethodCallHashSet();\n",
            "startLine": 75,
            "endLine": 75,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList=methodEntityVisitor.getMethodEntityList();\n",
            "startLine": 70,
            "endLine": 70,
            "startColumn": 9,
            "endColumn": 70
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallList=methodEntityVisitor.getMethodCallList();\n",
            "startLine": 76,
            "endLine": 76,
            "startColumn": 9,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList=methodEntityVisitor.getMethodEntityList();\n",
            "startLine": 70,
            "endLine": 70,
            "startColumn": 9,
            "endColumn": 70
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"MethodCallList\",methodCallList);\n",
            "startLine": 86,
            "endLine": 86,
            "startColumn": 9,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.put(\"methodEntityList\",methodEntityList);\n",
            "startLine": 79,
            "endLine": 79,
            "startColumn": 9,
            "endColumn": 58
          },
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "url": "***/commit/4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "originalMethod": {
        "container": "metrics.MethodEntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 164,
        "endLine": 206,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "metrics.MethodEntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 153,
        "endLine": 194,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(methodBinding == null)",
            "startLine": 168,
            "endLine": 168,
            "startColumn": 9,
            "endColumn": 48
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(methodBinding == null)",
            "startLine": 157,
            "endLine": 157,
            "startColumn": 9,
            "endColumn": 48
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 171,
            "endLine": 171,
            "startColumn": 9,
            "endColumn": 46
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 160,
            "endLine": 160,
            "startColumn": 9,
            "endColumn": 46
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(type.equals(\"Feature Envy\"))",
            "startLine": 172,
            "endLine": 177,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(type.equals(\"Feature Envy\"))",
            "startLine": 161,
            "endLine": 166,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding.isFromSource())",
            "startLine": 178,
            "endLine": 204,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding.isFromSource())",
            "startLine": 167,
            "endLine": 192,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationSet.containsKey(className))",
            "startLine": 183,
            "endLine": 203,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationSet.containsKey(className))",
            "startLine": 172,
            "endLine": 191,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(!invocationLocations.get(className).containsKey(methodSignature))",
            "startLine": 187,
            "endLine": 189,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(!invocationLocations.get(className).containsKey(methodSignature))",
            "startLine": 175,
            "endLine": 177,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 174,
            "endLine": 176,
            "startColumn": 150,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 163,
            "endLine": 165,
            "startColumn": 144,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 175,
            "endLine": 175,
            "startColumn": 17,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 164,
            "endLine": 164,
            "startColumn": 17,
            "endColumn": 29
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "visit(node.getExpression());\n",
            "startLine": 166,
            "endLine": 166,
            "startColumn": 9,
            "endColumn": 37
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "visit(node.getExpression());\n",
            "startLine": 155,
            "endLine": 155,
            "startColumn": 9,
            "endColumn": 37
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IMethodBinding methodBinding=node.resolveMethodBinding();\n",
            "startLine": 167,
            "endLine": 167,
            "startColumn": 9,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IMethodBinding methodBinding=node.resolveMethodBinding();\n",
            "startLine": 156,
            "endLine": 156,
            "startColumn": 9,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=methodBinding.getDeclaringClass();\n",
            "startLine": 169,
            "endLine": 169,
            "startColumn": 9,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=methodBinding.getDeclaringClass();\n",
            "startLine": 158,
            "endLine": 158,
            "startColumn": 9,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String className=typeBinding.getQualifiedName();\n",
            "startLine": 179,
            "endLine": 179,
            "startColumn": 13,
            "endColumn": 63
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String className=typeBinding.getQualifiedName();\n",
            "startLine": 168,
            "endLine": 168,
            "startColumn": 13,
            "endColumn": 63
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + methodBinding.getName());\n",
            "startLine": 182,
            "endLine": 182,
            "startColumn": 13,
            "endColumn": 76
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + methodBinding.getName());\n",
            "startLine": 170,
            "endLine": 170,
            "startColumn": 13,
            "endColumn": 76
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(methodSignature).add(getLocationFromNode(cu,methodSignature,node));\n",
            "startLine": 190,
            "endLine": 190,
            "startColumn": 17,
            "endColumn": 125
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(methodSignature).add(getLocationFromNode(cu,methodSignature,node));\n",
            "startLine": 178,
            "endLine": 178,
            "startColumn": 17,
            "endColumn": 125
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> set=new HashSet<>();\n",
            "startLine": 192,
            "endLine": 192,
            "startColumn": 17,
            "endColumn": 55
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> set=new HashSet<>();\n",
            "startLine": 180,
            "endLine": 180,
            "startColumn": 17,
            "endColumn": 55
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> list=new ArrayList<>();\n",
            "startLine": 193,
            "endLine": 193,
            "startColumn": 17,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> list=new ArrayList<>();\n",
            "startLine": 181,
            "endLine": 181,
            "startColumn": 17,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.put(className,set);\n",
            "startLine": 196,
            "endLine": 196,
            "startColumn": 17,
            "endColumn": 51
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.put(className,set);\n",
            "startLine": 184,
            "endLine": 184,
            "startColumn": 17,
            "endColumn": 51
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.put(className,list);\n",
            "startLine": 197,
            "endLine": 197,
            "startColumn": 17,
            "endColumn": 53
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.put(className,list);\n",
            "startLine": 185,
            "endLine": 185,
            "startColumn": 17,
            "endColumn": 53
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.put(className,map);\n",
            "startLine": 202,
            "endLine": 202,
            "startColumn": 17,
            "endColumn": 57
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.put(className,map);\n",
            "startLine": 190,
            "endLine": 190,
            "startColumn": 17,
            "endColumn": 57
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 205,
            "endLine": 205,
            "startColumn": 9,
            "endColumn": 21
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 193,
            "endLine": 193,
            "startColumn": 9,
            "endColumn": 21
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String methodSignature=Utils.getMethodSignature(methodBinding);\n",
            "startLine": 184,
            "endLine": 184,
            "startColumn": 17,
            "endColumn": 82
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String methodSignature=Utils.getMethodSignature(methodBinding);\n",
            "startLine": 171,
            "endLine": 171,
            "startColumn": 13,
            "endColumn": 78
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).put(methodSignature,new ArrayList<>());\n",
            "startLine": 188,
            "endLine": 188,
            "startColumn": 21,
            "endColumn": 96
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).put(methodSignature,new HashSet<>());\n",
            "startLine": 176,
            "endLine": 176,
            "startColumn": 21,
            "endColumn": 94
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(classBindingToPath.containsKey(typeBinding.getQualifiedName()) && this.methodGetSetJudge.judgeGetAndSet(typeBinding,methodBinding,classToMethodDeclaration.get(typeBinding.getQualifiedName())))",
            "startLine": 173,
            "endLine": 176,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(classToDeclaration.containsKey(typeBinding.getQualifiedName()) && this.methodGetSetJudge.judgeGetAndSet(typeBinding,methodBinding,classToDeclaration.get(typeBinding.getQualifiedName())))",
            "startLine": 162,
            "endLine": 165,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(Utils.getMethodSignature(methodBinding));\n",
            "startLine": 185,
            "endLine": 185,
            "startColumn": 17,
            "endColumn": 91
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(methodSignature);\n",
            "startLine": 173,
            "endLine": 173,
            "startColumn": 17,
            "endColumn": 67
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(Utils.getMethodSignature(methodBinding));\n",
            "startLine": 195,
            "endLine": 195,
            "startColumn": 17,
            "endColumn": 67
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(methodSignature);\n",
            "startLine": 183,
            "endLine": 183,
            "startColumn": 17,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 183,
            "endLine": 191,
            "startColumn": 55,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 172,
            "endLine": 179,
            "startColumn": 55,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,List<ExpressionLocationEntity>> map=new HashMap<>();\n",
            "startLine": 199,
            "endLine": 199,
            "startColumn": 17,
            "endColumn": 87
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,HashSet<ExpressionLocationEntity>> map=new HashMap<>();\n",
            "startLine": 186,
            "endLine": 186,
            "startColumn": 17,
            "endColumn": 90
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 191,
            "endLine": 203,
            "startColumn": 20,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 179,
            "endLine": 191,
            "startColumn": 20,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "map.put(methodSignature,new ArrayList<>());\n",
            "startLine": 200,
            "endLine": 200,
            "startColumn": 17,
            "endColumn": 61
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "map.put(methodSignature,set1);\n",
            "startLine": 189,
            "endLine": 189,
            "startColumn": 17,
            "endColumn": 48
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "map.get(methodSignature).add(getLocationFromNode(cu,methodSignature,node));\n",
            "startLine": 201,
            "endLine": 201,
            "startColumn": 17,
            "endColumn": 94
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set1.add(getLocationFromNode(cu,methodSignature,node));\n",
            "startLine": 188,
            "endLine": 188,
            "startColumn": 17,
            "endColumn": 74
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(Utils.getMethodSignature(methodBinding));\n",
            "startLine": 194,
            "endLine": 194,
            "startColumn": 17,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(methodSignature);\n",
            "startLine": 182,
            "endLine": 182,
            "startColumn": 17,
            "endColumn": 42
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(Utils.getMethodSignature(methodBinding));\n",
            "startLine": 186,
            "endLine": 186,
            "startColumn": 17,
            "endColumn": 92
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(methodSignature);\n",
            "startLine": 174,
            "endLine": 174,
            "startColumn": 17,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallHashSet.add(className + \".\" + methodBinding.getName());\n",
            "startLine": 180,
            "endLine": 180,
            "startColumn": 13,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList.add(className + \".\" + methodBinding.getName());\n",
            "startLine": 169,
            "endLine": 169,
            "startColumn": 13,
            "endColumn": 77
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String methodSignature=Utils.getMethodSignature(methodBinding);\n",
            "startLine": 198,
            "endLine": 198,
            "startColumn": 17,
            "endColumn": 82
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String methodSignature=Utils.getMethodSignature(methodBinding);\n",
            "startLine": 171,
            "endLine": 171,
            "startColumn": 13,
            "endColumn": 78
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(Utils.getMethodSignature(methodBinding));\n",
            "startLine": 186,
            "endLine": 186,
            "startColumn": 17,
            "endColumn": 92
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList.add(className + \".\" + methodBinding.getName());\n",
            "startLine": 169,
            "endLine": 169,
            "startColumn": 13,
            "endColumn": 77
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(Utils.getMethodSignature(methodBinding));\n",
            "startLine": 194,
            "endLine": 194,
            "startColumn": 17,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList.add(className + \".\" + methodBinding.getName());\n",
            "startLine": 169,
            "endLine": 169,
            "startColumn": 13,
            "endColumn": 77
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "map.get(methodSignature).add(getLocationFromNode(cu,methodSignature,node));\n",
            "startLine": 201,
            "endLine": 201,
            "startColumn": 17,
            "endColumn": 94
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(methodSignature);\n",
            "startLine": 174,
            "endLine": 174,
            "startColumn": 17,
            "endColumn": 68
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallHashSet.add(className + \".\" + methodBinding.getName());\n",
            "startLine": 180,
            "endLine": 180,
            "startColumn": 13,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(methodSignature);\n",
            "startLine": 182,
            "endLine": 182,
            "startColumn": 17,
            "endColumn": 42
          },
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "url": "***/commit/4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "originalMethod": {
        "container": "metrics.MethodEntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 209,
        "endLine": 253,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "metrics.MethodEntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 197,
        "endLine": 242,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding == null)",
            "startLine": 212,
            "endLine": 212,
            "startColumn": 9,
            "endColumn": 50
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding == null)",
            "startLine": 200,
            "endLine": 200,
            "startColumn": 9,
            "endColumn": 50
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 214,
            "endLine": 214,
            "startColumn": 9,
            "endColumn": 46
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 202,
            "endLine": 202,
            "startColumn": 9,
            "endColumn": 46
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(!typeBinding.isFromSource())",
            "startLine": 215,
            "endLine": 215,
            "startColumn": 9,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(!typeBinding.isFromSource())",
            "startLine": 203,
            "endLine": 203,
            "startColumn": 9,
            "endColumn": 54
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(node.getParent().getNodeType() == 7)",
            "startLine": 217,
            "endLine": 226,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(node.getParent().getNodeType() == 7)",
            "startLine": 206,
            "endLine": 215,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(par.getLeftHandSide().toString().equals(node.toString()))",
            "startLine": 219,
            "endLine": 223,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(par.getLeftHandSide().toString().equals(node.toString()))",
            "startLine": 208,
            "endLine": 212,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationSet.containsKey(className))",
            "startLine": 229,
            "endLine": 251,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationSet.containsKey(className))",
            "startLine": 219,
            "endLine": 240,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding variableBinding=node.resolveFieldBinding();\n",
            "startLine": 211,
            "endLine": 211,
            "startColumn": 9,
            "endColumn": 71
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding variableBinding=node.resolveFieldBinding();\n",
            "startLine": 199,
            "endLine": 199,
            "startColumn": 9,
            "endColumn": 71
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=variableBinding.getDeclaringClass();\n",
            "startLine": 213,
            "endLine": 213,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=variableBinding.getDeclaringClass();\n",
            "startLine": 201,
            "endLine": 201,
            "startColumn": 9,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String className=typeBinding.getQualifiedName();\n",
            "startLine": 216,
            "endLine": 216,
            "startColumn": 9,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String className=typeBinding.getQualifiedName();\n",
            "startLine": 204,
            "endLine": 204,
            "startColumn": 9,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Assignment par=(Assignment)node.getParent();\n",
            "startLine": 218,
            "endLine": 218,
            "startColumn": 13,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Assignment par=(Assignment)node.getParent();\n",
            "startLine": 207,
            "endLine": 207,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> set=new HashSet<>();\n",
            "startLine": 239,
            "endLine": 239,
            "startColumn": 13,
            "endColumn": 51
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> set=new HashSet<>();\n",
            "startLine": 229,
            "endLine": 229,
            "startColumn": 13,
            "endColumn": 51
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> list=new ArrayList<>();\n",
            "startLine": 240,
            "endLine": 240,
            "startColumn": 13,
            "endColumn": 56
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> list=new ArrayList<>();\n",
            "startLine": 230,
            "endLine": 230,
            "startColumn": 13,
            "endColumn": 56
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.put(className,set);\n",
            "startLine": 243,
            "endLine": 243,
            "startColumn": 13,
            "endColumn": 47
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.put(className,set);\n",
            "startLine": 233,
            "endLine": 233,
            "startColumn": 13,
            "endColumn": 47
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.put(className,list);\n",
            "startLine": 244,
            "endLine": 244,
            "startColumn": 13,
            "endColumn": 49
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.put(className,list);\n",
            "startLine": 234,
            "endLine": 234,
            "startColumn": 13,
            "endColumn": 49
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.put(className,map);\n",
            "startLine": 250,
            "endLine": 250,
            "startColumn": 13,
            "endColumn": 53
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.put(className,map);\n",
            "startLine": 239,
            "endLine": 239,
            "startColumn": 13,
            "endColumn": 53
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 252,
            "endLine": 252,
            "startColumn": 9,
            "endColumn": 21
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 241,
            "endLine": 241,
            "startColumn": 9,
            "endColumn": 21
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 220,
            "endLine": 220,
            "startColumn": 17,
            "endColumn": 84
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList.add(className + \".\" + variableName);\n",
            "startLine": 209,
            "endLine": 209,
            "startColumn": 17,
            "endColumn": 71
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 225,
            "endLine": 225,
            "startColumn": 13,
            "endColumn": 79
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList.add(className + \".\" + variableName);\n",
            "startLine": 214,
            "endLine": 214,
            "startColumn": 13,
            "endColumn": 66
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 219,
            "endLine": 221,
            "startColumn": 75,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 208,
            "endLine": 210,
            "startColumn": 75,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 221,
            "endLine": 223,
            "startColumn": 20,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 210,
            "endLine": 212,
            "startColumn": 20,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,List<ExpressionLocationEntity>> map=new HashMap<>();\n",
            "startLine": 246,
            "endLine": 246,
            "startColumn": 13,
            "endColumn": 83
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,HashSet<ExpressionLocationEntity>> map=new HashMap<>();\n",
            "startLine": 235,
            "endLine": 235,
            "startColumn": 13,
            "endColumn": 86
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 222,
            "endLine": 222,
            "startColumn": 17,
            "endColumn": 83
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList.add(className + \".\" + variableName);\n",
            "startLine": 211,
            "endLine": 211,
            "startColumn": 17,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 224,
            "endLine": 226,
            "startColumn": 16,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 213,
            "endLine": 215,
            "startColumn": 16,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "map.put(variableBinding.getName(),new ArrayList<>());\n",
            "startLine": 247,
            "endLine": 247,
            "startColumn": 13,
            "endColumn": 67
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "map.put(variableName,set1);\n",
            "startLine": 238,
            "endLine": 238,
            "startColumn": 13,
            "endColumn": 41
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(!invocationLocations.get(className).containsKey(variableBinding.getName()))",
            "startLine": 233,
            "endLine": 235,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(!invocationLocations.get(className).containsKey(variableName))",
            "startLine": 223,
            "endLine": 225,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 238,
            "endLine": 251,
            "startColumn": 16,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 228,
            "endLine": 240,
            "startColumn": 16,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).put(variableBinding.getName(),new ArrayList<>());\n",
            "startLine": 234,
            "endLine": 234,
            "startColumn": 17,
            "endColumn": 102
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).put(variableName,new HashSet<>());\n",
            "startLine": 224,
            "endLine": 224,
            "startColumn": 17,
            "endColumn": 87
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 217,
            "endLine": 224,
            "startColumn": 50,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 206,
            "endLine": 213,
            "startColumn": 50,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 229,
            "endLine": 238,
            "startColumn": 51,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 219,
            "endLine": 228,
            "startColumn": 51,
            "endColumn": 10
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(variableBinding.getName());\n",
            "startLine": 242,
            "endLine": 242,
            "startColumn": 13,
            "endColumn": 49
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(variableName);\n",
            "startLine": 232,
            "endLine": 232,
            "startColumn": 13,
            "endColumn": 36
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 228,
            "endLine": 228,
            "startColumn": 9,
            "endColumn": 75
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableName);\n",
            "startLine": 218,
            "endLine": 218,
            "startColumn": 9,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "map.get(variableBinding.getName()).add(getLocationFromNode(cu,variableBinding.getName(),node));\n",
            "startLine": 248,
            "endLine": 248,
            "startColumn": 13,
            "endColumn": 110
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set1.add(getLocationFromNode(cu,variableName,node));\n",
            "startLine": 237,
            "endLine": 237,
            "startColumn": 13,
            "endColumn": 67
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 227,
            "endLine": 227,
            "startColumn": 9,
            "endColumn": 74
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableName);\n",
            "startLine": 217,
            "endLine": 217,
            "startColumn": 9,
            "endColumn": 61
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(variableBinding.getName());\n",
            "startLine": 230,
            "endLine": 230,
            "startColumn": 13,
            "endColumn": 73
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(variableName);\n",
            "startLine": 220,
            "endLine": 220,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(variableBinding.getName()).add(getLocationFromNode(cu,variableBinding.getName(),node));\n",
            "startLine": 236,
            "endLine": 236,
            "startColumn": 13,
            "endColumn": 141
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(variableName).add(getLocationFromNode(cu,variableName,node));\n",
            "startLine": 226,
            "endLine": 226,
            "startColumn": 13,
            "endColumn": 115
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(variableBinding.getName());\n",
            "startLine": 231,
            "endLine": 231,
            "startColumn": 13,
            "endColumn": 74
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(variableName);\n",
            "startLine": 221,
            "endLine": 221,
            "startColumn": 13,
            "endColumn": 61
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(variableBinding.getName());\n",
            "startLine": 241,
            "endLine": 241,
            "startColumn": 13,
            "endColumn": 48
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(variableName);\n",
            "startLine": 231,
            "endLine": 231,
            "startColumn": 13,
            "endColumn": 35
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 227,
            "endLine": 227,
            "startColumn": 9,
            "endColumn": 74
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(variableName);\n",
            "startLine": 220,
            "endLine": 220,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 227,
            "endLine": 227,
            "startColumn": 9,
            "endColumn": 74
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(variableName);\n",
            "startLine": 232,
            "endLine": 232,
            "startColumn": 13,
            "endColumn": 36
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 228,
            "endLine": 228,
            "startColumn": 9,
            "endColumn": 75
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(variableName);\n",
            "startLine": 221,
            "endLine": 221,
            "startColumn": 13,
            "endColumn": 61
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 228,
            "endLine": 228,
            "startColumn": 9,
            "endColumn": 75
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(variableName);\n",
            "startLine": 231,
            "endLine": 231,
            "startColumn": 13,
            "endColumn": 35
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(variableBinding.getName());\n",
            "startLine": 230,
            "endLine": 230,
            "startColumn": 13,
            "endColumn": 73
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(variableName).add(getLocationFromNode(cu,variableName,node));\n",
            "startLine": 226,
            "endLine": 226,
            "startColumn": 13,
            "endColumn": 115
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(variableBinding.getName());\n",
            "startLine": 231,
            "endLine": 231,
            "startColumn": 13,
            "endColumn": 74
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set1.add(getLocationFromNode(cu,variableName,node));\n",
            "startLine": 237,
            "endLine": 237,
            "startColumn": 13,
            "endColumn": 67
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(variableBinding.getName()).add(getLocationFromNode(cu,variableBinding.getName(),node));\n",
            "startLine": 236,
            "endLine": 236,
            "startColumn": 13,
            "endColumn": 141
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableName);\n",
            "startLine": 218,
            "endLine": 218,
            "startColumn": 9,
            "endColumn": 62
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(variableBinding.getName());\n",
            "startLine": 241,
            "endLine": 241,
            "startColumn": 13,
            "endColumn": 48
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableName);\n",
            "startLine": 217,
            "endLine": 217,
            "startColumn": 9,
            "endColumn": 61
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(variableBinding.getName());\n",
            "startLine": 242,
            "endLine": 242,
            "startColumn": 13,
            "endColumn": 49
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList.add(className + \".\" + variableName);\n",
            "startLine": 216,
            "endLine": 216,
            "startColumn": 9,
            "endColumn": 62
          },
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "url": "***/commit/4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "originalMethod": {
        "container": "metrics.MethodEntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 255,
        "endLine": 306,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "metrics.MethodEntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 244,
        "endLine": 296,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(node.resolveBinding() != null && node.resolveBinding() instanceof IVariableBinding)",
            "startLine": 258,
            "endLine": 259,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(node.resolveBinding() != null && node.resolveBinding() instanceof IVariableBinding)",
            "startLine": 247,
            "endLine": 248,
            "startColumn": 9,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableBinding=(IVariableBinding)node.resolveBinding();\n",
            "startLine": 259,
            "endLine": 259,
            "startColumn": 13,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableBinding=(IVariableBinding)node.resolveBinding();\n",
            "startLine": 248,
            "endLine": 248,
            "startColumn": 13,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(node.getQualifier().resolveBinding() != null && node.getQualifier().resolveBinding() instanceof IVariableBinding)",
            "startLine": 260,
            "endLine": 261,
            "startColumn": 9,
            "endColumn": 87
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(node.getQualifier().resolveBinding() != null && node.getQualifier().resolveBinding() instanceof IVariableBinding)",
            "startLine": 249,
            "endLine": 250,
            "startColumn": 9,
            "endColumn": 87
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableBinding=(IVariableBinding)node.getQualifier().resolveBinding();\n",
            "startLine": 261,
            "endLine": 261,
            "startColumn": 13,
            "endColumn": 87
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableBinding=(IVariableBinding)node.getQualifier().resolveBinding();\n",
            "startLine": 250,
            "endLine": 250,
            "startColumn": 13,
            "endColumn": 87
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding != null)",
            "startLine": 262,
            "endLine": 304,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding != null)",
            "startLine": 251,
            "endLine": 294,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding.isField())",
            "startLine": 263,
            "endLine": 303,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding.isField())",
            "startLine": 252,
            "endLine": 293,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null || !typeBinding.isFromSource())",
            "startLine": 265,
            "endLine": 266,
            "startColumn": 17,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null || !typeBinding.isFromSource())",
            "startLine": 254,
            "endLine": 255,
            "startColumn": 17,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 266,
            "endLine": 266,
            "startColumn": 21,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 255,
            "endLine": 255,
            "startColumn": 21,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(node.getParent().getNodeType() == 7)",
            "startLine": 268,
            "endLine": 277,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(node.getParent().getNodeType() == 7)",
            "startLine": 258,
            "endLine": 267,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(par.getLeftHandSide().toString().equals(node.toString()))",
            "startLine": 270,
            "endLine": 274,
            "startColumn": 21,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(par.getLeftHandSide().toString().equals(node.toString()))",
            "startLine": 260,
            "endLine": 264,
            "startColumn": 21,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationSet.containsKey(className))",
            "startLine": 280,
            "endLine": 302,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationSet.containsKey(className))",
            "startLine": 271,
            "endLine": 292,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding variableBinding=null;\n",
            "startLine": 257,
            "endLine": 257,
            "startColumn": 9,
            "endColumn": 49
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding variableBinding=null;\n",
            "startLine": 246,
            "endLine": 246,
            "startColumn": 9,
            "endColumn": 49
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=variableBinding.getDeclaringClass();\n",
            "startLine": 264,
            "endLine": 264,
            "startColumn": 17,
            "endColumn": 80
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=variableBinding.getDeclaringClass();\n",
            "startLine": 253,
            "endLine": 253,
            "startColumn": 17,
            "endColumn": 80
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String className=typeBinding.getQualifiedName();\n",
            "startLine": 267,
            "endLine": 267,
            "startColumn": 17,
            "endColumn": 67
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String className=typeBinding.getQualifiedName();\n",
            "startLine": 256,
            "endLine": 256,
            "startColumn": 17,
            "endColumn": 67
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Assignment par=(Assignment)node.getParent();\n",
            "startLine": 269,
            "endLine": 269,
            "startColumn": 21,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Assignment par=(Assignment)node.getParent();\n",
            "startLine": 259,
            "endLine": 259,
            "startColumn": 21,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> set=new HashSet<>();\n",
            "startLine": 290,
            "endLine": 290,
            "startColumn": 21,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> set=new HashSet<>();\n",
            "startLine": 281,
            "endLine": 281,
            "startColumn": 21,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> list=new ArrayList<>();\n",
            "startLine": 291,
            "endLine": 291,
            "startColumn": 21,
            "endColumn": 64
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> list=new ArrayList<>();\n",
            "startLine": 282,
            "endLine": 282,
            "startColumn": 21,
            "endColumn": 64
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.put(className,set);\n",
            "startLine": 294,
            "endLine": 294,
            "startColumn": 21,
            "endColumn": 55
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.put(className,set);\n",
            "startLine": 285,
            "endLine": 285,
            "startColumn": 21,
            "endColumn": 55
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.put(className,list);\n",
            "startLine": 295,
            "endLine": 295,
            "startColumn": 21,
            "endColumn": 57
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.put(className,list);\n",
            "startLine": 286,
            "endLine": 286,
            "startColumn": 21,
            "endColumn": 57
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.put(className,map);\n",
            "startLine": 301,
            "endLine": 301,
            "startColumn": 21,
            "endColumn": 61
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.put(className,map);\n",
            "startLine": 291,
            "endLine": 291,
            "startColumn": 21,
            "endColumn": 61
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 305,
            "endLine": 305,
            "startColumn": 9,
            "endColumn": 21
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 295,
            "endLine": 295,
            "startColumn": 9,
            "endColumn": 21
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).put(variableBinding.getName(),new ArrayList<>());\n",
            "startLine": 285,
            "endLine": 285,
            "startColumn": 25,
            "endColumn": 110
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).put(variableName,new HashSet<>());\n",
            "startLine": 276,
            "endLine": 276,
            "startColumn": 25,
            "endColumn": 95
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 284,
            "endLine": 286,
            "startColumn": 101,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 275,
            "endLine": 277,
            "startColumn": 88,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,List<ExpressionLocationEntity>> map=new HashMap<>();\n",
            "startLine": 297,
            "endLine": 297,
            "startColumn": 21,
            "endColumn": 91
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,HashSet<ExpressionLocationEntity>> map=new HashMap<>();\n",
            "startLine": 287,
            "endLine": 287,
            "startColumn": 21,
            "endColumn": 94
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 273,
            "endLine": 273,
            "startColumn": 25,
            "endColumn": 91
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList.add(className + \".\" + variableName);\n",
            "startLine": 263,
            "endLine": 263,
            "startColumn": 25,
            "endColumn": 78
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 280,
            "endLine": 289,
            "startColumn": 59,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 271,
            "endLine": 280,
            "startColumn": 59,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 272,
            "endLine": 274,
            "startColumn": 28,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 262,
            "endLine": 264,
            "startColumn": 28,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 271,
            "endLine": 271,
            "startColumn": 25,
            "endColumn": 92
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList.add(className + \".\" + variableName);\n",
            "startLine": 261,
            "endLine": 261,
            "startColumn": 25,
            "endColumn": 79
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 270,
            "endLine": 272,
            "startColumn": 83,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 260,
            "endLine": 262,
            "startColumn": 83,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 268,
            "endLine": 275,
            "startColumn": 58,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 258,
            "endLine": 265,
            "startColumn": 58,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 275,
            "endLine": 277,
            "startColumn": 24,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 265,
            "endLine": 267,
            "startColumn": 24,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "map.put(variableBinding.getName(),new ArrayList<>());\n",
            "startLine": 298,
            "endLine": 298,
            "startColumn": 21,
            "endColumn": 75
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "map.put(variableName,set1);\n",
            "startLine": 290,
            "endLine": 290,
            "startColumn": 21,
            "endColumn": 49
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 289,
            "endLine": 302,
            "startColumn": 24,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 280,
            "endLine": 292,
            "startColumn": 24,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 276,
            "endLine": 276,
            "startColumn": 21,
            "endColumn": 87
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList.add(className + \".\" + variableName);\n",
            "startLine": 266,
            "endLine": 266,
            "startColumn": 21,
            "endColumn": 74
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 278,
            "endLine": 278,
            "startColumn": 17,
            "endColumn": 82
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableName);\n",
            "startLine": 269,
            "endLine": 269,
            "startColumn": 17,
            "endColumn": 69
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(variableBinding.getName());\n",
            "startLine": 293,
            "endLine": 293,
            "startColumn": 21,
            "endColumn": 57
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(variableName);\n",
            "startLine": 284,
            "endLine": 284,
            "startColumn": 21,
            "endColumn": 44
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(variableBinding.getName());\n",
            "startLine": 292,
            "endLine": 292,
            "startColumn": 21,
            "endColumn": 56
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(variableName);\n",
            "startLine": 283,
            "endLine": 283,
            "startColumn": 21,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(variableBinding.getName()).add(getLocationFromNode(cu,variableBinding.getName(),node));\n",
            "startLine": 287,
            "endLine": 287,
            "startColumn": 21,
            "endColumn": 149
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(variableName).add(getLocationFromNode(cu,variableName,node));\n",
            "startLine": 278,
            "endLine": 278,
            "startColumn": 21,
            "endColumn": 123
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "map.get(variableBinding.getName()).add(getLocationFromNode(cu,variableBinding.getName(),node));\n",
            "startLine": 299,
            "endLine": 299,
            "startColumn": 21,
            "endColumn": 118
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set1.add(getLocationFromNode(cu,variableName,node));\n",
            "startLine": 289,
            "endLine": 289,
            "startColumn": 21,
            "endColumn": 75
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 279,
            "endLine": 279,
            "startColumn": 17,
            "endColumn": 83
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableName);\n",
            "startLine": 270,
            "endLine": 270,
            "startColumn": 17,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(variableBinding.getName());\n",
            "startLine": 281,
            "endLine": 281,
            "startColumn": 21,
            "endColumn": 81
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(variableName);\n",
            "startLine": 272,
            "endLine": 272,
            "startColumn": 21,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(variableBinding.getName());\n",
            "startLine": 282,
            "endLine": 282,
            "startColumn": 21,
            "endColumn": 82
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(variableName);\n",
            "startLine": 273,
            "endLine": 273,
            "startColumn": 21,
            "endColumn": 69
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 278,
            "endLine": 278,
            "startColumn": 17,
            "endColumn": 82
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(variableName);\n",
            "startLine": 272,
            "endLine": 272,
            "startColumn": 21,
            "endColumn": 68
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 278,
            "endLine": 278,
            "startColumn": 17,
            "endColumn": 82
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(variableName);\n",
            "startLine": 284,
            "endLine": 284,
            "startColumn": 21,
            "endColumn": 44
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 279,
            "endLine": 279,
            "startColumn": 17,
            "endColumn": 83
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(variableName);\n",
            "startLine": 273,
            "endLine": 273,
            "startColumn": 21,
            "endColumn": 69
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableBinding.getName());\n",
            "startLine": 279,
            "endLine": 279,
            "startColumn": 17,
            "endColumn": 83
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(variableName);\n",
            "startLine": 283,
            "endLine": 283,
            "startColumn": 21,
            "endColumn": 43
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.get(className).add(variableBinding.getName());\n",
            "startLine": 281,
            "endLine": 281,
            "startColumn": 21,
            "endColumn": 81
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(variableName).add(getLocationFromNode(cu,variableName,node));\n",
            "startLine": 278,
            "endLine": 278,
            "startColumn": 21,
            "endColumn": 123
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList.get(className).add(variableBinding.getName());\n",
            "startLine": 282,
            "endLine": 282,
            "startColumn": 21,
            "endColumn": 82
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set1.add(getLocationFromNode(cu,variableName,node));\n",
            "startLine": 289,
            "endLine": 289,
            "startColumn": 21,
            "endColumn": 75
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.get(className).get(variableBinding.getName()).add(getLocationFromNode(cu,variableBinding.getName(),node));\n",
            "startLine": 287,
            "endLine": 287,
            "startColumn": 21,
            "endColumn": 149
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList.add(className + \".\" + variableName);\n",
            "startLine": 270,
            "endLine": 270,
            "startColumn": 17,
            "endColumn": 70
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(variableBinding.getName());\n",
            "startLine": 292,
            "endLine": 292,
            "startColumn": 21,
            "endColumn": 56
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet.add(className + \".\" + variableName);\n",
            "startLine": 269,
            "endLine": 269,
            "startColumn": 17,
            "endColumn": 69
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "list.add(variableBinding.getName());\n",
            "startLine": 293,
            "endLine": 293,
            "startColumn": 21,
            "endColumn": 57
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList.add(className + \".\" + variableName);\n",
            "startLine": 268,
            "endLine": 268,
            "startColumn": 17,
            "endColumn": 70
          },
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "url": "***/commit/4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "originalMethod": {
        "container": "utils.MethodGetSetJudge",
        "type": "Method",
        "name": "judgeGetAndSet",
        "filePath": "Client/src/main/java/utils/MethodGetSetJudge.java",
        "startLine": 22,
        "endLine": 46,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "utils.MethodGetSetJudge",
        "type": "Method",
        "name": "judgeGetAndSet",
        "filePath": "Client/src/main/java/utils/MethodGetSetJudge.java",
        "startLine": 22,
        "endLine": 52,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null || methodBinding == null)",
            "startLine": 23,
            "endLine": 25,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null || methodBinding == null)",
            "startLine": 24,
            "endLine": 26,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 24,
            "endLine": 24,
            "startColumn": 13,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 25,
            "endLine": 25,
            "startColumn": 13,
            "endColumn": 26
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(getSetMap.containsKey(className))",
            "startLine": 28,
            "endLine": 45,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(getSetMap.containsKey(className))",
            "startLine": 30,
            "endLine": 51,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 28,
            "endLine": 33,
            "startColumn": 47,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 30,
            "endLine": 35,
            "startColumn": 47,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(getSetMap.get(className).contains(methodName))",
            "startLine": 29,
            "endLine": 31,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(getSetMap.get(className).contains(methodName))",
            "startLine": 31,
            "endLine": 33,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 30,
            "endLine": 30,
            "startColumn": 17,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 32,
            "endLine": 32,
            "startColumn": 17,
            "endColumn": 29
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 32,
            "endLine": 32,
            "startColumn": 13,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 34,
            "endLine": 34,
            "startColumn": 13,
            "endColumn": 26
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(set.contains(methodName))",
            "startLine": 41,
            "endLine": 43,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(set.contains(methodName))",
            "startLine": 47,
            "endLine": 49,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 17,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 17,
            "endColumn": 29
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String className=typeBinding.getQualifiedName();\n",
            "startLine": 26,
            "endLine": 26,
            "startColumn": 9,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String className=typeBinding.getQualifiedName();\n",
            "startLine": 28,
            "endLine": 28,
            "startColumn": 9,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String methodName=Utils.getMethodSignature(methodBinding);\n",
            "startLine": 27,
            "endLine": 27,
            "startColumn": 9,
            "endColumn": 69
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String methodName=Utils.getMethodSignature(methodBinding);\n",
            "startLine": 29,
            "endLine": 29,
            "startColumn": 9,
            "endColumn": 69
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> set=new HashSet<>();\n",
            "startLine": 34,
            "endLine": 34,
            "startColumn": 13,
            "endColumn": 51
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> set=new HashSet<>();\n",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 13,
            "endColumn": 51
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "getSetMap.put(className,set);\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 13,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "getSetMap.put(className,set);\n",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 13,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 44,
            "endLine": 44,
            "startColumn": 13,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 13,
            "endColumn": 26
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 33,
            "endLine": 45,
            "startColumn": 16,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 35,
            "endLine": 51,
            "startColumn": 16,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 35,
            "endLine": 39,
            "startColumn": 63,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 38,
            "endLine": 45,
            "startColumn": 70,
            "endColumn": 14
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 36,
            "endLine": 38,
            "startColumn": 61,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 39,
            "endLine": 41,
            "startColumn": 55,
            "endColumn": 18
          },
          "developerConfirmation": false
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(Utils.getMethodSignature(node.resolveBinding()));\n",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 21,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "set.add(Utils.getMethodSignature(declaration.resolveBinding()));\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 21,
            "endColumn": 85
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(isGetMethod(node) || isSetMethod(node))",
            "startLine": 36,
            "endLine": 38,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(isGetMethod(declaration) || isSetMethod(declaration))",
            "startLine": 42,
            "endLine": 44,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "url": "***/commit/4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "originalMethod": {
        "container": "metrics.MethodEntitySet",
        "type": "Method",
        "name": "MethodEntitySet",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 35,
        "endLine": 54,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "metrics.MethodEntitySet",
        "type": "Method",
        "name": "MethodEntitySet",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 33,
        "endLine": 50,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "Super Constructor Invocation",
            "expression": "super();\n",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 9,
            "endColumn": 17
          },
          "rightSideLocation": {
            "type": "Super Constructor Invocation",
            "expression": "super();\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 9,
            "endColumn": 17
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "name=\"MethodEntitySet\";\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 9,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "name=\"MethodEntitySet\";\n",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 9,
            "endColumn": 34
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.cu=cu;\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 9,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.cu=cu;\n",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 9,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=new HashSet<String>();\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 9,
            "endColumn": 49
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=new HashSet<String>();\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 9,
            "endColumn": 49
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList=new ArrayList<String>();\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 9,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList=new ArrayList<String>();\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 9,
            "endColumn": 52
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList=new ArrayList<String>();\n",
            "startLine": 44,
            "endLine": 44,
            "startColumn": 9,
            "endColumn": 53
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList=new ArrayList<String>();\n",
            "startLine": 41,
            "endLine": 41,
            "startColumn": 9,
            "endColumn": 53
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList=new ArrayList<String>();\n",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 9,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList=new ArrayList<String>();\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 9,
            "endColumn": 52
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=new HashMap<>();\n",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 9,
            "endColumn": 41
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=new HashMap<>();\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 9,
            "endColumn": 41
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=new HashMap<>();\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 9,
            "endColumn": 42
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=new HashMap<>();\n",
            "startLine": 44,
            "endLine": 44,
            "startColumn": 9,
            "endColumn": 42
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.methodDeclaration=methodDeclaration;\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 9,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.methodDeclaration=methodDeclaration;\n",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 9,
            "endColumn": 52
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.methodGetSetJudge=methodGetSetJudge;\n",
            "startLine": 49,
            "endLine": 49,
            "startColumn": 9,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.methodGetSetJudge=methodGetSetJudge;\n",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 9,
            "endColumn": 52
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "type=\"Feature Envy\";\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 9,
            "endColumn": 31
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "type=\"Feature Envy\";\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 9,
            "endColumn": 31
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "classPath=path;\n",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 9,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "classPath=path;\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 9,
            "endColumn": 26
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallList=new ArrayList<String>();\n",
            "startLine": 41,
            "endLine": 41,
            "startColumn": 9,
            "endColumn": 50
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList=new ArrayList<String>();\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 9,
            "endColumn": 52
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.classToMethodDeclaration=classToMethodDeclaration;\n",
            "startLine": 53,
            "endLine": 53,
            "startColumn": 9,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.classToDeclaration=classToDeclaration;\n",
            "startLine": 49,
            "endLine": 49,
            "startColumn": 9,
            "endColumn": 54
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "url": "***/commit/4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "originalMethod": {
        "container": "candidate.FeatureEnvyCandidate",
        "type": "Method",
        "name": "FeatureEnvyCandidate",
        "filePath": "Client/src/main/java/candidate/FeatureEnvyCandidate.java",
        "startLine": 34,
        "endLine": 268,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "candidate.FeatureEnvyCandidate",
        "type": "Method",
        "name": "FeatureEnvyCandidate",
        "filePath": "Client/src/main/java/candidate/FeatureEnvyCandidate.java",
        "startLine": 32,
        "endLine": 262,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "Try Statement",
            "expression": "try",
            "startLine": 37,
            "endLine": 260,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Try Statement",
            "expression": "try",
            "startLine": 35,
            "endLine": 254,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Catch Clause",
            "expression": "catch(e)",
            "startLine": 257,
            "endLine": 260,
            "startColumn": 31,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Catch Clause",
            "expression": "catch(e)",
            "startLine": 251,
            "endLine": 254,
            "startColumn": 31,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"Path: \" + sourceClassBinding.getQualifiedName() + \"::\"+ method.getName());\n",
            "startLine": 258,
            "endLine": 258,
            "startColumn": 13,
            "endColumn": 108
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"Path: \" + sourceClassBinding.getQualifiedName() + \"::\"+ method.getName());\n",
            "startLine": 252,
            "endLine": 252,
            "startColumn": 13,
            "endColumn": 108
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "e.printStackTrace();\n",
            "startLine": 259,
            "endLine": 259,
            "startColumn": 13,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "e.printStackTrace();\n",
            "startLine": 253,
            "endLine": 253,
            "startColumn": 13,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "While Statement",
            "expression": "while(iterator.hasNext())",
            "startLine": 56,
            "endLine": 103,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "While Statement",
            "expression": "while(iterator.hasNext())",
            "startLine": 53,
            "endLine": 100,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(StringUtils.isEmpty(targetClassName) || targetClassName.toLowerCase().endsWith(\"utils\") || targetClassName.toLowerCase().endsWith(\"util\"))",
            "startLine": 60,
            "endLine": 63,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(StringUtils.isEmpty(targetClassName) || targetClassName.toLowerCase().endsWith(\"utils\") || targetClassName.toLowerCase().endsWith(\"util\"))",
            "startLine": 57,
            "endLine": 60,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "iterator.remove();\n",
            "startLine": 61,
            "endLine": 61,
            "startColumn": 21,
            "endColumn": 39
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "iterator.remove();\n",
            "startLine": 58,
            "endLine": 58,
            "startColumn": 21,
            "endColumn": 39
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 62,
            "endLine": 62,
            "startColumn": 21,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 59,
            "endLine": 59,
            "startColumn": 21,
            "endColumn": 30
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(methodBinding: methodBindings)",
            "startLine": 69,
            "endLine": 82,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(methodBinding: methodBindings)",
            "startLine": 66,
            "endLine": 79,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isStatic(methodBinding.getModifiers()))",
            "startLine": 70,
            "endLine": 73,
            "startColumn": 21,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isStatic(methodBinding.getModifiers()))",
            "startLine": 67,
            "endLine": 70,
            "startColumn": 21,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "static_cnt+=1;\n",
            "startLine": 71,
            "endLine": 71,
            "startColumn": 25,
            "endColumn": 41
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "static_cnt+=1;\n",
            "startLine": 68,
            "endLine": 68,
            "startColumn": 25,
            "endColumn": 41
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(variableBinding: variableBindings)",
            "startLine": 84,
            "endLine": 93,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(variableBinding: variableBindings)",
            "startLine": 81,
            "endLine": 90,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isEnum(variableBinding.getModifiers()))",
            "startLine": 85,
            "endLine": 87,
            "startColumn": 21,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isEnum(variableBinding.getModifiers()))",
            "startLine": 82,
            "endLine": 84,
            "startColumn": 21,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 86,
            "endLine": 86,
            "startColumn": 25,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 83,
            "endLine": 83,
            "startColumn": 25,
            "endColumn": 34
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isStatic(variableBinding.getModifiers()))",
            "startLine": 88,
            "endLine": 90,
            "startColumn": 21,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isStatic(variableBinding.getModifiers()))",
            "startLine": 85,
            "endLine": 87,
            "startColumn": 21,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "static_cnt+=1;\n",
            "startLine": 89,
            "endLine": 89,
            "startColumn": 25,
            "endColumn": 41
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "static_cnt+=1;\n",
            "startLine": 86,
            "endLine": 86,
            "startColumn": 25,
            "endColumn": 41
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "field_cnt++;\n",
            "startLine": 91,
            "endLine": 91,
            "startColumn": 21,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "field_cnt++;\n",
            "startLine": 88,
            "endLine": 88,
            "startColumn": 21,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(method_cnt == 0)",
            "startLine": 95,
            "endLine": 98,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(method_cnt == 0)",
            "startLine": 92,
            "endLine": 95,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "iterator.remove();\n",
            "startLine": 96,
            "endLine": 96,
            "startColumn": 21,
            "endColumn": 39
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "iterator.remove();\n",
            "startLine": 93,
            "endLine": 93,
            "startColumn": 21,
            "endColumn": 39
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 97,
            "endLine": 97,
            "startColumn": 21,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 21,
            "endColumn": 30
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(targetClassExpressions.size() == 0 || sourceClassBinding == null)",
            "startLine": 106,
            "endLine": 109,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(targetClassExpressions.size() == 0 || sourceClassBinding == null)",
            "startLine": 103,
            "endLine": 106,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=false;\n",
            "startLine": 107,
            "endLine": 107,
            "startColumn": 17,
            "endColumn": 31
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=false;\n",
            "startLine": 104,
            "endLine": 104,
            "startColumn": 17,
            "endColumn": 31
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return;\n",
            "startLine": 108,
            "endLine": 108,
            "startColumn": 17,
            "endColumn": 24
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return;\n",
            "startLine": 105,
            "endLine": 105,
            "startColumn": 17,
            "endColumn": 24
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(binding: targetClassExpressions)",
            "startLine": 164,
            "endLine": 166,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(binding: targetClassExpressions)",
            "startLine": 159,
            "endLine": 161,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "names.add(binding.getQualifiedName());\n",
            "startLine": 165,
            "endLine": 165,
            "startColumn": 17,
            "endColumn": 55
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "names.add(binding.getQualifiedName());\n",
            "startLine": 160,
            "endLine": 160,
            "startColumn": 17,
            "endColumn": 55
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "For Statement",
            "expression": "for(Iterator<Map.Entry<String,ArrayList<String>>> it=invocationList.entrySet().iterator(); it.hasNext(); )",
            "startLine": 168,
            "endLine": 194,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "For Statement",
            "expression": "for(Iterator<Map.Entry<String,ArrayList<String>>> it=invocationList.entrySet().iterator(); it.hasNext(); )",
            "startLine": 163,
            "endLine": 189,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Map.Entry<String,ArrayList<String>> item=it.next();\n",
            "startLine": 169,
            "endLine": 169,
            "startColumn": 17,
            "endColumn": 71
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Map.Entry<String,ArrayList<String>> item=it.next();\n",
            "startLine": 164,
            "endLine": 164,
            "startColumn": 17,
            "endColumn": 71
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=item.getKey();\n",
            "startLine": 170,
            "endLine": 170,
            "startColumn": 17,
            "endColumn": 56
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=item.getKey();\n",
            "startLine": 165,
            "endLine": 165,
            "startColumn": 17,
            "endColumn": 56
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(targetClassName.equals(sourceClassName))",
            "startLine": 171,
            "endLine": 173,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(targetClassName.equals(sourceClassName))",
            "startLine": 166,
            "endLine": 168,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 172,
            "endLine": 172,
            "startColumn": 21,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 167,
            "endLine": 167,
            "startColumn": 21,
            "endColumn": 30
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(!names.contains(targetClassName))",
            "startLine": 174,
            "endLine": 179,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(!names.contains(targetClassName))",
            "startLine": 169,
            "endLine": 174,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "it.remove();\n",
            "startLine": 175,
            "endLine": 175,
            "startColumn": 21,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "it.remove();\n",
            "startLine": 170,
            "endLine": 170,
            "startColumn": 21,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.remove(targetClassName);\n",
            "startLine": 176,
            "endLine": 176,
            "startColumn": 21,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.remove(targetClassName);\n",
            "startLine": 171,
            "endLine": 171,
            "startColumn": 21,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.remove(targetClassName);\n",
            "startLine": 177,
            "endLine": 177,
            "startColumn": 21,
            "endColumn": 65
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.remove(targetClassName);\n",
            "startLine": 172,
            "endLine": 172,
            "startColumn": 21,
            "endColumn": 65
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 178,
            "endLine": 178,
            "startColumn": 21,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Continue Statement",
            "expression": "continue;\n",
            "startLine": 173,
            "endLine": 173,
            "startColumn": 21,
            "endColumn": 30
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(item.getValue().size() >= 2)",
            "startLine": 187,
            "endLine": 193,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(item.getValue().size() >= 2)",
            "startLine": 182,
            "endLine": 188,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 187,
            "endLine": 189,
            "startColumn": 50,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 182,
            "endLine": 184,
            "startColumn": 50,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "validTargetClass.add(targetClassName);\n",
            "startLine": 188,
            "endLine": 188,
            "startColumn": 21,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "validTargetClass.add(targetClassName);\n",
            "startLine": 183,
            "endLine": 183,
            "startColumn": 21,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 189,
            "endLine": 193,
            "startColumn": 24,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 184,
            "endLine": 188,
            "startColumn": 24,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "it.remove();\n",
            "startLine": 190,
            "endLine": 190,
            "startColumn": 21,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "it.remove();\n",
            "startLine": 185,
            "endLine": 185,
            "startColumn": 21,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.remove(targetClassName);\n",
            "startLine": 191,
            "endLine": 191,
            "startColumn": 21,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.remove(targetClassName);\n",
            "startLine": 186,
            "endLine": 186,
            "startColumn": 21,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.remove(targetClassName);\n",
            "startLine": 192,
            "endLine": 192,
            "startColumn": 21,
            "endColumn": 65
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations.remove(targetClassName);\n",
            "startLine": 187,
            "endLine": 187,
            "startColumn": 21,
            "endColumn": 65
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationLocations.containsKey(sourceClassName) && invocationLocations.size() == 1)",
            "startLine": 196,
            "endLine": 199,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationLocations.containsKey(sourceClassName) && invocationLocations.size() == 1)",
            "startLine": 191,
            "endLine": 194,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=false;\n",
            "startLine": 197,
            "endLine": 197,
            "startColumn": 17,
            "endColumn": 31
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=false;\n",
            "startLine": 192,
            "endLine": 192,
            "startColumn": 17,
            "endColumn": 31
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return;\n",
            "startLine": 198,
            "endLine": 198,
            "startColumn": 17,
            "endColumn": 24
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return;\n",
            "startLine": 193,
            "endLine": 193,
            "startColumn": 17,
            "endColumn": 24
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationLocations.containsKey(sourceClassName))",
            "startLine": 201,
            "endLine": 207,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationLocations.containsKey(sourceClassName))",
            "startLine": 196,
            "endLine": 202,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 201,
            "endLine": 205,
            "startColumn": 67,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 196,
            "endLine": 200,
            "startColumn": 67,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfSourceClass=invocationLocations.get(sourceClassName);\n",
            "startLine": 202,
            "endLine": 202,
            "startColumn": 17,
            "endColumn": 77
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfSourceClass=invocationLocations.get(sourceClassName);\n",
            "startLine": 197,
            "endLine": 197,
            "startColumn": 17,
            "endColumn": 77
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfTargetClasses=invocationLocations;\n",
            "startLine": 203,
            "endLine": 203,
            "startColumn": 17,
            "endColumn": 58
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfTargetClasses=invocationLocations;\n",
            "startLine": 198,
            "endLine": 198,
            "startColumn": 17,
            "endColumn": 58
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfTargetClasses.remove(sourceClassName);\n",
            "startLine": 204,
            "endLine": 204,
            "startColumn": 17,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfTargetClasses.remove(sourceClassName);\n",
            "startLine": 199,
            "endLine": 199,
            "startColumn": 17,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 205,
            "endLine": 207,
            "startColumn": 20,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 200,
            "endLine": 202,
            "startColumn": 20,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfTargetClasses=invocationLocations;\n",
            "startLine": 206,
            "endLine": 206,
            "startColumn": 17,
            "endColumn": 58
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfTargetClasses=invocationLocations;\n",
            "startLine": 201,
            "endLine": 201,
            "startColumn": 17,
            "endColumn": 58
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(targetClassBinding: targetClassExpressions)",
            "startLine": 215,
            "endLine": 245,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(targetClassBinding: targetClassExpressions)",
            "startLine": 210,
            "endLine": 239,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(validTargetClass.contains(targetClassName))",
            "startLine": 218,
            "endLine": 244,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(validTargetClass.contains(targetClassName))",
            "startLine": 213,
            "endLine": 238,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(targetNames.size() == 0)",
            "startLine": 247,
            "endLine": 250,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(targetNames.size() == 0)",
            "startLine": 241,
            "endLine": 244,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=false;\n",
            "startLine": 248,
            "endLine": 248,
            "startColumn": 17,
            "endColumn": 31
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=false;\n",
            "startLine": 242,
            "endLine": 242,
            "startColumn": 17,
            "endColumn": 31
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return;\n",
            "startLine": 249,
            "endLine": 249,
            "startColumn": 17,
            "endColumn": 24
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return;\n",
            "startLine": 243,
            "endLine": 243,
            "startColumn": 17,
            "endColumn": 24
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 76,
            "endLine": 78,
            "startColumn": 144,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 73,
            "endLine": 75,
            "startColumn": 138,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "method_cnt++;\n",
            "startLine": 77,
            "endLine": 77,
            "startColumn": 25,
            "endColumn": 38
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "method_cnt++;\n",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 25,
            "endColumn": 38
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 100,
            "endLine": 102,
            "startColumn": 92,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 97,
            "endLine": 99,
            "startColumn": 138,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "iterator.remove();\n",
            "startLine": 101,
            "endLine": 101,
            "startColumn": 21,
            "endColumn": 39
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "iterator.remove();\n",
            "startLine": 98,
            "endLine": 98,
            "startColumn": 21,
            "endColumn": 39
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Super Constructor Invocation",
            "expression": "super();\n",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 9,
            "endColumn": 17
          },
          "rightSideLocation": {
            "type": "Super Constructor Invocation",
            "expression": "super();\n",
            "startLine": 34,
            "endLine": 34,
            "startColumn": 9,
            "endColumn": 17
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.cu=cu;\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 13,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.cu=cu;\n",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 13,
            "endColumn": 26
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.method=method;\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 13,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.method=method;\n",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 13,
            "endColumn": 34
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.methodGetSetJudge=methodGetSetJudge;\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 13,
            "endColumn": 56
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.methodGetSetJudge=methodGetSetJudge;\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 13,
            "endColumn": 56
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=new HashSet<>();\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 13,
            "endColumn": 47
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=new HashSet<>();\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 13,
            "endColumn": 47
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=new HashMap<>();\n",
            "startLine": 44,
            "endLine": 44,
            "startColumn": 13,
            "endColumn": 45
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=new HashMap<>();\n",
            "startLine": 41,
            "endLine": 41,
            "startColumn": 13,
            "endColumn": 45
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=new HashMap<>();\n",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 13,
            "endColumn": 46
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=new HashMap<>();\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 13,
            "endColumn": 46
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "validTargetClass=new HashSet<>();\n",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 13,
            "endColumn": 48
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "validTargetClass=new HashSet<>();\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 13,
            "endColumn": 48
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations=new HashMap<>();\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 13,
            "endColumn": 51
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations=new HashMap<>();\n",
            "startLine": 44,
            "endLine": 44,
            "startColumn": 13,
            "endColumn": 51
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfSourceClass=new HashMap<>();\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 13,
            "endColumn": 48
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfSourceClass=new HashMap<>();\n",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 13,
            "endColumn": 48
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfTargetClasses=new HashMap<>();\n",
            "startLine": 49,
            "endLine": 49,
            "startColumn": 13,
            "endColumn": 50
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "setOfTargetClasses=new HashMap<>();\n",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 13,
            "endColumn": 50
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "sourceClassBinding=null;\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 13,
            "endColumn": 39
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "sourceClassBinding=null;\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 13,
            "endColumn": 39
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=true;\n",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 13,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=true;\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 13,
            "endColumn": 26
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<ITypeBinding> targetClassExpressions=parseTargetCandidate();\n",
            "startLine": 53,
            "endLine": 53,
            "startColumn": 13,
            "endColumn": 83
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<ITypeBinding> targetClassExpressions=parseTargetCandidate();\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 13,
            "endColumn": 83
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Iterator<ITypeBinding> iterator=targetClassExpressions.iterator();\n",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 13,
            "endColumn": 81
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Iterator<ITypeBinding> iterator=targetClassExpressions.iterator();\n",
            "startLine": 52,
            "endLine": 52,
            "startColumn": 13,
            "endColumn": 81
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=iterator.next();\n",
            "startLine": 57,
            "endLine": 57,
            "startColumn": 17,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=iterator.next();\n",
            "startLine": 54,
            "endLine": 54,
            "startColumn": 17,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=typeBinding.getQualifiedName();\n",
            "startLine": 58,
            "endLine": 58,
            "startColumn": 17,
            "endColumn": 73
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=typeBinding.getQualifiedName();\n",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 17,
            "endColumn": 73
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IMethodBinding[] methodBindings=typeBinding.getDeclaredMethods();\n",
            "startLine": 64,
            "endLine": 64,
            "startColumn": 17,
            "endColumn": 84
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IMethodBinding[] methodBindings=typeBinding.getDeclaredMethods();\n",
            "startLine": 61,
            "endLine": 61,
            "startColumn": 17,
            "endColumn": 84
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding[] variableBindings=typeBinding.getDeclaredFields();\n",
            "startLine": 65,
            "endLine": 65,
            "startColumn": 17,
            "endColumn": 87
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding[] variableBindings=typeBinding.getDeclaredFields();\n",
            "startLine": 62,
            "endLine": 62,
            "startColumn": 17,
            "endColumn": 87
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int static_cnt=0;\n",
            "startLine": 66,
            "endLine": 66,
            "startColumn": 17,
            "endColumn": 36
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int static_cnt=0;\n",
            "startLine": 63,
            "endLine": 63,
            "startColumn": 17,
            "endColumn": 36
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int method_cnt=0;\n",
            "startLine": 67,
            "endLine": 67,
            "startColumn": 17,
            "endColumn": 36
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int method_cnt=0;\n",
            "startLine": 64,
            "endLine": 64,
            "startColumn": 17,
            "endColumn": 36
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int field_cnt=0;\n",
            "startLine": 68,
            "endLine": 68,
            "startColumn": 17,
            "endColumn": 35
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int field_cnt=0;\n",
            "startLine": 65,
            "endLine": 65,
            "startColumn": 17,
            "endColumn": 35
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int mainCodeSmellLine=this.cu.getLineNumber(this.method.getName().getStartPosition());\n",
            "startLine": 111,
            "endLine": 111,
            "startColumn": 13,
            "endColumn": 101
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int mainCodeSmellLine=this.cu.getLineNumber(this.method.getName().getStartPosition());\n",
            "startLine": 108,
            "endLine": 108,
            "startColumn": 13,
            "endColumn": 101
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String sourceClassName=sourceClassBinding.getQualifiedName();\n",
            "startLine": 112,
            "endLine": 112,
            "startColumn": 13,
            "endColumn": 76
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String sourceClassName=sourceClassBinding.getQualifiedName();\n",
            "startLine": 109,
            "endLine": 109,
            "startColumn": 13,
            "endColumn": 76
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "TypeEntitySet sourceClassMetric=new TypeEntitySet(sourceClassBinding);\n",
            "startLine": 114,
            "endLine": 114,
            "startColumn": 13,
            "endColumn": 85
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "TypeEntitySet sourceClassMetric=new TypeEntitySet(sourceClassBinding);\n",
            "startLine": 111,
            "endLine": 111,
            "startColumn": 13,
            "endColumn": 85
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "sourceClassMetric.calculate();\n",
            "startLine": 115,
            "endLine": 115,
            "startColumn": 13,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "sourceClassMetric.calculate();\n",
            "startLine": 112,
            "endLine": 112,
            "startColumn": 13,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> sourceClassEntitySet=(HashSet<String>)sourceClassMetric.getMetrics().get(sourceClassMetric.getName());\n",
            "startLine": 116,
            "endLine": 116,
            "startColumn": 13,
            "endColumn": 134
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> sourceClassEntitySet=(HashSet<String>)sourceClassMetric.getMetrics().get(sourceClassMetric.getName());\n",
            "startLine": 113,
            "endLine": 113,
            "startColumn": 13,
            "endColumn": 134
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodMetric.calculate();\n",
            "startLine": 120,
            "endLine": 120,
            "startColumn": 13,
            "endColumn": 38
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodMetric.calculate();\n",
            "startLine": 117,
            "endLine": 117,
            "startColumn": 13,
            "endColumn": 38
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=(HashSet<String>)methodMetric.getMetrics().get(\"MethodEntitySet\");\n",
            "startLine": 126,
            "endLine": 126,
            "startColumn": 13,
            "endColumn": 98
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=(HashSet<String>)methodMetric.getMetrics().get(\"MethodEntitySet\");\n",
            "startLine": 121,
            "endLine": 121,
            "startColumn": 13,
            "endColumn": 98
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=(HashMap<String,HashSet<String>>)methodMetric.getMetrics().get(\"InvocationSet\");\n",
            "startLine": 128,
            "endLine": 128,
            "startColumn": 13,
            "endColumn": 111
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=(HashMap<String,HashSet<String>>)methodMetric.getMetrics().get(\"InvocationSet\");\n",
            "startLine": 123,
            "endLine": 123,
            "startColumn": 13,
            "endColumn": 111
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=(HashMap<String,ArrayList<String>>)methodMetric.getMetrics().get(\"InvocationList\");\n",
            "startLine": 130,
            "endLine": 130,
            "startColumn": 13,
            "endColumn": 115
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=(HashMap<String,ArrayList<String>>)methodMetric.getMetrics().get(\"InvocationList\");\n",
            "startLine": 125,
            "endLine": 125,
            "startColumn": 13,
            "endColumn": 115
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JDeodorantDistance jddSource=new JDeodorantDistance(methodEntitySet,sourceClassEntitySet);\n",
            "startLine": 136,
            "endLine": 136,
            "startColumn": 13,
            "endColumn": 106
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JDeodorantDistance jddSource=new JDeodorantDistance(methodEntitySet,sourceClassEntitySet);\n",
            "startLine": 131,
            "endLine": 131,
            "startColumn": 13,
            "endColumn": 106
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "jddSource.calculate();\n",
            "startLine": 137,
            "endLine": 137,
            "startColumn": 13,
            "endColumn": 35
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "jddSource.calculate();\n",
            "startLine": 132,
            "endLine": 132,
            "startColumn": 13,
            "endColumn": 35
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "cboSource.calculate();\n",
            "startLine": 140,
            "endLine": 140,
            "startColumn": 13,
            "endColumn": 35
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "cboSource.calculate();\n",
            "startLine": 135,
            "endLine": 135,
            "startColumn": 13,
            "endColumn": 35
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "mpcSource.calculate();\n",
            "startLine": 143,
            "endLine": 143,
            "startColumn": 13,
            "endColumn": 35
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "mpcSource.calculate();\n",
            "startLine": 138,
            "endLine": 138,
            "startColumn": 13,
            "endColumn": 35
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName enSource=new EntityName(sourceClassBinding);\n",
            "startLine": 145,
            "endLine": 145,
            "startColumn": 13,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName enSource=new EntityName(sourceClassBinding);\n",
            "startLine": 140,
            "endLine": 140,
            "startColumn": 13,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "enSource.calculate();\n",
            "startLine": 146,
            "endLine": 146,
            "startColumn": 13,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "enSource.calculate();\n",
            "startLine": 141,
            "endLine": 141,
            "startColumn": 13,
            "endColumn": 34
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName fnSourceMethod=new EntityName(method);\n",
            "startLine": 148,
            "endLine": 148,
            "startColumn": 13,
            "endColumn": 64
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName fnSourceMethod=new EntityName(method);\n",
            "startLine": 143,
            "endLine": 143,
            "startColumn": 13,
            "endColumn": 64
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "fnSourceMethod.calculate();\n",
            "startLine": 149,
            "endLine": 149,
            "startColumn": 13,
            "endColumn": 40
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "fnSourceMethod.calculate();\n",
            "startLine": 144,
            "endLine": 144,
            "startColumn": 13,
            "endColumn": 40
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"methodName\",method.getName().toString());\n",
            "startLine": 151,
            "endLine": 151,
            "startColumn": 13,
            "endColumn": 69
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"methodName\",method.getName().toString());\n",
            "startLine": 146,
            "endLine": 146,
            "startColumn": 13,
            "endColumn": 69
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceClassName\",sourceClassName);\n",
            "startLine": 152,
            "endLine": 152,
            "startColumn": 13,
            "endColumn": 62
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceClassName\",sourceClassName);\n",
            "startLine": 147,
            "endLine": 147,
            "startColumn": 13,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceMPCDistance\",mpcSource.getMetrics().get(mpcSource.getName()));\n",
            "startLine": 153,
            "endLine": 153,
            "startColumn": 13,
            "endColumn": 96
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceMPCDistance\",mpcSource.getMetrics().get(mpcSource.getName()));\n",
            "startLine": 148,
            "endLine": 148,
            "startColumn": 13,
            "endColumn": 96
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceDistance\",jddSource.getMetrics().get(jddSource.getName()));\n",
            "startLine": 154,
            "endLine": 154,
            "startColumn": 13,
            "endColumn": 93
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceDistance\",jddSource.getMetrics().get(jddSource.getName()));\n",
            "startLine": 149,
            "endLine": 149,
            "startColumn": 13,
            "endColumn": 93
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceCBODistance\",cboSource.getMetrics().get(cboSource.getName()));\n",
            "startLine": 155,
            "endLine": 155,
            "startColumn": 13,
            "endColumn": 96
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceCBODistance\",cboSource.getMetrics().get(cboSource.getName()));\n",
            "startLine": 150,
            "endLine": 150,
            "startColumn": 13,
            "endColumn": 96
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceMethodNames\",enSource.getMetrics().get(enSource.getName()));\n",
            "startLine": 156,
            "endLine": 156,
            "startColumn": 13,
            "endColumn": 94
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceMethodNames\",enSource.getMetrics().get(enSource.getName()));\n",
            "startLine": 151,
            "endLine": 151,
            "startColumn": 13,
            "endColumn": 94
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"fieldsOfMethod\",fnSourceMethod.getMetrics().get(fnSourceMethod.getName()));\n",
            "startLine": 157,
            "endLine": 157,
            "startColumn": 13,
            "endColumn": 103
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"fieldsOfMethod\",fnSourceMethod.getMetrics().get(fnSourceMethod.getName()));\n",
            "startLine": 152,
            "endLine": 152,
            "startColumn": 13,
            "endColumn": 103
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"mainCodeSmellLine\",String.valueOf(mainCodeSmellLine));\n",
            "startLine": 158,
            "endLine": 158,
            "startColumn": 13,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"mainCodeSmellLine\",String.valueOf(mainCodeSmellLine));\n",
            "startLine": 153,
            "endLine": 153,
            "startColumn": 13,
            "endColumn": 78
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"Path\",sourcePath);\n",
            "startLine": 159,
            "endLine": 159,
            "startColumn": 13,
            "endColumn": 42
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"Path\",sourcePath);\n",
            "startLine": 154,
            "endLine": 154,
            "startColumn": 13,
            "endColumn": 42
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"SourceClass\",sourceClassName);\n",
            "startLine": 160,
            "endLine": 160,
            "startColumn": 13,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"SourceClass\",sourceClassName);\n",
            "startLine": 155,
            "endLine": 155,
            "startColumn": 13,
            "endColumn": 54
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"Method\",Utils.getMethodSignature(method));\n",
            "startLine": 161,
            "endLine": 161,
            "startColumn": 13,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"Method\",Utils.getMethodSignature(method));\n",
            "startLine": 156,
            "endLine": 156,
            "startColumn": 13,
            "endColumn": 66
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> names=new HashSet<>();\n",
            "startLine": 163,
            "endLine": 163,
            "startColumn": 13,
            "endColumn": 53
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> names=new HashSet<>();\n",
            "startLine": 158,
            "endLine": 158,
            "startColumn": 13,
            "endColumn": 53
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> targetNames=new ArrayList<String>();\n",
            "startLine": 209,
            "endLine": 209,
            "startColumn": 13,
            "endColumn": 69
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> targetNames=new ArrayList<String>();\n",
            "startLine": 204,
            "endLine": 204,
            "startColumn": 13,
            "endColumn": 69
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetDistances=new ArrayList<Double>();\n",
            "startLine": 210,
            "endLine": 210,
            "startColumn": 13,
            "endColumn": 73
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetDistances=new ArrayList<Double>();\n",
            "startLine": 205,
            "endLine": 205,
            "startColumn": 13,
            "endColumn": 73
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetCBODistances=new ArrayList<Double>();\n",
            "startLine": 211,
            "endLine": 211,
            "startColumn": 13,
            "endColumn": 76
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetCBODistances=new ArrayList<Double>();\n",
            "startLine": 206,
            "endLine": 206,
            "startColumn": 13,
            "endColumn": 76
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetMPCDistances=new ArrayList<>();\n",
            "startLine": 212,
            "endLine": 212,
            "startColumn": 13,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetMPCDistances=new ArrayList<>();\n",
            "startLine": 207,
            "endLine": 207,
            "startColumn": 13,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<HashSet<String>> targetMethodNames=new ArrayList<>();\n",
            "startLine": 213,
            "endLine": 213,
            "startColumn": 13,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<HashSet<String>> targetMethodNames=new ArrayList<>();\n",
            "startLine": 208,
            "endLine": 208,
            "startColumn": 13,
            "endColumn": 78
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=targetClassBinding.getQualifiedName();\n",
            "startLine": 217,
            "endLine": 217,
            "startColumn": 17,
            "endColumn": 80
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=targetClassBinding.getQualifiedName();\n",
            "startLine": 212,
            "endLine": 212,
            "startColumn": 17,
            "endColumn": 80
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "TypeEntitySet targetClassMetric=new TypeEntitySet(targetClassBinding);\n",
            "startLine": 220,
            "endLine": 220,
            "startColumn": 21,
            "endColumn": 93
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "TypeEntitySet targetClassMetric=new TypeEntitySet(targetClassBinding);\n",
            "startLine": 215,
            "endLine": 215,
            "startColumn": 21,
            "endColumn": 93
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClassMetric.calculate();\n",
            "startLine": 221,
            "endLine": 221,
            "startColumn": 21,
            "endColumn": 51
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClassMetric.calculate();\n",
            "startLine": 216,
            "endLine": 216,
            "startColumn": 21,
            "endColumn": 51
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> targetClassEntitySet=(HashSet<String>)targetClassMetric.getMetrics().get(targetClassMetric.getName());\n",
            "startLine": 222,
            "endLine": 222,
            "startColumn": 21,
            "endColumn": 142
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> targetClassEntitySet=(HashSet<String>)targetClassMetric.getMetrics().get(targetClassMetric.getName());\n",
            "startLine": 217,
            "endLine": 217,
            "startColumn": 21,
            "endColumn": 142
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetNames.add(targetClassName);\n",
            "startLine": 223,
            "endLine": 223,
            "startColumn": 21,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetNames.add(targetClassName);\n",
            "startLine": 218,
            "endLine": 218,
            "startColumn": 21,
            "endColumn": 54
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JDeodorantDistance jddTarget=new JDeodorantDistance(methodEntitySet,targetClassEntitySet);\n",
            "startLine": 225,
            "endLine": 225,
            "startColumn": 21,
            "endColumn": 114
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JDeodorantDistance jddTarget=new JDeodorantDistance(methodEntitySet,targetClassEntitySet);\n",
            "startLine": 220,
            "endLine": 220,
            "startColumn": 21,
            "endColumn": 114
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "jddTarget.calculate();\n",
            "startLine": 226,
            "endLine": 226,
            "startColumn": 21,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "jddTarget.calculate();\n",
            "startLine": 221,
            "endLine": 221,
            "startColumn": 21,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetDistances.add((Double)jddTarget.getMetrics().get(jddTarget.getName()));\n",
            "startLine": 227,
            "endLine": 227,
            "startColumn": 21,
            "endColumn": 99
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetDistances.add((Double)jddTarget.getMetrics().get(jddTarget.getName()));\n",
            "startLine": 222,
            "endLine": 222,
            "startColumn": 21,
            "endColumn": 99
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "cboTarget.calculate();\n",
            "startLine": 230,
            "endLine": 230,
            "startColumn": 21,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "cboTarget.calculate();\n",
            "startLine": 225,
            "endLine": 225,
            "startColumn": 21,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetCBODistances.add((Double)cboTarget.getMetrics().get(cboTarget.getName()));\n",
            "startLine": 231,
            "endLine": 231,
            "startColumn": 21,
            "endColumn": 102
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetCBODistances.add((Double)cboTarget.getMetrics().get(cboTarget.getName()));\n",
            "startLine": 226,
            "endLine": 226,
            "startColumn": 21,
            "endColumn": 102
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "mpcTarget.calculate();\n",
            "startLine": 234,
            "endLine": 234,
            "startColumn": 21,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "mpcTarget.calculate();\n",
            "startLine": 229,
            "endLine": 229,
            "startColumn": 21,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetMPCDistances.add((Double)mpcTarget.getMetrics().get(mpcTarget.getName()));\n",
            "startLine": 235,
            "endLine": 235,
            "startColumn": 21,
            "endColumn": 102
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetMPCDistances.add((Double)mpcTarget.getMetrics().get(mpcTarget.getName()));\n",
            "startLine": 230,
            "endLine": 230,
            "startColumn": 21,
            "endColumn": 102
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName enTarget=new EntityName(targetClassBinding);\n",
            "startLine": 237,
            "endLine": 237,
            "startColumn": 21,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName enTarget=new EntityName(targetClassBinding);\n",
            "startLine": 232,
            "endLine": 232,
            "startColumn": 21,
            "endColumn": 78
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "enTarget.calculate();\n",
            "startLine": 238,
            "endLine": 238,
            "startColumn": 21,
            "endColumn": 42
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "enTarget.calculate();\n",
            "startLine": 233,
            "endLine": 233,
            "startColumn": 21,
            "endColumn": 42
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetMethodNames.add((HashSet<String>)enTarget.getMetrics().get(enTarget.getName()));\n",
            "startLine": 239,
            "endLine": 239,
            "startColumn": 21,
            "endColumn": 108
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetMethodNames.add((HashSet<String>)enTarget.getMetrics().get(enTarget.getName()));\n",
            "startLine": 234,
            "endLine": 234,
            "startColumn": 21,
            "endColumn": 108
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "InvocationCount.addCountOfClass(sourceClassName,targetClassName);\n",
            "startLine": 243,
            "endLine": 243,
            "startColumn": 21,
            "endColumn": 87
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "InvocationCount.addCountOfClass(sourceClassName,targetClassName);\n",
            "startLine": 237,
            "endLine": 237,
            "startColumn": 21,
            "endColumn": 87
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetClassNames\",targetNames);\n",
            "startLine": 252,
            "endLine": 252,
            "startColumn": 13,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetClassNames\",targetNames);\n",
            "startLine": 246,
            "endLine": 246,
            "startColumn": 13,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetDistances\",targetDistances);\n",
            "startLine": 253,
            "endLine": 253,
            "startColumn": 13,
            "endColumn": 62
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetDistances\",targetDistances);\n",
            "startLine": 247,
            "endLine": 247,
            "startColumn": 13,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetCBODistances\",targetCBODistances);\n",
            "startLine": 254,
            "endLine": 254,
            "startColumn": 13,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetCBODistances\",targetCBODistances);\n",
            "startLine": 248,
            "endLine": 248,
            "startColumn": 13,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetMPCDistances\",targetMPCDistances);\n",
            "startLine": 255,
            "endLine": 255,
            "startColumn": 13,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetMPCDistances\",targetMPCDistances);\n",
            "startLine": 249,
            "endLine": 249,
            "startColumn": 13,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetMethodNames\",targetMethodNames);\n",
            "startLine": 256,
            "endLine": 256,
            "startColumn": 13,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetMethodNames\",targetMethodNames);\n",
            "startLine": 250,
            "endLine": 250,
            "startColumn": 13,
            "endColumn": 66
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MethodEntitySet methodMetric=new MethodEntitySet(this.cu,this.method,this.methodGetSetJudge,sourcePath,classBindingToPath,classToMethodDeclaration);\n",
            "startLine": 119,
            "endLine": 119,
            "startColumn": 13,
            "endColumn": 168
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MethodEntitySet methodMetric=new MethodEntitySet(this.cu,this.method,this.methodGetSetJudge,sourcePath,classToDeclaration);\n",
            "startLine": 116,
            "endLine": 116,
            "startColumn": 13,
            "endColumn": 142
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "InvocationCount.addCountOfMethod(targetClassName,count);\n",
            "startLine": 242,
            "endLine": 242,
            "startColumn": 21,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "InvocationCount.addCountOfMethod(targetClassName,1);\n",
            "startLine": 236,
            "endLine": 236,
            "startColumn": 21,
            "endColumn": 74
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "CouplingBetweenObject cboTarget=new CouplingBetweenObject(methodCallHashSet,targetClassEntitySet);\n",
            "startLine": 229,
            "endLine": 229,
            "startColumn": 21,
            "endColumn": 122
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "CouplingBetweenObject cboTarget=new CouplingBetweenObject(methodEntitySet,targetClassEntitySet);\n",
            "startLine": 224,
            "endLine": 224,
            "startColumn": 21,
            "endColumn": 120
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallList=(ArrayList<String>)methodMetric.getMetrics().get(\"MethodCallList\");\n",
            "startLine": 124,
            "endLine": 124,
            "startColumn": 13,
            "endColumn": 98
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList=(ArrayList<String>)methodMetric.getMetrics().get(\"methodEntityList\");\n",
            "startLine": 119,
            "endLine": 119,
            "startColumn": 13,
            "endColumn": 102
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations=(HashMap<String,HashMap<String,List<ExpressionLocationEntity>>>)methodMetric.getMetrics().get(\"InvocationLocations\");\n",
            "startLine": 132,
            "endLine": 132,
            "startColumn": 13,
            "endColumn": 155
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations=(HashMap<String,HashMap<String,HashSet<ExpressionLocationEntity>>>)methodMetric.getMetrics().get(\"InvocationLocations\");\n",
            "startLine": 127,
            "endLine": 127,
            "startColumn": 13,
            "endColumn": 158
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MessagePassingCoupling mpcTarget=new MessagePassingCoupling(methodCallList,targetClassEntitySet);\n",
            "startLine": 233,
            "endLine": 233,
            "startColumn": 21,
            "endColumn": 121
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MessagePassingCoupling mpcTarget=new MessagePassingCoupling(methodEntityList,targetClassEntitySet);\n",
            "startLine": 228,
            "endLine": 228,
            "startColumn": 21,
            "endColumn": 123
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(classToMethodDeclaration.containsKey(targetClassName) && !(this.methodGetSetJudge.judgeGetAndSet(typeBinding,methodBinding,classToMethodDeclaration.get(targetClassName))) && !methodBinding.getName().equals(typeBinding.getName()))",
            "startLine": 74,
            "endLine": 78,
            "startColumn": 21,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(classToDeclaration.containsKey(targetClassName) && !(this.methodGetSetJudge.judgeGetAndSet(typeBinding,methodBinding,classToDeclaration.get(targetClassName))) && !methodBinding.getName().equals(typeBinding.getName()))",
            "startLine": 71,
            "endLine": 75,
            "startColumn": 21,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MessagePassingCoupling mpcSource=new MessagePassingCoupling(methodCallList,sourceClassEntitySet);\n",
            "startLine": 142,
            "endLine": 142,
            "startColumn": 13,
            "endColumn": 113
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MessagePassingCoupling mpcSource=new MessagePassingCoupling(methodEntityList,sourceClassEntitySet);\n",
            "startLine": 137,
            "endLine": 137,
            "startColumn": 13,
            "endColumn": 115
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "CouplingBetweenObject cboSource=new CouplingBetweenObject(methodCallHashSet,sourceClassEntitySet);\n",
            "startLine": 139,
            "endLine": 139,
            "startColumn": 13,
            "endColumn": 114
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "CouplingBetweenObject cboSource=new CouplingBetweenObject(methodEntitySet,sourceClassEntitySet);\n",
            "startLine": 134,
            "endLine": 134,
            "startColumn": 13,
            "endColumn": 112
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallList=new ArrayList<String>();\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 13,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList=new ArrayList<>();\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 13,
            "endColumn": 50
          },
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "url": "***/commit/4a46a502c60ef8683c79bfaaab2fc73e432bfee0",
      "originalMethod": {
        "container": "metrics.MethodEntityVisitor",
        "type": "Method",
        "name": "MethodEntityVisitor",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 123,
        "endLine": 141,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "metrics.MethodEntityVisitor",
        "type": "Method",
        "name": "MethodEntityVisitor",
        "filePath": "Client/src/main/java/metrics/MethodEntitySet.java",
        "startLine": 114,
        "endLine": 130,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.cu=cu;\n",
            "startLine": 125,
            "endLine": 125,
            "startColumn": 9,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.cu=cu;\n",
            "startLine": 116,
            "endLine": 116,
            "startColumn": 9,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.method=method;\n",
            "startLine": 126,
            "endLine": 126,
            "startColumn": 9,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.method=method;\n",
            "startLine": 117,
            "endLine": 117,
            "startColumn": 9,
            "endColumn": 30
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.methodGetSetJudge=methodGetSetJudge;\n",
            "startLine": 127,
            "endLine": 127,
            "startColumn": 9,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.methodGetSetJudge=methodGetSetJudge;\n",
            "startLine": 118,
            "endLine": 118,
            "startColumn": 9,
            "endColumn": 52
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.type=type;\n",
            "startLine": 128,
            "endLine": 128,
            "startColumn": 9,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.type=type;\n",
            "startLine": 119,
            "endLine": 119,
            "startColumn": 9,
            "endColumn": 26
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.classPath=classPath;\n",
            "startLine": 129,
            "endLine": 129,
            "startColumn": 9,
            "endColumn": 36
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.classPath=classPath;\n",
            "startLine": 120,
            "endLine": 120,
            "startColumn": 9,
            "endColumn": 36
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=new HashSet<>();\n",
            "startLine": 134,
            "endLine": 134,
            "startColumn": 9,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=new HashSet<>();\n",
            "startLine": 123,
            "endLine": 123,
            "startColumn": 9,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList=new ArrayList<>();\n",
            "startLine": 135,
            "endLine": 135,
            "startColumn": 9,
            "endColumn": 46
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableCallList=new ArrayList<>();\n",
            "startLine": 124,
            "endLine": 124,
            "startColumn": 9,
            "endColumn": 46
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList=new ArrayList<>();\n",
            "startLine": 136,
            "endLine": 136,
            "startColumn": 9,
            "endColumn": 47
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableWriteList=new ArrayList<>();\n",
            "startLine": 125,
            "endLine": 125,
            "startColumn": 9,
            "endColumn": 47
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList=new ArrayList<>();\n",
            "startLine": 137,
            "endLine": 137,
            "startColumn": 9,
            "endColumn": 46
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "variableReadList=new ArrayList<>();\n",
            "startLine": 126,
            "endLine": 126,
            "startColumn": 9,
            "endColumn": 46
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=new HashMap<>();\n",
            "startLine": 138,
            "endLine": 138,
            "startColumn": 9,
            "endColumn": 41
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=new HashMap<>();\n",
            "startLine": 127,
            "endLine": 127,
            "startColumn": 9,
            "endColumn": 41
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=new HashMap<>();\n",
            "startLine": 139,
            "endLine": 139,
            "startColumn": 9,
            "endColumn": 42
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationList=new HashMap<>();\n",
            "startLine": 128,
            "endLine": 128,
            "startColumn": 9,
            "endColumn": 42
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations=new HashMap<>();\n",
            "startLine": 140,
            "endLine": 140,
            "startColumn": 9,
            "endColumn": 47
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationLocations=new HashMap<>();\n",
            "startLine": 129,
            "endLine": 129,
            "startColumn": 9,
            "endColumn": 47
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallList=new ArrayList<>();\n",
            "startLine": 133,
            "endLine": 133,
            "startColumn": 9,
            "endColumn": 44
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntityList=new ArrayList<>();\n",
            "startLine": 122,
            "endLine": 122,
            "startColumn": 9,
            "endColumn": 46
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.classToMethodDeclaration=classToMethodDeclaration;\n",
            "startLine": 131,
            "endLine": 131,
            "startColumn": 9,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.classToDeclaration=classToDeclaration;\n",
            "startLine": 121,
            "endLine": 121,
            "startColumn": 9,
            "endColumn": 54
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "5df95b7168180d76edb25b001f9734d7fd69400a",
      "url": "***/commit/5df95b7168180d76edb25b001f9734d7fd69400a",
      "originalMethod": {
        "container": "detector.GodClassDetector",
        "type": "Method",
        "name": "postRetrainData",
        "filePath": "Client/src/main/java/detector/GodClassDetector.java",
        "startLine": 176,
        "endLine": 207,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "detector.GodClassDetector",
        "type": "Method",
        "name": "postRetrainData",
        "filePath": "Client/src/main/java/detector/GodClassDetector.java",
        "startLine": 177,
        "endLine": 217,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "Try Statement",
            "expression": "try",
            "startLine": 185,
            "endLine": 202,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Try Statement",
            "expression": "try",
            "startLine": 188,
            "endLine": 213,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Catch Clause",
            "expression": "catch(e)",
            "startLine": 200,
            "endLine": 202,
            "startColumn": 31,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Catch Clause",
            "expression": "catch(e)",
            "startLine": 211,
            "endLine": 213,
            "startColumn": 31,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "e.printStackTrace();\n",
            "startLine": 201,
            "endLine": 201,
            "startColumn": 13,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "e.printStackTrace();\n",
            "startLine": 212,
            "endLine": 212,
            "startColumn": 13,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String url=\"http://\" + serverIP + \":\"+ serverPort+ \"/retrain/GodClassRetrain\";\n",
            "startLine": 183,
            "endLine": 183,
            "startColumn": 9,
            "endColumn": 91
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String url=\"http://\" + serverIP + \":\"+ serverPort+ \"/retrain/GodClassRetrain\";\n",
            "startLine": 184,
            "endLine": 184,
            "startColumn": 9,
            "endColumn": 91
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return jsonResponse;\n",
            "startLine": 206,
            "endLine": 206,
            "startColumn": 9,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return jsonResponse;\n",
            "startLine": 216,
            "endLine": 216,
            "startColumn": 9,
            "endColumn": 29
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int flag=label ? 1 : 0;\n",
            "startLine": 203,
            "endLine": 203,
            "startColumn": 9,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int flag=label ? 1 : 0;\n",
            "startLine": 209,
            "endLine": 209,
            "startColumn": 13,
            "endColumn": 38
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"LOC\");\n",
            "startLine": 186,
            "endLine": 186,
            "startColumn": 13,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String className=info.get(\"QualifiedName\");\n",
            "startLine": 189,
            "endLine": 189,
            "startColumn": 13,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String jsonResponse=Utils.jsonPost(url,candidateData.toString());\n",
            "startLine": 205,
            "endLine": 205,
            "startColumn": 9,
            "endColumn": 77
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String jsonResponse=Utils.jsonPost(url,object.toString());\n",
            "startLine": 215,
            "endLine": 215,
            "startColumn": 9,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"Methods\");\n",
            "startLine": 199,
            "endLine": 199,
            "startColumn": 13,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> methods=(ArrayList<String>)features.get(\"Methods\");\n",
            "startLine": 191,
            "endLine": 191,
            "startColumn": 13,
            "endColumn": 85
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"Attributes\");\n",
            "startLine": 189,
            "endLine": 189,
            "startColumn": 13,
            "endColumn": 36
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> attributes=(ArrayList<String>)features.get(\"Attributes\");\n",
            "startLine": 190,
            "endLine": 190,
            "startColumn": 13,
            "endColumn": 91
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"DCC\");\n",
            "startLine": 188,
            "endLine": 188,
            "startColumn": 13,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"DCC\",features.get(\"DCC\").toString());\n",
            "startLine": 199,
            "endLine": 199,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"NOPA\");\n",
            "startLine": 198,
            "endLine": 198,
            "startColumn": 13,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"NOPA\",features.get(\"NOPA\").toString());\n",
            "startLine": 208,
            "endLine": 208,
            "startColumn": 13,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"LCOM\");\n",
            "startLine": 197,
            "endLine": 197,
            "startColumn": 13,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"LCOM\",features.get(\"LCOM\").toString());\n",
            "startLine": 207,
            "endLine": 207,
            "startColumn": 13,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"ATFD\");\n",
            "startLine": 195,
            "endLine": 195,
            "startColumn": 13,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"ATFD\",features.get(\"ATFD\").toString());\n",
            "startLine": 205,
            "endLine": 205,
            "startColumn": 13,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"NOAM\");\n",
            "startLine": 190,
            "endLine": 190,
            "startColumn": 13,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"NOAM\",features.get(\"NOAM\").toString());\n",
            "startLine": 200,
            "endLine": 200,
            "startColumn": 13,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"WMC\");\n",
            "startLine": 191,
            "endLine": 191,
            "startColumn": 13,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"WMC\",features.get(\"WMC\").toString());\n",
            "startLine": 201,
            "endLine": 201,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"NOM\");\n",
            "startLine": 192,
            "endLine": 192,
            "startColumn": 13,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"NOM\",features.get(\"NOM\").toString());\n",
            "startLine": 202,
            "endLine": 202,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"CAM\");\n",
            "startLine": 194,
            "endLine": 194,
            "startColumn": 13,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"CAM\",features.get(\"CAM\").toString());\n",
            "startLine": 204,
            "endLine": 204,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"DIT\");\n",
            "startLine": 193,
            "endLine": 193,
            "startColumn": 13,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"DIT\",features.get(\"DIT\").toString());\n",
            "startLine": 203,
            "endLine": 203,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"NOA\");\n",
            "startLine": 187,
            "endLine": 187,
            "startColumn": 13,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"NOA\",features.get(\"NOA\").toString());\n",
            "startLine": 198,
            "endLine": 198,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.get(\"TCC\");\n",
            "startLine": 196,
            "endLine": 196,
            "startColumn": 13,
            "endColumn": 29
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"TCC\",features.get(\"TCC\").toString());\n",
            "startLine": 206,
            "endLine": 206,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,Object> info=(HashMap<String,Object>)JSONObject.toBean(candidateData,HashMap.class);\n",
            "startLine": 184,
            "endLine": 184,
            "startColumn": 9,
            "endColumn": 114
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,String> info=(HashMap<String,String>)JSONObject.toBean(candidateData.getJSONObject(\"info\"),HashMap.class);\n",
            "startLine": 186,
            "endLine": 186,
            "startColumn": 9,
            "endColumn": 134
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,Object> info=(HashMap<String,Object>)JSONObject.toBean(candidateData,HashMap.class);\n",
            "startLine": 184,
            "endLine": 184,
            "startColumn": 9,
            "endColumn": 114
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,Object> features=(HashMap<String,Object>)JSONObject.toBean(candidateData.getJSONObject(\"features\"),HashMap.class);\n",
            "startLine": 185,
            "endLine": 185,
            "startColumn": 9,
            "endColumn": 142
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "candidateData.put(\"label\",flag);\n",
            "startLine": 204,
            "endLine": 204,
            "startColumn": 9,
            "endColumn": 42
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "data.put(\"label\",String.valueOf(flag));\n",
            "startLine": 210,
            "endLine": 210,
            "startColumn": 13,
            "endColumn": 52
          },
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "5df95b7168180d76edb25b001f9734d7fd69400a",
      "url": "***/commit/5df95b7168180d76edb25b001f9734d7fd69400a",
      "originalMethod": {
        "container": "detect.GodClassDetectorTest",
        "type": "Method",
        "name": "main",
        "filePath": "Client/src/test/java/detect/GodClassDetectorTest.java",
        "startLine": 15,
        "endLine": 71,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "detect.GodClassDetectorTest",
        "type": "Method",
        "name": "main",
        "filePath": "Client/src/test/java/detect/GodClassDetectorTest.java",
        "startLine": 16,
        "endLine": 74,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "Try Statement",
            "expression": "try",
            "startLine": 16,
            "endLine": 70,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Try Statement",
            "expression": "try",
            "startLine": 17,
            "endLine": 73,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Catch Clause",
            "expression": "catch(e)",
            "startLine": 68,
            "endLine": 70,
            "startColumn": 31,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Catch Clause",
            "expression": "catch(e)",
            "startLine": 71,
            "endLine": 73,
            "startColumn": 31,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "e.printStackTrace();\n",
            "startLine": 69,
            "endLine": 69,
            "startColumn": 13,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "e.printStackTrace();\n",
            "startLine": 72,
            "endLine": 72,
            "startColumn": 13,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(godClassDetector.detectSuccess())",
            "startLine": 42,
            "endLine": 67,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(godClassDetector.detectSuccess())",
            "startLine": 43,
            "endLine": 70,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 65,
            "endLine": 67,
            "startColumn": 20,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 68,
            "endLine": 70,
            "startColumn": 20,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String projectPath=\"D:\\\\Documents\\\\Projects\\\\spring-cloud-huawei\";\n",
            "startLine": 17,
            "endLine": 17,
            "startColumn": 13,
            "endColumn": 81
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String projectPath=\"D:\\\\Documents\\\\Projects\\\\spring-cloud-huawei\";\n",
            "startLine": 18,
            "endLine": 18,
            "startColumn": 13,
            "endColumn": 81
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetFolder=\"D:\\\\Documents\\\\Projects\\\\spring-cloud-huawei\\\\clients\";\n",
            "startLine": 18,
            "endLine": 18,
            "startColumn": 13,
            "endColumn": 91
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetFolder=\"D:\\\\Documents\\\\Projects\\\\spring-cloud-huawei\\\\clients\";\n",
            "startLine": 19,
            "endLine": 19,
            "startColumn": 13,
            "endColumn": 91
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String repoPath=\"C:\\\\Users\\\\62510\\\\.m2\\\\repository\";\n",
            "startLine": 19,
            "endLine": 19,
            "startColumn": 13,
            "endColumn": 67
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String repoPath=\"C:\\\\Users\\\\62510\\\\.m2\\\\repository\";\n",
            "startLine": 20,
            "endLine": 20,
            "startColumn": 13,
            "endColumn": 67
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String serverIP=\"127.0.0.1\";\n",
            "startLine": 21,
            "endLine": 21,
            "startColumn": 13,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String serverIP=\"127.0.0.1\";\n",
            "startLine": 22,
            "endLine": 22,
            "startColumn": 13,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String serverPort=\"8080\";\n",
            "startLine": 22,
            "endLine": 22,
            "startColumn": 13,
            "endColumn": 40
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String serverPort=\"8080\";\n",
            "startLine": 23,
            "endLine": 23,
            "startColumn": 13,
            "endColumn": 40
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double threshold=0;\n",
            "startLine": 23,
            "endLine": 23,
            "startColumn": 13,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double threshold=0;\n",
            "startLine": 24,
            "endLine": 24,
            "startColumn": 13,
            "endColumn": 34
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "GodClassDetector godClassDetector=new GodClassDetector();\n",
            "startLine": 34,
            "endLine": 34,
            "startColumn": 13,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "GodClassDetector godClassDetector=new GodClassDetector();\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 13,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassDetector.setServerIP(serverIP);\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 13,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassDetector.setServerIP(serverIP);\n",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 13,
            "endColumn": 52
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassDetector.setServerPort(serverPort);\n",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 13,
            "endColumn": 56
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassDetector.setServerPort(serverPort);\n",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 13,
            "endColumn": 56
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassDetector.setThreshold(threshold);\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 13,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassDetector.setThreshold(threshold);\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 13,
            "endColumn": 54
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "long start=System.currentTimeMillis();\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 13,
            "endColumn": 53
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "long start=System.currentTimeMillis();\n",
            "startLine": 41,
            "endLine": 41,
            "startColumn": 13,
            "endColumn": 53
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassDetector.detectFolder(projectPath,targetFolder);\n",
            "startLine": 41,
            "endLine": 41,
            "startColumn": 13,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassDetector.detectFolder(projectPath,targetFolder);\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 13,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"检测结果：\");\n",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 17,
            "endColumn": 45
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"检测结果：\");\n",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 17,
            "endColumn": 45
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(godClassDetector.getResult().toString());\n",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 17,
            "endColumn": 77
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(godClassDetector.getResult().toString());\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 17,
            "endColumn": 77
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(System.currentTimeMillis() - start);\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 17,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(System.currentTimeMillis() - start);\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 17,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"计算重构方案：\");\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 17,
            "endColumn": 47
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"计算重构方案：\");\n",
            "startLine": 49,
            "endLine": 49,
            "startColumn": 17,
            "endColumn": 47
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "GodClassDetector godClassSolution=new GodClassDetector();\n",
            "startLine": 49,
            "endLine": 49,
            "startColumn": 17,
            "endColumn": 76
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "GodClassDetector godClassSolution=new GodClassDetector();\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 17,
            "endColumn": 76
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassSolution.setServerIP(serverIP);\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 17,
            "endColumn": 56
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassSolution.setServerIP(serverIP);\n",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 17,
            "endColumn": 56
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassSolution.setServerPort(serverPort);\n",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 17,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassSolution.setServerPort(serverPort);\n",
            "startLine": 52,
            "endLine": 52,
            "startColumn": 17,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassSolution.setThreshold(threshold);\n",
            "startLine": 53,
            "endLine": 53,
            "startColumn": 17,
            "endColumn": 58
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "godClassSolution.setThreshold(threshold);\n",
            "startLine": 54,
            "endLine": 54,
            "startColumn": 17,
            "endColumn": 58
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONObject information=godClassDetector.getGodClassList();\n",
            "startLine": 54,
            "endLine": 54,
            "startColumn": 17,
            "endColumn": 77
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONObject information=godClassDetector.getGodClassList();\n",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 17,
            "endColumn": 77
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"===================\");\n",
            "startLine": 56,
            "endLine": 56,
            "startColumn": 17,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"===================\");\n",
            "startLine": 58,
            "endLine": 58,
            "startColumn": 17,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"成功\");\n",
            "startLine": 64,
            "endLine": 64,
            "startColumn": 17,
            "endColumn": 42
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"成功\");\n",
            "startLine": 67,
            "endLine": 67,
            "startColumn": 17,
            "endColumn": 42
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 42,
            "endLine": 65,
            "startColumn": 51,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 43,
            "endLine": 68,
            "startColumn": 51,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONObject object=godClassSolution.calculateFixSolution(\"\",information);\n",
            "startLine": 57,
            "endLine": 57,
            "startColumn": 17,
            "endColumn": 92
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONObject object=godClassSolution.calculateFixSolution(\"org.apache.servicecomb.service.center.client.ServiceCenterDiscovery\",information);\n",
            "startLine": 59,
            "endLine": 59,
            "startColumn": 17,
            "endColumn": 159
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(information);\n",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 17,
            "endColumn": 49
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"-------------\");\n",
            "startLine": 56,
            "endLine": 56,
            "startColumn": 17,
            "endColumn": 53
          },
          "developerConfirmation": false
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(information);\n",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 17,
            "endColumn": 49
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(object.toString());\n",
            "startLine": 60,
            "endLine": 60,
            "startColumn": 17,
            "endColumn": 55
          },
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "5df95b7168180d76edb25b001f9734d7fd69400a",
      "url": "***/commit/5df95b7168180d76edb25b001f9734d7fd69400a",
      "originalMethod": {
        "container": "bit.se.codesmell.controller.TrainingController",
        "type": "Method",
        "name": "retrainFE",
        "filePath": "Server/src/main/java/bit/se/codesmell/controller/TrainingController.java",
        "startLine": 20,
        "endLine": 51,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "bit.se.codesmell.controller.TrainingController",
        "type": "Method",
        "name": "retrainFE",
        "filePath": "Server/src/main/java/bit/se/codesmell/controller/TrainingController.java",
        "startLine": 21,
        "endLine": 116,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "Try Statement",
            "expression": "try",
            "startLine": 24,
            "endLine": 49,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Try Statement",
            "expression": "try",
            "startLine": 30,
            "endLine": 114,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Catch Clause",
            "expression": "catch(e)",
            "startLine": 47,
            "endLine": 49,
            "startColumn": 31,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Catch Clause",
            "expression": "catch(e)",
            "startLine": 92,
            "endLine": 94,
            "startColumn": 31,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "e.printStackTrace();\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 13,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "e.printStackTrace();\n",
            "startLine": 93,
            "endLine": 93,
            "startColumn": 13,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String status=\"Submission failed\";\n",
            "startLine": 23,
            "endLine": 23,
            "startColumn": 9,
            "endColumn": 45
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String status=\"Submission failed\";\n",
            "startLine": 24,
            "endLine": 24,
            "startColumn": 9,
            "endColumn": 45
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String methodName=(String)FeatureEnvyData.get(\"methodName\");\n",
            "startLine": 26,
            "endLine": 26,
            "startColumn": 13,
            "endColumn": 76
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String methodName=(String)FeatureEnvyData.get(\"methodName\");\n",
            "startLine": 32,
            "endLine": 32,
            "startColumn": 13,
            "endColumn": 76
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String sourceClassName=(String)FeatureEnvyData.get(\"sourceClassName\");\n",
            "startLine": 27,
            "endLine": 27,
            "startColumn": 13,
            "endColumn": 86
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String sourceClassName=(String)FeatureEnvyData.get(\"sourceClassName\");\n",
            "startLine": 33,
            "endLine": 33,
            "startColumn": 13,
            "endColumn": 86
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double sourceDistance=(double)FeatureEnvyData.get(\"sourceDistance\");\n",
            "startLine": 28,
            "endLine": 28,
            "startColumn": 13,
            "endColumn": 84
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double sourceDistance=(double)FeatureEnvyData.get(\"sourceDistance\");\n",
            "startLine": 34,
            "endLine": 34,
            "startColumn": 13,
            "endColumn": 84
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int sourceMPCDistance=(Integer)FeatureEnvyData.get(\"sourceMPCDistance\");\n",
            "startLine": 29,
            "endLine": 29,
            "startColumn": 13,
            "endColumn": 88
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int sourceMPCDistance=(Integer)FeatureEnvyData.get(\"sourceMPCDistance\");\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 13,
            "endColumn": 88
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int sourceCBODistance=(Integer)FeatureEnvyData.get(\"sourceCBODistance\");\n",
            "startLine": 30,
            "endLine": 30,
            "startColumn": 13,
            "endColumn": 88
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int sourceCBODistance=(Integer)FeatureEnvyData.get(\"sourceCBODistance\");\n",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 13,
            "endColumn": 88
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=(String)FeatureEnvyData.get(\"targetClassName\");\n",
            "startLine": 31,
            "endLine": 31,
            "startColumn": 13,
            "endColumn": 86
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=(String)FeatureEnvyData.get(\"targetClassName\");\n",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 13,
            "endColumn": 86
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double targetDistance=(double)FeatureEnvyData.get(\"targetDistance\");\n",
            "startLine": 32,
            "endLine": 32,
            "startColumn": 13,
            "endColumn": 84
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double targetDistance=(double)FeatureEnvyData.get(\"targetDistance\");\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 13,
            "endColumn": 84
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int targetMPCDistance=(Integer)FeatureEnvyData.get(\"targetMPCDistance\");\n",
            "startLine": 33,
            "endLine": 33,
            "startColumn": 13,
            "endColumn": 88
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int targetMPCDistance=(Integer)FeatureEnvyData.get(\"targetMPCDistance\");\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 13,
            "endColumn": 88
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int targetCBODistance=(Integer)FeatureEnvyData.get(\"targetCBODistance\");\n",
            "startLine": 34,
            "endLine": 34,
            "startColumn": 13,
            "endColumn": 88
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int targetCBODistance=(Integer)FeatureEnvyData.get(\"targetCBODistance\");\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 13,
            "endColumn": 88
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int label=(int)FeatureEnvyData.get(\"label\");\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 13,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "int label=(int)FeatureEnvyData.get(\"label\");\n",
            "startLine": 41,
            "endLine": 41,
            "startColumn": 13,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "status=\"Submission successful\";\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 13,
            "endColumn": 46
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "status=\"Submission successful\";\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 13,
            "endColumn": 46
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "Class.forName(\"com.mysql.cj.jdbc.Driver\");\n",
            "startLine": 41,
            "endLine": 41,
            "startColumn": 13,
            "endColumn": 55
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "Class.forName(\"com.mysql.cj.jdbc.Driver\");\n",
            "startLine": 44,
            "endLine": 44,
            "startColumn": 13,
            "endColumn": 55
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return status;\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 9,
            "endColumn": 23
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return status;\n",
            "startLine": 115,
            "endLine": 115,
            "startColumn": 9,
            "endColumn": 23
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "connection.close();\n",
            "startLine": 44,
            "endLine": 44,
            "startColumn": 17,
            "endColumn": 36
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "connection.close();\n",
            "startLine": 97,
            "endLine": 97,
            "startColumn": 21,
            "endColumn": 40
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(connection != null)",
            "startLine": 43,
            "endLine": 46,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(connection != null)",
            "startLine": 46,
            "endLine": 91,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Connection connection=DriverManager.getConnection(url,user,password);\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 13,
            "endColumn": 84
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "connection=DriverManager.getConnection(Config.getDatabaseUrl(),Config.getDatabaseUsername(),Config.getDatabasePassword());\n",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 13,
            "endColumn": 139
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String url=\"jdbc:mysql://localhost:3306/codesmell\";\n",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 13,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String query=\"select positive_label,negative_label from featureenvy where methodName=? and sourceClassName=? and targetClassName=?;\";\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 17,
            "endColumn": 152
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String user=\"root\";\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 13,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String query=\"select positive_label,negative_label from featureenvy where methodName=? and sourceClassName=? and targetClassName=?;\";\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 17,
            "endColumn": 152
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String password=\"123456\";\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 13,
            "endColumn": 40
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String update=\"update featureenvy set positive_label=? ,negative_label=? where methodName=? and sourceClassName=? and targetClassName=?;\";\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 17,
            "endColumn": 157
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(connection != null)",
            "startLine": 43,
            "endLine": 46,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(connection != null)",
            "startLine": 96,
            "endLine": 98,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "7836fcd0c97f4ee357c6df74ac74b13985ee4af9",
      "url": "***/commit/7836fcd0c97f4ee357c6df74ac74b13985ee4af9",
      "originalMethod": {
        "container": "utils.MethodGetSetJudge",
        "type": "Method",
        "name": "MethodGetSetJudge",
        "filePath": "Client/src/main/java/utils/MethodGetSetJudge.java",
        "startLine": 26,
        "endLine": 30,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "utils.MethodGetSetJudge",
        "type": "Method",
        "name": "MethodGetSetJudge",
        "filePath": "Client/src/main/java/utils/MethodGetSetJudge.java",
        "startLine": 25,
        "endLine": 29,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.encodings=encodings;\n",
            "startLine": 28,
            "endLine": 28,
            "startColumn": 9,
            "endColumn": 36
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.encodings=encodings;\n",
            "startLine": 27,
            "endLine": 27,
            "startColumn": 9,
            "endColumn": 36
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.classpathEntries=classpathEntries;\n",
            "startLine": 29,
            "endLine": 29,
            "startColumn": 9,
            "endColumn": 50
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.classpathEntries=classpathEntries;\n",
            "startLine": 28,
            "endLine": 28,
            "startColumn": 9,
            "endColumn": 50
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.sourcepathEntries=sourcepathEntries;\n",
            "startLine": 27,
            "endLine": 27,
            "startColumn": 9,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.sourcesEntries=sourcesEntries;\n",
            "startLine": 26,
            "endLine": 26,
            "startColumn": 9,
            "endColumn": 46
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "url": "***/commit/4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "originalMethod": {
        "container": "visitor.EntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/EntityVisitor.java",
        "startLine": 32,
        "endLine": 48,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "visitor.EntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/EntityVisitor.java",
        "startLine": 26,
        "endLine": 41,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(methodBinding == null)",
            "startLine": 34,
            "endLine": 34,
            "startColumn": 9,
            "endColumn": 48
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(methodBinding == null)",
            "startLine": 28,
            "endLine": 28,
            "startColumn": 9,
            "endColumn": 48
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 9,
            "endColumn": 46
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 30,
            "endLine": 30,
            "startColumn": 9,
            "endColumn": 46
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(!typeBinding.equals(currentClass) && typeBinding.isFromSource())",
            "startLine": 37,
            "endLine": 46,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(!typeBinding.equals(currentClass) && typeBinding.isFromSource())",
            "startLine": 31,
            "endLine": 39,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IMethodBinding methodBinding=node.resolveMethodBinding();\n",
            "startLine": 33,
            "endLine": 33,
            "startColumn": 9,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IMethodBinding methodBinding=node.resolveMethodBinding();\n",
            "startLine": 27,
            "endLine": 27,
            "startColumn": 9,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=methodBinding.getDeclaringClass();\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 9,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=methodBinding.getDeclaringClass();\n",
            "startLine": 29,
            "endLine": 29,
            "startColumn": 9,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 9,
            "endColumn": 21
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 9,
            "endColumn": 21
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 40,
            "endLine": 44,
            "startColumn": 20,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 34,
            "endLine": 38,
            "startColumn": 20,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 38,
            "endLine": 40,
            "startColumn": 58,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 32,
            "endLine": 34,
            "startColumn": 55,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(newTargetClass.containsKey(typeBinding))",
            "startLine": 38,
            "endLine": 44,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(targetClass.containsKey(typeBinding))",
            "startLine": 32,
            "endLine": 38,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "temp.add(methodBinding);\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 17,
            "endColumn": 41
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "temp.add(node);\n",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 17,
            "endColumn": 32
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "newTargetClass.put(typeBinding,temp);\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 17,
            "endColumn": 55
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClass.put(typeBinding,temp);\n",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 17,
            "endColumn": 52
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "newTargetClass.get(typeBinding).add(methodBinding);\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 17,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClass.get(typeBinding).add(node);\n",
            "startLine": 33,
            "endLine": 33,
            "startColumn": 17,
            "endColumn": 56
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<IBinding> temp=new HashSet<>();\n",
            "startLine": 41,
            "endLine": 41,
            "startColumn": 17,
            "endColumn": 58
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "List<Expression> temp=new ArrayList<>();\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 17,
            "endColumn": 59
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "url": "***/commit/4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "originalMethod": {
        "container": "visitor.EntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/EntityVisitor.java",
        "startLine": 50,
        "endLine": 68,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "visitor.EntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/EntityVisitor.java",
        "startLine": 43,
        "endLine": 60,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding == null)",
            "startLine": 52,
            "endLine": 52,
            "startColumn": 9,
            "endColumn": 50
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding == null)",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 9,
            "endColumn": 50
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 54,
            "endLine": 54,
            "startColumn": 9,
            "endColumn": 46
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 9,
            "endColumn": 46
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(!typeBinding.equals(currentClass) && typeBinding.isFromSource())",
            "startLine": 55,
            "endLine": 66,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(!typeBinding.equals(currentClass) && typeBinding.isFromSource())",
            "startLine": 48,
            "endLine": 58,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding variableBinding=node.resolveFieldBinding();\n",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 9,
            "endColumn": 71
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding variableBinding=node.resolveFieldBinding();\n",
            "startLine": 44,
            "endLine": 44,
            "startColumn": 9,
            "endColumn": 71
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=variableBinding.getDeclaringClass();\n",
            "startLine": 53,
            "endLine": 53,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=variableBinding.getDeclaringClass();\n",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 9,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 67,
            "endLine": 67,
            "startColumn": 9,
            "endColumn": 21
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 59,
            "endLine": 59,
            "startColumn": 9,
            "endColumn": 21
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 59,
            "endLine": 63,
            "startColumn": 20,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 52,
            "endLine": 56,
            "startColumn": 20,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "temp.add(variableBinding);\n",
            "startLine": 61,
            "endLine": 61,
            "startColumn": 17,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "temp.add(node);\n",
            "startLine": 54,
            "endLine": 54,
            "startColumn": 17,
            "endColumn": 32
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(newTargetClass.containsKey(typeBinding))",
            "startLine": 57,
            "endLine": 63,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(targetClass.containsKey(typeBinding))",
            "startLine": 50,
            "endLine": 56,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "newTargetClass.put(typeBinding,temp);\n",
            "startLine": 62,
            "endLine": 62,
            "startColumn": 17,
            "endColumn": 55
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClass.put(typeBinding,temp);\n",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 17,
            "endColumn": 52
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 57,
            "endLine": 59,
            "startColumn": 58,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 50,
            "endLine": 52,
            "startColumn": 55,
            "endColumn": 14
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "newTargetClass.get(typeBinding).add(variableBinding);\n",
            "startLine": 58,
            "endLine": 58,
            "startColumn": 17,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClass.get(typeBinding).add(node);\n",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 17,
            "endColumn": 56
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<IBinding> temp=new HashSet<>();\n",
            "startLine": 60,
            "endLine": 60,
            "startColumn": 17,
            "endColumn": 58
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "List<Expression> temp=new ArrayList<>();\n",
            "startLine": 53,
            "endLine": 53,
            "startColumn": 17,
            "endColumn": 59
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "url": "***/commit/4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "originalMethod": {
        "container": "visitor.EntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/EntityVisitor.java",
        "startLine": 70,
        "endLine": 92,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "visitor.EntityVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/EntityVisitor.java",
        "startLine": 62,
        "endLine": 83,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(node.resolveBinding() instanceof IVariableBinding)",
            "startLine": 71,
            "endLine": 90,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(node.resolveBinding() instanceof IVariableBinding)",
            "startLine": 63,
            "endLine": 81,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding.isField())",
            "startLine": 73,
            "endLine": 88,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(variableBinding.isField())",
            "startLine": 65,
            "endLine": 79,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 75,
            "endLine": 76,
            "startColumn": 17,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(typeBinding == null)",
            "startLine": 67,
            "endLine": 68,
            "startColumn": 17,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 76,
            "endLine": 76,
            "startColumn": 21,
            "endColumn": 33
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 68,
            "endLine": 68,
            "startColumn": 21,
            "endColumn": 33
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(!typeBinding.equals(currentClass) && typeBinding.isFromSource())",
            "startLine": 77,
            "endLine": 87,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(!typeBinding.equals(currentClass) && typeBinding.isFromSource())",
            "startLine": 69,
            "endLine": 78,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding variableBinding=(IVariableBinding)node.resolveBinding();\n",
            "startLine": 72,
            "endLine": 72,
            "startColumn": 13,
            "endColumn": 89
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding variableBinding=(IVariableBinding)node.resolveBinding();\n",
            "startLine": 64,
            "endLine": 64,
            "startColumn": 13,
            "endColumn": 89
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=variableBinding.getDeclaringClass();\n",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 17,
            "endColumn": 80
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding typeBinding=variableBinding.getDeclaringClass();\n",
            "startLine": 66,
            "endLine": 66,
            "startColumn": 17,
            "endColumn": 80
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 91,
            "endLine": 91,
            "startColumn": 9,
            "endColumn": 21
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 82,
            "endLine": 82,
            "startColumn": 9,
            "endColumn": 21
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 79,
            "endLine": 81,
            "startColumn": 66,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 71,
            "endLine": 73,
            "startColumn": 63,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(newTargetClass.containsKey(typeBinding))",
            "startLine": 79,
            "endLine": 85,
            "startColumn": 21,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(targetClass.containsKey(typeBinding))",
            "startLine": 71,
            "endLine": 77,
            "startColumn": 21,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 81,
            "endLine": 85,
            "startColumn": 28,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 73,
            "endLine": 77,
            "startColumn": 28,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "newTargetClass.put(typeBinding,temp);\n",
            "startLine": 84,
            "endLine": 84,
            "startColumn": 25,
            "endColumn": 63
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClass.put(typeBinding,temp);\n",
            "startLine": 76,
            "endLine": 76,
            "startColumn": 25,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "temp.add(variableBinding);\n",
            "startLine": 83,
            "endLine": 83,
            "startColumn": 25,
            "endColumn": 51
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "temp.add(node);\n",
            "startLine": 75,
            "endLine": 75,
            "startColumn": 25,
            "endColumn": 40
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "newTargetClass.get(typeBinding).add(variableBinding);\n",
            "startLine": 80,
            "endLine": 80,
            "startColumn": 25,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClass.get(typeBinding).add(node);\n",
            "startLine": 72,
            "endLine": 72,
            "startColumn": 25,
            "endColumn": 64
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<IBinding> temp=new HashSet<>();\n",
            "startLine": 82,
            "endLine": 82,
            "startColumn": 25,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "List<Expression> temp=new ArrayList<>();\n",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 25,
            "endColumn": 67
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "url": "***/commit/4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "originalMethod": {
        "container": "detector.FeatureEnvyDetector",
        "type": "Method",
        "name": "formatResult",
        "filePath": "Client/src/main/java/detector/FeatureEnvyDetector.java",
        "startLine": 59,
        "endLine": 120,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "detector.FeatureEnvyDetector",
        "type": "Method",
        "name": "formatResult",
        "filePath": "Client/src/main/java/detector/FeatureEnvyDetector.java",
        "startLine": 60,
        "endLine": 143,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "For Statement",
            "expression": "for(int i=0; i < probabilities.length; i++)",
            "startLine": 61,
            "endLine": 64,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "For Statement",
            "expression": "for(int i=0; i < probabilities.length; i++)",
            "startLine": 62,
            "endLine": 65,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "t[i][0]=i;\n",
            "startLine": 62,
            "endLine": 62,
            "startColumn": 13,
            "endColumn": 25
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "t[i][0]=i;\n",
            "startLine": 63,
            "endLine": 63,
            "startColumn": 13,
            "endColumn": 25
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "t[i][1]=Double.valueOf(probabilities[i]).doubleValue();\n",
            "startLine": 63,
            "endLine": 63,
            "startColumn": 13,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "t[i][1]=Double.valueOf(probabilities[i]).doubleValue();\n",
            "startLine": 64,
            "endLine": 64,
            "startColumn": 13,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(o2[1] > o1[1])",
            "startLine": 67,
            "endLine": 69,
            "startColumn": 17,
            "endColumn": 32
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(o2[1] > o1[1])",
            "startLine": 68,
            "endLine": 70,
            "startColumn": 17,
            "endColumn": 32
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return 1;\n",
            "startLine": 67,
            "endLine": 67,
            "startColumn": 36,
            "endColumn": 45
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return 1;\n",
            "startLine": 68,
            "endLine": 68,
            "startColumn": 36,
            "endColumn": 45
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(o2[1] == o1[1])",
            "startLine": 68,
            "endLine": 69,
            "startColumn": 22,
            "endColumn": 32
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(o2[1] == o1[1])",
            "startLine": 69,
            "endLine": 70,
            "startColumn": 22,
            "endColumn": 32
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return 0;\n",
            "startLine": 68,
            "endLine": 68,
            "startColumn": 42,
            "endColumn": 51
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return 0;\n",
            "startLine": 69,
            "endLine": 69,
            "startColumn": 42,
            "endColumn": 51
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return -1;\n",
            "startLine": 69,
            "endLine": 69,
            "startColumn": 22,
            "endColumn": 32
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return -1;\n",
            "startLine": 70,
            "endLine": 70,
            "startColumn": 22,
            "endColumn": 32
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationSet.containsKey(info.get(\"SourceClass\")))",
            "startLine": 79,
            "endLine": 84,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(invocationSet.containsKey(info.get(\"SourceClass\")))",
            "startLine": 80,
            "endLine": 85,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 79,
            "endLine": 82,
            "startColumn": 65,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 80,
            "endLine": 83,
            "startColumn": 65,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"setOfSourceClass\",invocationSet.get(info.get(\"SourceClass\")));\n",
            "startLine": 80,
            "endLine": 80,
            "startColumn": 13,
            "endColumn": 96
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"setOfSourceClass\",invocationSet.get(info.get(\"SourceClass\")));\n",
            "startLine": 81,
            "endLine": 81,
            "startColumn": 13,
            "endColumn": 96
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.remove(info.get(\"SourceClass\"));\n",
            "startLine": 81,
            "endLine": 81,
            "startColumn": 13,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet.remove(info.get(\"SourceClass\"));\n",
            "startLine": 82,
            "endLine": 82,
            "startColumn": 13,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 82,
            "endLine": 84,
            "startColumn": 14,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 83,
            "endLine": 85,
            "startColumn": 16,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"setOfSourceClass\",new HashSet<>());\n",
            "startLine": 83,
            "endLine": 83,
            "startColumn": 13,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"setOfSourceClass\",new HashSet<>());\n",
            "startLine": 84,
            "endLine": 84,
            "startColumn": 13,
            "endColumn": 69
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "For Statement",
            "expression": "for(int i=0; i < t.length; i++)",
            "startLine": 90,
            "endLine": 116,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "For Statement",
            "expression": "for(int i=0; i < t.length; i++)",
            "startLine": 91,
            "endLine": 139,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(p <= threshold)",
            "startLine": 92,
            "endLine": 95,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(p <= threshold)",
            "startLine": 93,
            "endLine": 96,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(i == 0)",
            "startLine": 93,
            "endLine": 93,
            "startColumn": 17,
            "endColumn": 41
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(i == 0)",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 17,
            "endColumn": 41
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Break Statement",
            "expression": "break;\n",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 17,
            "endColumn": 23
          },
          "rightSideLocation": {
            "type": "Break Statement",
            "expression": "break;\n",
            "startLine": 95,
            "endLine": 95,
            "startColumn": 17,
            "endColumn": 23
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(StringUtils.isEmpty(targetClassName))",
            "startLine": 103,
            "endLine": 114,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(StringUtils.isEmpty(targetClassName))",
            "startLine": 115,
            "endLine": 137,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(iBinding instanceof IMethodBinding)",
            "startLine": 107,
            "endLine": 112,
            "startColumn": 21,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(iBinding instanceof IMethodBinding)",
            "startLine": 131,
            "endLine": 135,
            "startColumn": 21,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(iBinding instanceof IVariableBinding)",
            "startLine": 110,
            "endLine": 112,
            "startColumn": 28,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(iBinding instanceof IVariableBinding)",
            "startLine": 133,
            "endLine": 135,
            "startColumn": 28,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"被调用字段：\" + iBinding.toString());\n",
            "startLine": 111,
            "endLine": 111,
            "startColumn": 25,
            "endColumn": 76
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"被调用字段：\" + iBinding.toString());\n",
            "startLine": 134,
            "endLine": 134,
            "startColumn": 25,
            "endColumn": 76
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double[][] t=new double[probabilities.length][2];\n",
            "startLine": 60,
            "endLine": 60,
            "startColumn": 9,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double[][] t=new double[probabilities.length][2];\n",
            "startLine": 61,
            "endLine": 61,
            "startColumn": 9,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "Arrays.sort(t,new Comparator<double[]>(){\n  public int compare(  double[] o1,  double[] o2){\n    if (o2[1] > o1[1])     return 1;\n else     if (o2[1] == o1[1])     return 0;\n else     return -1;\n  }\n}\n);\n",
            "startLine": 65,
            "endLine": 71,
            "startColumn": 9,
            "endColumn": 12
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "Arrays.sort(t,new Comparator<double[]>(){\n  public int compare(  double[] o1,  double[] o2){\n    if (o2[1] > o1[1])     return 1;\n else     if (o2[1] == o1[1])     return 0;\n else     return -1;\n  }\n}\n);\n",
            "startLine": 66,
            "endLine": 72,
            "startColumn": 9,
            "endColumn": 12
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,String> info=candidate.getInfo();\n",
            "startLine": 72,
            "endLine": 72,
            "startColumn": 9,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,String> info=candidate.getInfo();\n",
            "startLine": 73,
            "endLine": 73,
            "startColumn": 9,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,Object> features=candidate.getFeatures();\n",
            "startLine": 73,
            "endLine": 73,
            "startColumn": 9,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,Object> features=candidate.getFeatures();\n",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 9,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONObject result=new JSONObject();\n",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 9,
            "endColumn": 46
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONObject result=new JSONObject();\n",
            "startLine": 75,
            "endLine": 75,
            "startColumn": 9,
            "endColumn": 46
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"file\",info.get(\"Path\"));\n",
            "startLine": 75,
            "endLine": 75,
            "startColumn": 9,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"file\",info.get(\"Path\"));\n",
            "startLine": 76,
            "endLine": 76,
            "startColumn": 9,
            "endColumn": 54
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"class_name\",info.get(\"SourceClass\"));\n",
            "startLine": 76,
            "endLine": 76,
            "startColumn": 9,
            "endColumn": 67
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"class_name\",info.get(\"SourceClass\"));\n",
            "startLine": 77,
            "endLine": 77,
            "startColumn": 9,
            "endColumn": 67
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"method_name\",info.get(\"Method\"));\n",
            "startLine": 77,
            "endLine": 77,
            "startColumn": 9,
            "endColumn": 63
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"method_name\",info.get(\"Method\"));\n",
            "startLine": 78,
            "endLine": 78,
            "startColumn": 9,
            "endColumn": 63
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,HashSet<String>> invocationSet=(HashMap<String,HashSet<String>>)features.get(\"InvocationSet\");\n",
            "startLine": 78,
            "endLine": 78,
            "startColumn": 9,
            "endColumn": 123
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<String,HashSet<String>> invocationSet=(HashMap<String,HashSet<String>>)features.get(\"InvocationSet\");\n",
            "startLine": 79,
            "endLine": 79,
            "startColumn": 9,
            "endColumn": 123
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"setOfTargetClass\",features.get(\"InvocationSet\"));\n",
            "startLine": 85,
            "endLine": 85,
            "startColumn": 9,
            "endColumn": 79
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"setOfTargetClass\",features.get(\"InvocationSet\"));\n",
            "startLine": 86,
            "endLine": 86,
            "startColumn": 9,
            "endColumn": 79
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONArray targetRecommends=new JSONArray();\n",
            "startLine": 88,
            "endLine": 88,
            "startColumn": 9,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONArray targetRecommends=new JSONArray();\n",
            "startLine": 89,
            "endLine": 89,
            "startColumn": 9,
            "endColumn": 54
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double p=t[i][1];\n",
            "startLine": 91,
            "endLine": 91,
            "startColumn": 13,
            "endColumn": 32
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "double p=t[i][1];\n",
            "startLine": 92,
            "endLine": 92,
            "startColumn": 13,
            "endColumn": 32
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONObject targetRecommend=new JSONObject();\n",
            "startLine": 96,
            "endLine": 96,
            "startColumn": 13,
            "endColumn": 59
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JSONObject targetRecommend=new JSONObject();\n",
            "startLine": 97,
            "endLine": 97,
            "startColumn": 13,
            "endColumn": 59
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=((ArrayList<String>)(features.get(\"targetClassNames\"))).get((int)t[i][0]);\n",
            "startLine": 97,
            "endLine": 97,
            "startColumn": 13,
            "endColumn": 114
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "String targetClassName=((ArrayList<String>)(features.get(\"targetClassNames\"))).get((int)t[i][0]);\n",
            "startLine": 98,
            "endLine": 98,
            "startColumn": 13,
            "endColumn": 114
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetRecommend.putIfAbsent(\"class_name\",targetClassName);\n",
            "startLine": 98,
            "endLine": 98,
            "startColumn": 13,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetRecommend.putIfAbsent(\"class_name\",targetClassName);\n",
            "startLine": 99,
            "endLine": 99,
            "startColumn": 13,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetRecommend.putIfAbsent(\"credibility\",\"\" + p);\n",
            "startLine": 99,
            "endLine": 99,
            "startColumn": 13,
            "endColumn": 64
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetRecommend.putIfAbsent(\"credibility\",\"\" + p);\n",
            "startLine": 100,
            "endLine": 100,
            "startColumn": 13,
            "endColumn": 64
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetRecommends.add(targetRecommend);\n",
            "startLine": 100,
            "endLine": 100,
            "startColumn": 13,
            "endColumn": 51
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetRecommends.add(targetRecommend);\n",
            "startLine": 101,
            "endLine": 101,
            "startColumn": 13,
            "endColumn": 51
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"TargetClassNameError: ClassName is null\");\n",
            "startLine": 104,
            "endLine": 104,
            "startColumn": 17,
            "endColumn": 79
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"TargetClassNameError: ClassName is null\");\n",
            "startLine": 116,
            "endLine": 116,
            "startColumn": 17,
            "endColumn": 79
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"Method 定位： \" + info.get(\"Method\"));\n",
            "startLine": 105,
            "endLine": 105,
            "startColumn": 17,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"Method 定位： \" + info.get(\"Method\"));\n",
            "startLine": 117,
            "endLine": 117,
            "startColumn": 17,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"refactoring\",targetRecommends);\n",
            "startLine": 118,
            "endLine": 118,
            "startColumn": 9,
            "endColumn": 61
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "result.putIfAbsent(\"refactoring\",targetRecommends);\n",
            "startLine": 141,
            "endLine": 141,
            "startColumn": 9,
            "endColumn": 61
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return result;\n",
            "startLine": 119,
            "endLine": 119,
            "startColumn": 9,
            "endColumn": 23
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return result;\n",
            "startLine": 142,
            "endLine": 142,
            "startColumn": 9,
            "endColumn": 23
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 107,
            "endLine": 110,
            "startColumn": 61,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 131,
            "endLine": 133,
            "startColumn": 61,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(iBinding: invocationTargetBinding.get(i))",
            "startLine": 106,
            "endLine": 113,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(iBinding: iBindings)",
            "startLine": 130,
            "endLine": 136,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(iBinding.toString());\n",
            "startLine": 109,
            "endLine": 109,
            "startColumn": 25,
            "endColumn": 65
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"被调用方法：\" + iBinding.toString());\n",
            "startLine": 132,
            "endLine": 132,
            "startColumn": 25,
            "endColumn": 76
          },
          "developerConfirmation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"被调用方法：\");\n",
            "startLine": 108,
            "endLine": 108,
            "startColumn": 25,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"被调用方法：\" + iBinding.toString());\n",
            "startLine": 132,
            "endLine": 132,
            "startColumn": 25,
            "endColumn": 76
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(iBinding.toString());\n",
            "startLine": 109,
            "endLine": 109,
            "startColumn": 25,
            "endColumn": 65
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "System.out.println(\"被调用字段：\" + \"line: \" + invocationTargetBindingLineNum.get(i).get(j) + \"   \" + expression.resolveTypeBinding().toString());\n",
            "startLine": 111,
            "endLine": 111,
            "startColumn": 21,
            "endColumn": 161
          },
          "developerConfirmation": false
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "url": "***/commit/4193e8d632b9c9b30cd6a1baf6c08d2467ac167c",
      "originalMethod": {
        "container": "candidate.FeatureEnvyCandidate",
        "type": "Method",
        "name": "FeatureEnvyCandidate",
        "filePath": "Client/src/main/java/candidate/FeatureEnvyCandidate.java",
        "startLine": 24,
        "endLine": 132,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "candidate.FeatureEnvyCandidate",
        "type": "Method",
        "name": "FeatureEnvyCandidate",
        "filePath": "Client/src/main/java/candidate/FeatureEnvyCandidate.java",
        "startLine": 30,
        "endLine": 148,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 37,
            "endLine": 40,
            "startColumn": 82,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 45,
            "endLine": 48,
            "startColumn": 85,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=false;\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 13,
            "endColumn": 27
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=false;\n",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 13,
            "endColumn": 27
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return;\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 13,
            "endColumn": 20
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return;\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 13,
            "endColumn": 20
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Super Constructor Invocation",
            "expression": "super();\n",
            "startLine": 25,
            "endLine": 25,
            "startColumn": 9,
            "endColumn": 17
          },
          "rightSideLocation": {
            "type": "Super Constructor Invocation",
            "expression": "super();\n",
            "startLine": 31,
            "endLine": 31,
            "startColumn": 9,
            "endColumn": 17
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.method=method;\n",
            "startLine": 26,
            "endLine": 26,
            "startColumn": 9,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.method=method;\n",
            "startLine": 33,
            "endLine": 33,
            "startColumn": 9,
            "endColumn": 30
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallHashSet=new HashSet<String>();\n",
            "startLine": 27,
            "endLine": 27,
            "startColumn": 9,
            "endColumn": 51
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallHashSet=new HashSet<String>();\n",
            "startLine": 34,
            "endLine": 34,
            "startColumn": 9,
            "endColumn": 51
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallList=new ArrayList<String>();\n",
            "startLine": 28,
            "endLine": 28,
            "startColumn": 9,
            "endColumn": 50
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallList=new ArrayList<String>();\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 9,
            "endColumn": 50
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=new HashSet<>();\n",
            "startLine": 29,
            "endLine": 29,
            "startColumn": 9,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=new HashSet<>();\n",
            "startLine": 36,
            "endLine": 36,
            "startColumn": 9,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=new HashMap<>();\n",
            "startLine": 31,
            "endLine": 31,
            "startColumn": 9,
            "endColumn": 41
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=new HashMap<>();\n",
            "startLine": 39,
            "endLine": 39,
            "startColumn": 9,
            "endColumn": 41
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "sourceClassBinding=null;\n",
            "startLine": 32,
            "endLine": 32,
            "startColumn": 9,
            "endColumn": 35
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "sourceClassBinding=null;\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 9,
            "endColumn": 35
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=true;\n",
            "startLine": 33,
            "endLine": 33,
            "startColumn": 9,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "valid=true;\n",
            "startLine": 41,
            "endLine": 41,
            "startColumn": 9,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "TypeEntitySet sourceClassMetric=new TypeEntitySet(sourceClassBinding);\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 9,
            "endColumn": 81
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "TypeEntitySet sourceClassMetric=new TypeEntitySet(sourceClassBinding);\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 9,
            "endColumn": 81
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "sourceClassMetric.calculate();\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 9,
            "endColumn": 39
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "sourceClassMetric.calculate();\n",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 9,
            "endColumn": 39
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> sourceClassEntitySet=(HashSet<String>)sourceClassMetric.getMetrics().get(sourceClassMetric.getName());\n",
            "startLine": 44,
            "endLine": 44,
            "startColumn": 9,
            "endColumn": 130
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> sourceClassEntitySet=(HashSet<String>)sourceClassMetric.getMetrics().get(sourceClassMetric.getName());\n",
            "startLine": 52,
            "endLine": 52,
            "startColumn": 9,
            "endColumn": 130
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MethodEntitySet methodMetric=new MethodEntitySet(method);\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 9,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MethodEntitySet methodMetric=new MethodEntitySet(method);\n",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 9,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodMetric.calculate();\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 9,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodMetric.calculate();\n",
            "startLine": 56,
            "endLine": 56,
            "startColumn": 9,
            "endColumn": 34
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallHashSet=(HashSet<String>)methodMetric.getMetrics().get(\"MethodCallHashSet\");\n",
            "startLine": 49,
            "endLine": 49,
            "startColumn": 9,
            "endColumn": 98
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallHashSet=(HashSet<String>)methodMetric.getMetrics().get(\"MethodCallHashSet\");\n",
            "startLine": 57,
            "endLine": 57,
            "startColumn": 9,
            "endColumn": 98
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallList=(ArrayList<String>)methodMetric.getMetrics().get(\"MethodCallList\");\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 9,
            "endColumn": 94
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodCallList=(ArrayList<String>)methodMetric.getMetrics().get(\"MethodCallList\");\n",
            "startLine": 58,
            "endLine": 58,
            "startColumn": 9,
            "endColumn": 94
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=(HashSet<String>)methodMetric.getMetrics().get(\"MethodEntitySet\");\n",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 9,
            "endColumn": 94
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "methodEntitySet=(HashSet<String>)methodMetric.getMetrics().get(\"MethodEntitySet\");\n",
            "startLine": 59,
            "endLine": 59,
            "startColumn": 9,
            "endColumn": 94
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=(HashMap<String,HashSet<String>>)methodMetric.getMetrics().get(\"InvocationSet\");\n",
            "startLine": 52,
            "endLine": 52,
            "startColumn": 9,
            "endColumn": 107
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationSet=(HashMap<String,HashSet<String>>)methodMetric.getMetrics().get(\"InvocationSet\");\n",
            "startLine": 60,
            "endLine": 60,
            "startColumn": 9,
            "endColumn": 107
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"methodName\",method.getName().toString());\n",
            "startLine": 54,
            "endLine": 54,
            "startColumn": 9,
            "endColumn": 65
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"methodName\",method.getName().toString());\n",
            "startLine": 62,
            "endLine": 62,
            "startColumn": 9,
            "endColumn": 65
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceClassName\",sourceClassBinding.getQualifiedName());\n",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 9,
            "endColumn": 80
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceClassName\",sourceClassBinding.getQualifiedName());\n",
            "startLine": 63,
            "endLine": 63,
            "startColumn": 9,
            "endColumn": 80
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JDeodorantDistance jddSource=new JDeodorantDistance(methodEntitySet,sourceClassEntitySet);\n",
            "startLine": 59,
            "endLine": 59,
            "startColumn": 9,
            "endColumn": 102
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JDeodorantDistance jddSource=new JDeodorantDistance(methodEntitySet,sourceClassEntitySet);\n",
            "startLine": 67,
            "endLine": 67,
            "startColumn": 9,
            "endColumn": 102
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "jddSource.calculate();\n",
            "startLine": 60,
            "endLine": 60,
            "startColumn": 9,
            "endColumn": 31
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "jddSource.calculate();\n",
            "startLine": 68,
            "endLine": 68,
            "startColumn": 9,
            "endColumn": 31
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceDistance\",(Double)jddSource.getMetrics().get(jddSource.getName()));\n",
            "startLine": 61,
            "endLine": 61,
            "startColumn": 9,
            "endColumn": 98
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceDistance\",(Double)jddSource.getMetrics().get(jddSource.getName()));\n",
            "startLine": 69,
            "endLine": 69,
            "startColumn": 9,
            "endColumn": 98
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "CouplingBetweenObject cboSource=new CouplingBetweenObject(methodCallHashSet,sourceClassEntitySet);\n",
            "startLine": 63,
            "endLine": 63,
            "startColumn": 9,
            "endColumn": 110
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "CouplingBetweenObject cboSource=new CouplingBetweenObject(methodCallHashSet,sourceClassEntitySet);\n",
            "startLine": 71,
            "endLine": 71,
            "startColumn": 9,
            "endColumn": 110
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "cboSource.calculate();\n",
            "startLine": 64,
            "endLine": 64,
            "startColumn": 9,
            "endColumn": 31
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "cboSource.calculate();\n",
            "startLine": 72,
            "endLine": 72,
            "startColumn": 9,
            "endColumn": 31
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceCBODistance\",cboSource.getMetrics().get(cboSource.getName()));\n",
            "startLine": 65,
            "endLine": 65,
            "startColumn": 9,
            "endColumn": 92
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceCBODistance\",cboSource.getMetrics().get(cboSource.getName()));\n",
            "startLine": 73,
            "endLine": 73,
            "startColumn": 9,
            "endColumn": 92
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MessagePassingCoupling mpcSource=new MessagePassingCoupling(methodCallList,sourceClassEntitySet);\n",
            "startLine": 67,
            "endLine": 67,
            "startColumn": 9,
            "endColumn": 109
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MessagePassingCoupling mpcSource=new MessagePassingCoupling(methodCallList,sourceClassEntitySet);\n",
            "startLine": 75,
            "endLine": 75,
            "startColumn": 9,
            "endColumn": 109
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "mpcSource.calculate();\n",
            "startLine": 68,
            "endLine": 68,
            "startColumn": 9,
            "endColumn": 31
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "mpcSource.calculate();\n",
            "startLine": 76,
            "endLine": 76,
            "startColumn": 9,
            "endColumn": 31
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceMPCDistance\",mpcSource.getMetrics().get(mpcSource.getName()));\n",
            "startLine": 69,
            "endLine": 69,
            "startColumn": 9,
            "endColumn": 92
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceMPCDistance\",mpcSource.getMetrics().get(mpcSource.getName()));\n",
            "startLine": 77,
            "endLine": 77,
            "startColumn": 9,
            "endColumn": 92
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName enSource=new EntityName(sourceClassBinding);\n",
            "startLine": 72,
            "endLine": 72,
            "startColumn": 9,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName enSource=new EntityName(sourceClassBinding);\n",
            "startLine": 80,
            "endLine": 80,
            "startColumn": 9,
            "endColumn": 66
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "enSource.calculate();\n",
            "startLine": 73,
            "endLine": 73,
            "startColumn": 9,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "enSource.calculate();\n",
            "startLine": 81,
            "endLine": 81,
            "startColumn": 9,
            "endColumn": 30
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceMethodNames\",enSource.getMetrics().get(enSource.getName()));\n",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 9,
            "endColumn": 90
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"sourceMethodNames\",enSource.getMetrics().get(enSource.getName()));\n",
            "startLine": 82,
            "endLine": 82,
            "startColumn": 9,
            "endColumn": 90
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName fnSourceMethod=new EntityName(method);\n",
            "startLine": 76,
            "endLine": 76,
            "startColumn": 9,
            "endColumn": 60
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName fnSourceMethod=new EntityName(method);\n",
            "startLine": 84,
            "endLine": 84,
            "startColumn": 9,
            "endColumn": 60
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "fnSourceMethod.calculate();\n",
            "startLine": 77,
            "endLine": 77,
            "startColumn": 9,
            "endColumn": 36
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "fnSourceMethod.calculate();\n",
            "startLine": 85,
            "endLine": 85,
            "startColumn": 9,
            "endColumn": 36
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"FieldsOfMethod\",fnSourceMethod.getMetrics().get(fnSourceMethod.getName()));\n",
            "startLine": 78,
            "endLine": 78,
            "startColumn": 9,
            "endColumn": 99
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"FieldsOfMethod\",fnSourceMethod.getMetrics().get(fnSourceMethod.getName()));\n",
            "startLine": 86,
            "endLine": 86,
            "startColumn": 9,
            "endColumn": 99
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"InvocationSet\",invocationSet);\n",
            "startLine": 80,
            "endLine": 80,
            "startColumn": 9,
            "endColumn": 54
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"InvocationSet\",invocationSet);\n",
            "startLine": 88,
            "endLine": 88,
            "startColumn": 9,
            "endColumn": 54
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"Path\",path);\n",
            "startLine": 82,
            "endLine": 82,
            "startColumn": 9,
            "endColumn": 32
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"Path\",path);\n",
            "startLine": 90,
            "endLine": 90,
            "startColumn": 9,
            "endColumn": 32
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"SourceClass\",sourceClassBinding.getQualifiedName());\n",
            "startLine": 83,
            "endLine": 83,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"SourceClass\",sourceClassBinding.getQualifiedName());\n",
            "startLine": 91,
            "endLine": 91,
            "startColumn": 9,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"Method\",Utils.getMethodSignature(method));\n",
            "startLine": 84,
            "endLine": 84,
            "startColumn": 9,
            "endColumn": 62
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "info.put(\"Method\",Utils.getMethodSignature(method));\n",
            "startLine": 92,
            "endLine": 92,
            "startColumn": 9,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> targetNames=new ArrayList<String>();\n",
            "startLine": 86,
            "endLine": 86,
            "startColumn": 9,
            "endColumn": 65
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<String> targetNames=new ArrayList<String>();\n",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 9,
            "endColumn": 65
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetDistances=new ArrayList<Double>();\n",
            "startLine": 87,
            "endLine": 87,
            "startColumn": 9,
            "endColumn": 69
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetDistances=new ArrayList<Double>();\n",
            "startLine": 95,
            "endLine": 95,
            "startColumn": 9,
            "endColumn": 69
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetCBODistances=new ArrayList<Double>();\n",
            "startLine": 88,
            "endLine": 88,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetCBODistances=new ArrayList<Double>();\n",
            "startLine": 96,
            "endLine": 96,
            "startColumn": 9,
            "endColumn": 72
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetMPCDistances=new ArrayList<>();\n",
            "startLine": 89,
            "endLine": 89,
            "startColumn": 9,
            "endColumn": 66
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<Double> targetMPCDistances=new ArrayList<>();\n",
            "startLine": 97,
            "endLine": 97,
            "startColumn": 9,
            "endColumn": 66
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<HashSet<String>> targetMethodNames=new ArrayList<>();\n",
            "startLine": 90,
            "endLine": 90,
            "startColumn": 9,
            "endColumn": 74
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ArrayList<HashSet<String>> targetMethodNames=new ArrayList<>();\n",
            "startLine": 98,
            "endLine": 98,
            "startColumn": 9,
            "endColumn": 74
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "TypeEntitySet targetClassMetric=new TypeEntitySet(targetClassBinding);\n",
            "startLine": 98,
            "endLine": 98,
            "startColumn": 13,
            "endColumn": 85
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "TypeEntitySet targetClassMetric=new TypeEntitySet(targetClassBinding);\n",
            "startLine": 114,
            "endLine": 114,
            "startColumn": 13,
            "endColumn": 85
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClassMetric.calculate();\n",
            "startLine": 99,
            "endLine": 99,
            "startColumn": 13,
            "endColumn": 43
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetClassMetric.calculate();\n",
            "startLine": 115,
            "endLine": 115,
            "startColumn": 13,
            "endColumn": 43
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> targetClassEntitySet=(HashSet<String>)targetClassMetric.getMetrics().get(targetClassMetric.getName());\n",
            "startLine": 100,
            "endLine": 100,
            "startColumn": 13,
            "endColumn": 134
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashSet<String> targetClassEntitySet=(HashSet<String>)targetClassMetric.getMetrics().get(targetClassMetric.getName());\n",
            "startLine": 116,
            "endLine": 116,
            "startColumn": 13,
            "endColumn": 134
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetNames.add(targetClassBinding.getQualifiedName());\n",
            "startLine": 101,
            "endLine": 101,
            "startColumn": 13,
            "endColumn": 68
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetNames.add(targetClassBinding.getQualifiedName());\n",
            "startLine": 117,
            "endLine": 117,
            "startColumn": 13,
            "endColumn": 68
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JDeodorantDistance jddTarget=new JDeodorantDistance(methodEntitySet,targetClassEntitySet);\n",
            "startLine": 103,
            "endLine": 103,
            "startColumn": 13,
            "endColumn": 106
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "JDeodorantDistance jddTarget=new JDeodorantDistance(methodEntitySet,targetClassEntitySet);\n",
            "startLine": 119,
            "endLine": 119,
            "startColumn": 13,
            "endColumn": 106
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "jddTarget.calculate();\n",
            "startLine": 104,
            "endLine": 104,
            "startColumn": 13,
            "endColumn": 35
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "jddTarget.calculate();\n",
            "startLine": 120,
            "endLine": 120,
            "startColumn": 13,
            "endColumn": 35
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetDistances.add((Double)jddTarget.getMetrics().get(jddTarget.getName()));\n",
            "startLine": 105,
            "endLine": 105,
            "startColumn": 13,
            "endColumn": 91
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetDistances.add((Double)jddTarget.getMetrics().get(jddTarget.getName()));\n",
            "startLine": 121,
            "endLine": 121,
            "startColumn": 13,
            "endColumn": 91
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "CouplingBetweenObject cboTarget=new CouplingBetweenObject(methodCallHashSet,targetClassEntitySet);\n",
            "startLine": 107,
            "endLine": 107,
            "startColumn": 13,
            "endColumn": 114
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "CouplingBetweenObject cboTarget=new CouplingBetweenObject(methodCallHashSet,targetClassEntitySet);\n",
            "startLine": 123,
            "endLine": 123,
            "startColumn": 13,
            "endColumn": 114
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "cboTarget.calculate();\n",
            "startLine": 108,
            "endLine": 108,
            "startColumn": 13,
            "endColumn": 35
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "cboTarget.calculate();\n",
            "startLine": 124,
            "endLine": 124,
            "startColumn": 13,
            "endColumn": 35
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetCBODistances.add((Double)cboTarget.getMetrics().get(cboTarget.getName()));\n",
            "startLine": 109,
            "endLine": 109,
            "startColumn": 13,
            "endColumn": 94
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetCBODistances.add((Double)cboTarget.getMetrics().get(cboTarget.getName()));\n",
            "startLine": 125,
            "endLine": 125,
            "startColumn": 13,
            "endColumn": 94
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MessagePassingCoupling mpcTarget=new MessagePassingCoupling(methodCallList,targetClassEntitySet);\n",
            "startLine": 111,
            "endLine": 111,
            "startColumn": 13,
            "endColumn": 113
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "MessagePassingCoupling mpcTarget=new MessagePassingCoupling(methodCallList,targetClassEntitySet);\n",
            "startLine": 127,
            "endLine": 127,
            "startColumn": 13,
            "endColumn": 113
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "mpcTarget.calculate();\n",
            "startLine": 112,
            "endLine": 112,
            "startColumn": 13,
            "endColumn": 35
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "mpcTarget.calculate();\n",
            "startLine": 128,
            "endLine": 128,
            "startColumn": 13,
            "endColumn": 35
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetMPCDistances.add((Double)mpcTarget.getMetrics().get(mpcTarget.getName()));\n",
            "startLine": 113,
            "endLine": 113,
            "startColumn": 13,
            "endColumn": 94
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetMPCDistances.add((Double)mpcTarget.getMetrics().get(mpcTarget.getName()));\n",
            "startLine": 129,
            "endLine": 129,
            "startColumn": 13,
            "endColumn": 94
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName enTarget=new EntityName(targetClassBinding);\n",
            "startLine": 115,
            "endLine": 115,
            "startColumn": 13,
            "endColumn": 70
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "EntityName enTarget=new EntityName(targetClassBinding);\n",
            "startLine": 131,
            "endLine": 131,
            "startColumn": 13,
            "endColumn": 70
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "enTarget.calculate();\n",
            "startLine": 116,
            "endLine": 116,
            "startColumn": 13,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "enTarget.calculate();\n",
            "startLine": 132,
            "endLine": 132,
            "startColumn": 13,
            "endColumn": 34
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "targetMethodNames.add((HashSet<String>)enTarget.getMetrics().get(enTarget.getName()));\n",
            "startLine": 117,
            "endLine": 117,
            "startColumn": 13,
            "endColumn": 100
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "targetMethodNames.add((HashSet<String>)enTarget.getMetrics().get(enTarget.getName()));\n",
            "startLine": 133,
            "endLine": 133,
            "startColumn": 13,
            "endColumn": 100
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetClassNames\",targetNames);\n",
            "startLine": 120,
            "endLine": 120,
            "startColumn": 9,
            "endColumn": 55
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetClassNames\",targetNames);\n",
            "startLine": 136,
            "endLine": 136,
            "startColumn": 9,
            "endColumn": 55
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetDistances\",targetDistances);\n",
            "startLine": 121,
            "endLine": 121,
            "startColumn": 9,
            "endColumn": 58
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetDistances\",targetDistances);\n",
            "startLine": 137,
            "endLine": 137,
            "startColumn": 9,
            "endColumn": 58
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetCBODistances\",targetCBODistances);\n",
            "startLine": 122,
            "endLine": 122,
            "startColumn": 9,
            "endColumn": 64
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetCBODistances\",targetCBODistances);\n",
            "startLine": 138,
            "endLine": 138,
            "startColumn": 9,
            "endColumn": 64
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetMPCDistances\",targetMPCDistances);\n",
            "startLine": 123,
            "endLine": 123,
            "startColumn": 9,
            "endColumn": 64
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetMPCDistances\",targetMPCDistances);\n",
            "startLine": 139,
            "endLine": 139,
            "startColumn": 9,
            "endColumn": 64
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetMethodNames\",targetMethodNames);\n",
            "startLine": 124,
            "endLine": 124,
            "startColumn": 9,
            "endColumn": 62
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "features.put(\"targetMethodNames\",targetMethodNames);\n",
            "startLine": 140,
            "endLine": 140,
            "startColumn": 9,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding targetClassBinding=iTypeBindingHashSetEntry.getKey();\n",
            "startLine": 95,
            "endLine": 95,
            "startColumn": 13,
            "endColumn": 81
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding targetClassBinding=targetClassEntry.getKey();\n",
            "startLine": 103,
            "endLine": 103,
            "startColumn": 13,
            "endColumn": 73
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(iTypeBindingHashSetEntry: targetClassBindings.entrySet())",
            "startLine": 92,
            "endLine": 119,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Enhanced For Statement",
            "expression": "for(targetClassEntry: targetClassExpressions.entrySet())",
            "startLine": 100,
            "endLine": 135,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<ITypeBinding,HashSet<IBinding>> targetClassBindings=parseTargetCandidate();\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 9,
            "endColumn": 94
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "HashMap<ITypeBinding,List<Expression>> targetClassExpressions=parseTargetCandidate();\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 9,
            "endColumn": 97
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationTargetBinding=new ArrayList<>();\n",
            "startLine": 30,
            "endLine": 30,
            "startColumn": 9,
            "endColumn": 53
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationTargetExpression=new ArrayList<>();\n",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 9,
            "endColumn": 56
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationTargetBinding.add(iTypeBindingHashSetEntry.getValue());\n",
            "startLine": 96,
            "endLine": 96,
            "startColumn": 13,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "List<Expression> expressions=targetClassEntry.getValue();\n",
            "startLine": 104,
            "endLine": 104,
            "startColumn": 13,
            "endColumn": 72
          },
          "developerConfirmation": false
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationTargetBinding.add(iTypeBindingHashSetEntry.getValue());\n",
            "startLine": 96,
            "endLine": 96,
            "startColumn": 13,
            "endColumn": 78
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "invocationTargetExpression.add(expressions);\n",
            "startLine": 106,
            "endLine": 106,
            "startColumn": 13,
            "endColumn": 57
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "76746566f8f3dbbe962fbd0320f1094e175dcc98",
      "url": "***/commit/76746566f8f3dbbe962fbd0320f1094e175dcc98",
      "originalMethod": {
        "container": "visitor.FeatureEnvyEnclosingVisitor",
        "type": "Method",
        "name": "FeatureEnvyEnclosingVisitor",
        "filePath": "Client/src/main/java/visitor/FeatureEnvyEnclosingVisitor.java",
        "startLine": 32,
        "endLine": 40,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "visitor.FeatureEnvyEnclosingVisitor",
        "type": "Method",
        "name": "FeatureEnvyEnclosingVisitor",
        "filePath": "Client/src/main/java/visitor/FeatureEnvyEnclosingVisitor.java",
        "startLine": 28,
        "endLine": 35,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "For Statement",
            "expression": "for(ITypeBinding declaring=binding.getDeclaringClass(); declaring != null && !Modifier.isStatic(binding.getModifiers()); declaring=declaring.getDeclaringClass())",
            "startLine": 37,
            "endLine": 39,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "For Statement",
            "expression": "for(ITypeBinding declaring=binding.getDeclaringClass(); declaring != null && !Modifier.isStatic(binding.getModifiers()); declaring=declaring.getDeclaringClass())",
            "startLine": 32,
            "endLine": 34,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "this.fEnclosingTypes.add(declaring);\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 13,
            "endColumn": 49
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "this.fEnclosingTypes.add(declaring);\n",
            "startLine": 33,
            "endLine": 33,
            "startColumn": 13,
            "endColumn": 49
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "Assert.isNotNull(binding);\n",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 9,
            "endColumn": 35
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "Assert.isNotNull(binding);\n",
            "startLine": 30,
            "endLine": 30,
            "startColumn": 9,
            "endColumn": 35
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "status=true;\n",
            "startLine": 34,
            "endLine": 34,
            "startColumn": 9,
            "endColumn": 23
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "status=false;\n",
            "startLine": 29,
            "endLine": 29,
            "startColumn": 9,
            "endColumn": 24
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "76746566f8f3dbbe962fbd0320f1094e175dcc98",
      "url": "***/commit/76746566f8f3dbbe962fbd0320f1094e175dcc98",
      "originalMethod": {
        "container": "visitor.FeatureEnvyEnclosingVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/FeatureEnvyEnclosingVisitor.java",
        "startLine": 42,
        "endLine": 81,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "visitor.FeatureEnvyEnclosingVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/FeatureEnvyEnclosingVisitor.java",
        "startLine": 37,
        "endLine": 73,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(binding instanceof IVariableBinding)",
            "startLine": 51,
            "endLine": 63,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(binding instanceof IVariableBinding)",
            "startLine": 44,
            "endLine": 56,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 51,
            "endLine": 57,
            "startColumn": 50,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "Block",
            "expression": "{",
            "startLine": 44,
            "endLine": 50,
            "startColumn": 50,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "enclosingx=(IVariableBinding)binding;\n",
            "startLine": 52,
            "endLine": 52,
            "startColumn": 13,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "enclosingx=(IVariableBinding)binding;\n",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 13,
            "endColumn": 53
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isStatic(enclosingx.getModifiers()))",
            "startLine": 53,
            "endLine": 55,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isStatic(enclosingx.getModifiers()))",
            "startLine": 46,
            "endLine": 48,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 54,
            "endLine": 54,
            "startColumn": 17,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 17,
            "endColumn": 30
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "declaring=enclosingx.getDeclaringClass();\n",
            "startLine": 56,
            "endLine": 56,
            "startColumn": 13,
            "endColumn": 56
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "declaring=enclosingx.getDeclaringClass();\n",
            "startLine": 49,
            "endLine": 49,
            "startColumn": 13,
            "endColumn": 56
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(binding instanceof IMethodBinding)",
            "startLine": 57,
            "endLine": 63,
            "startColumn": 16,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(binding instanceof IMethodBinding)",
            "startLine": 50,
            "endLine": 56,
            "startColumn": 16,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IMethodBinding method=(IMethodBinding)binding;\n",
            "startLine": 58,
            "endLine": 58,
            "startColumn": 13,
            "endColumn": 61
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IMethodBinding method=(IMethodBinding)binding;\n",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 13,
            "endColumn": 62
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isStatic(method.getModifiers()))",
            "startLine": 59,
            "endLine": 61,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(Flags.isStatic(method.getModifiers()))",
            "startLine": 52,
            "endLine": 54,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 60,
            "endLine": 60,
            "startColumn": 17,
            "endColumn": 30
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 53,
            "endLine": 53,
            "startColumn": 17,
            "endColumn": 30
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "declaring=method.getDeclaringClass();\n",
            "startLine": 62,
            "endLine": 62,
            "startColumn": 13,
            "endColumn": 52
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "declaring=method.getDeclaringClass();\n",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 13,
            "endColumn": 52
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(declaring != null)",
            "startLine": 65,
            "endLine": 78,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(declaring != null)",
            "startLine": 57,
            "endLine": 70,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "While Statement",
            "expression": "while(iterator.hasNext())",
            "startLine": 70,
            "endLine": 77,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "type": "While Statement",
            "expression": "while(iterator.hasNext())",
            "startLine": 62,
            "endLine": 69,
            "startColumn": 13,
            "endColumn": 14
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(enclosing.getKey().equals(declaring.getKey()))",
            "startLine": 73,
            "endLine": 76,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(enclosing.getKey().equals(declaring.getKey()))",
            "startLine": 65,
            "endLine": 68,
            "startColumn": 17,
            "endColumn": 18
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IBinding binding=node.resolveBinding();\n",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 9,
            "endColumn": 50
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IBinding binding=node.resolveBinding();\n",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 9,
            "endColumn": 50
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding declaring=null;\n",
            "startLine": 49,
            "endLine": 49,
            "startColumn": 9,
            "endColumn": 39
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding declaring=null;\n",
            "startLine": 42,
            "endLine": 42,
            "startColumn": 9,
            "endColumn": 39
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding enclosingx;\n",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 9,
            "endColumn": 37
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "IVariableBinding enclosingx;\n",
            "startLine": 43,
            "endLine": 43,
            "startColumn": 9,
            "endColumn": 37
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "declaring=declaring.getTypeDeclaration();\n",
            "startLine": 66,
            "endLine": 66,
            "startColumn": 13,
            "endColumn": 56
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "declaring=declaring.getTypeDeclaration();\n",
            "startLine": 58,
            "endLine": 58,
            "startColumn": 13,
            "endColumn": 56
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "enclosingx=null;\n",
            "startLine": 67,
            "endLine": 67,
            "startColumn": 13,
            "endColumn": 31
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "enclosingx=null;\n",
            "startLine": 59,
            "endLine": 59,
            "startColumn": 13,
            "endColumn": 31
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Iterator iterator=this.fEnclosingTypes.iterator();\n",
            "startLine": 68,
            "endLine": 68,
            "startColumn": 13,
            "endColumn": 65
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "Iterator iterator=this.fEnclosingTypes.iterator();\n",
            "startLine": 60,
            "endLine": 60,
            "startColumn": 13,
            "endColumn": 65
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding enclosing=(ITypeBinding)iterator.next();\n",
            "startLine": 71,
            "endLine": 71,
            "startColumn": 17,
            "endColumn": 72
          },
          "rightSideLocation": {
            "type": "Variable Declaration Statement",
            "expression": "ITypeBinding enclosing=(ITypeBinding)iterator.next();\n",
            "startLine": 63,
            "endLine": 63,
            "startColumn": 17,
            "endColumn": 73
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 75,
            "endLine": 75,
            "startColumn": 21,
            "endColumn": 34
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 67,
            "endLine": 67,
            "startColumn": 21,
            "endColumn": 34
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 80,
            "endLine": 80,
            "startColumn": 9,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 72,
            "endLine": 72,
            "startColumn": 9,
            "endColumn": 22
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(node == null)",
            "startLine": 44,
            "endLine": 46,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(binding == null)",
            "startLine": 39,
            "endLine": 41,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 13,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return true;\n",
            "startLine": 40,
            "endLine": 40,
            "startColumn": 13,
            "endColumn": 25
          },
          "developerConfirmation": false
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "status=false;\n",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 21,
            "endColumn": 36
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "status=true;\n",
            "startLine": 66,
            "endLine": 66,
            "startColumn": 21,
            "endColumn": 35
          },
          "developerConfirmation": true
        }
      ]
    },
    {
      "repository": "***.git",
      "sha1": "76746566f8f3dbbe962fbd0320f1094e175dcc98",
      "url": "***/commit/76746566f8f3dbbe962fbd0320f1094e175dcc98",
      "originalMethod": {
        "container": "visitor.FeatureEnvyEnclosingVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/FeatureEnvyEnclosingVisitor.java",
        "startLine": 83,
        "endLine": 95,
        "startColumn": 5,
        "endColumn": 6
      },
      "refactoredMethod": {
        "container": "visitor.FeatureEnvyEnclosingVisitor",
        "type": "Method",
        "name": "visit",
        "filePath": "Client/src/main/java/visitor/FeatureEnvyEnclosingVisitor.java",
        "startLine": 75,
        "endLine": 82,
        "startColumn": 5,
        "endColumn": 6
      },
      "commonMatching": [
        {
          "leftSideLocation": {
            "type": "If Statement",
            "expression": "if(node.getQualifier() != null)",
            "startLine": 89,
            "endLine": 92,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "type": "If Statement",
            "expression": "if(node.getQualifier() != null)",
            "startLine": 76,
            "endLine": 79,
            "startColumn": 9,
            "endColumn": 10
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 9,
            "endColumn": 22
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 81,
            "endLine": 81,
            "startColumn": 9,
            "endColumn": 22
          },
          "developerConfirmation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 86,
            "endLine": 86,
            "startColumn": 13,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 78,
            "endLine": 78,
            "startColumn": 13,
            "endColumn": 26
          },
          "developerConfirmation": false
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 91,
            "endLine": 91,
            "startColumn": 13,
            "endColumn": 26
          },
          "rightSideLocation": {
            "type": "Return Statement",
            "expression": "return false;\n",
            "startLine": 78,
            "endLine": 78,
            "startColumn": 13,
            "endColumn": 26
          },
          "developerConfirmation": true
        },
        {
          "leftSideLocation": {
            "type": "Expression Statement",
            "expression": "status=false;\n",
            "startLine": 90,
            "endLine": 90,
            "startColumn": 13,
            "endColumn": 28
          },
          "rightSideLocation": {
            "type": "Expression Statement",
            "expression": "status=true;\n",
            "startLine": 77,
            "endLine": 77,
            "startColumn": 13,
            "endColumn": 27
          },
          "developerConfirmation": true
        }
      ]
    }
  ]
}